`
--reload language
if(uiTranslationFile) then
	Infinity_DoFile("L_" .. uiTranslationFile)
else
	Infinity_DoFile("L_en_us")
end

listMetaInfo = {}
combatLog = {}

`
menu
{
	name "BUBB_AUTOLOOT_OPTIONS"
	modal
	onOpen 
	"
		if not worldScreen:CheckIfPaused() then
			bubbAutolootOptionsPausedOnOpen = false
			worldScreen:TogglePauseGame(true)
		else
			bubbAutolootOptionsPausedOnOpen = true
		end

		initializeAutolootOptionsMenu()
	"
	onClose 
	"
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsActive', tostring(bubbAutolootOptionsActive))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsOnToggle', tostring(bubbAutolootOptionsOnToggle))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsCriticalItemsToggle', tostring(bubbAutolootOptionsCriticalItemsToggle))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsEnchantedWeaponsToggle',  tostring(bubbAutolootOptionsEnchantedWeaponsToggle))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsEnchantedWeaponsField', bubbAutolootOptionsEnchantedWeaponsField)
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsGoldToggle', tostring(bubbAutolootOptionsGoldToggle))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsPriceToggle', tostring(bubbAutolootOptionsPriceToggle))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsPriceField', bubbAutolootOptionsPriceField)
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsPricePerWeightToggle', tostring(bubbAutolootOptionsPricePerWeightToggle))
		Infinity_SetINIValue('Bubb Autoloot', 'bubbAutolootOptionsPricePerWeightField', bubbAutolootOptionsPricePerWeightField)
		if not bubbAutolootOptionsPausedOnOpen then
			worldScreen:TogglePauseGame(true)
		end
	"
	-- Background
	label
	{
		name "bubbAutolootOptionsBackground"
		area 390 347 500 265
		rectangle 0
	}
	-- Exit Button
	button
	{
		name "bubbAutolootOptionsExitButton"
		bam GUIOSW
		area 836 357 44 44
		sequence 2
		action 
		"
			Infinity_PopMenu('BUBB_AUTOLOOT_OPTIONS')	
		"
	}
	-- Autoloot On
	button
	{
		name "bubbAutolootOptionsOnToggle"
		area 400 362 22 22
		bam ROUNDBUT
		scaleToClip
		toggle bubbAutolootOptionsOnToggle
	}
	label
	{
		name "bubbAutolootOptionsOn"
		area 442 357 356 32
		text lua "stringsAll.pickupLootOn"
		text style 'normal'
		text align left center
	}
	-- Critical Items
	button
	{
		name "bubbAutolootOptionsCriticalItemsToggle"
		area 400 404 22 22
		bam ROUNDBUT
		scaleToClip
		toggle bubbAutolootOptionsCriticalItemsToggle
	}
	label
	{
		name "bubbAutolootOptionsCriticalItems"
		area 442 399 356 32
		text lua "stringsAll.pickupLootCritical"
		text style 'normal'
		text align left center
	}
	-- Enchanted Weapons
	button
	{
		name "bubbAutolootOptionsEnchantedWeaponsToggle"
		area 400 445 22 22
		bam ROUNDBUT
		scaleToClip
		toggle bubbAutolootOptionsEnchantedWeaponsToggle
	}
	label
	{
		name "bubbAutolootOptionsEnchantedWeapons"
		area 442 441 356 32
		text lua "stringsAll.pickupLootEnch"
		text style 'normal'
		text align left center
	}
	edit
	{
		name "bubbAutolootOptionsEnchantedWeaponsField"
		area 803 441 77 32
		var bubbAutolootOptionsEnchantedWeaponsField
		text style "edit"
		align center center
		maxlines 1
		fill 220 215 190 65
		action
		"
			if((tonumber(letter_pressed) ~= nil
				and #tostring(bubbAutolootOptionsEnchantedWeaponsField) < 1)
				or not letter_pressed)
			then
				return 1
			else
				return 0
			end
		"
	}
	-- Gold
	button
	{
		name "bubbAutolootOptionsGoldToggle"
		area 400 488 22 22
		bam ROUNDBUT
		scaleToClip
		toggle bubbAutolootOptionsGoldToggle
	}
	label
	{
		name "bubbAutolootOptionsGold"
		area 442 483 356 32
		text lua "stringsAll.pickupLootGold"
		text style 'normal'
		text align left center
	}
	-- Price
	button
	{
		name "bubbAutolootOptionsPriceToggle"
		area 400 530 22 22
		bam ROUNDBUT
		scaleToClip
		toggle bubbAutolootOptionsPriceToggle
	}
	label
	{
		name "bubbAutolootOptionsPrice"
		area 442 525 356 32
		text lua "stringsAll.pickupLootPrice"
		text style 'normal'
		text align left center
	}
	edit
	{
		name "bubbAutolootOptionsPriceField"
		area 803 525 77 32
		var bubbAutolootOptionsPriceField
		text style "edit"
		align center center
		maxlines 1
		fill 220 215 190 65
		action
		"
			if((tonumber(letter_pressed) ~= nil
				and #tostring(bubbAutolootOptionsPriceField) < 5)
				or not letter_pressed)
			then
				return 1
			else
				return 0
			end
		"
	}
	-- Price per Weight
	button
	{
		name "bubbAutolootOptionsPricePerWeightToggle"
		area 400 572 22 22
		bam ROUNDBUT
		scaleToClip
		toggle bubbAutolootOptionsPricePerWeightToggle
	}
	label
	{
		name "bubbAutolootOptionsPricePerWeight"
		area 442 567 356 32
		text lua "stringsAll.pickupLootWPrice"
		text style 'normal'
		text align left center
	}
	edit
	{
		name "bubbAutolootOptionsPricePerWeightField"
		area 803 567 77 32
		var bubbAutolootOptionsPricePerWeightField
		text style "edit"
		align center center
		maxlines 1
		fill 220 215 190 65
		action
		"
			if((tonumber(letter_pressed) ~= nil
				and #tostring(bubbAutolootOptionsPricePerWeightField) < 5)
				or not letter_pressed)
			then
				return 1
			else
				return 0
			end
		"
	}
}
`

currentPanelID = 0

function displayTHAC()
	thactxt = ''
	thactxt =  characters[currentID].THAC0.current

	if (characters[currentID].THAC0.offhand ) then
		thactxt = thactxt .. '\n' .. characters[currentID].THAC0.offhand
	end

	return thactxt
end

function displayCompiledAC()
	local compiledAC = characters[currentID].AC.current

	if characters[currentID].AC.crushing ~= 0 or characters[currentID].AC.missile ~= 0 or characters[currentID].AC.piercing ~= 0 or characters[currentID].AC.slashing ~= 0 then
		compiledAC = compiledAC .. " (" .. t("MODIFIERS_LABEL") .. ": "

		local numMods = 0
		if characters[currentID].AC.crushing > 0 then
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.crushing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_CRUSHING")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.crushing < 0 then
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.crushing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_CRUSHING")
			removeStringTokenLua("<ACTOKEN>")
		end

		if characters[currentID].AC.missile > 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.missile)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_MISSILE")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.missile < 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.missile)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_MISSILE")
			removeStringTokenLua("<ACTOKEN>")
		end

		if characters[currentID].AC.piercing > 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.piercing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_PIERCING")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.piercing < 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.piercing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_PIERCING")
			removeStringTokenLua("<ACTOKEN>")
		end

		if characters[currentID].AC.slashing > 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>","+"..characters[currentID].AC.slashing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_SLASHING")
			removeStringTokenLua("<ACTOKEN>")
		elseif characters[currentID].AC.slashing < 0 then
			if numMods > 0 then
				compiledAC = compiledAC .. ", "
			end
			numMods = numMods + 1
			setStringTokenLua("<ACTOKEN>",characters[currentID].AC.slashing)
			compiledAC = compiledAC .. " " .. t("ACMOD_VS_SLASHING")
			removeStringTokenLua("<ACTOKEN>")
		end

		compiledAC = compiledAC .. ")"
	end

	return compiledAC
end

function displaySTR()
	strtxt = characters[currentID].attr.str.current

	if characters[currentID].attr.str.current == 18 and characters[currentID].attr.str.extra > 0 then
		if characters[currentID].attr.str.extra == 100 then
			strtxt = strtxt .. '/00'
		elseif characters[currentID].attr.str.extra > 9 then
			strtxt = strtxt .. '/' .. characters[currentID].attr.str.extra
		elseif characters[currentID].attr.str.extra > 0 then
			strtxt = strtxt .. '/0' .. characters[currentID].attr.str.extra
		end
	end
	if(characters[currentID].attr.str.current > characters[currentID].attr.str.base or characters[currentID].attr.str.extra > characters[currentID].attr.str.extraBase) then
		strtxt = '^G' .. strtxt .. '^-'
	end
	if(characters[currentID].attr.str.current < characters[currentID].attr.str.base or characters[currentID].attr.str.extra < characters[currentID].attr.str.extraBase) then
		strtxt = '^R' .. strtxt .. '^-'
	end
	return strtxt
end

function updateAttrTable()
	
	statusEffects = { }
	for k, v in pairs(characters[currentID].statusEffects) do
		table.insert(statusEffects, v)
	end

	listItems = { }
	listTest = { }
	
	zZclassDescription = {}

	lastID = currentID
	helpTextString = ''
	showClassInfo = 0
	zZshowCharInfo = 0
	showJustText = 0
	showMemorized = 0
	showBothLists = 0
	showStats = 1
	showAbilityBonuses = 0

	otherlist = { }

	attributeItems = {
		{ characters[currentID].attr.str, 9582 },
		{ characters[currentID].attr.dex, 9584 },
		{ characters[currentID].attr.con, 9583 },
		{ characters[currentID].attr.int, 9585 },
		{ characters[currentID].attr.wis, 9586 },
		{ characters[currentID].attr.cha, 9587 }
		}

	if currentTab == 1 then
		showJustText = 0
		showStats = 0
		showClassInfo = 0
		zZshowCharInfo = 1
		Infinity_SetArea('zZcharacterInfo', nil, 272, nil, 374)
		listItems = {}
		helpTextString = '^O' .. t('CHARACTER_SHEET_LABEL') .. '^-'
		zZcreateInfoTable(characters[currentID])
	elseif currentTab == 2 then
		showJustText = 0
		showStats = 0
		showClassInfo = 1
		zZshowCharInfo = 0
		zZclassDescription = {}
		zZgetClassStr(characters[currentID])
	elseif currentTab == 3 then
		listItems =	{
			{ characters[currentID].proficiencies.lore.strRef,  characters[currentID].proficiencies.lore.current },
			{ characters[currentID].proficiencies.reputation.strRef, characters[currentID].proficiencies.reputation.current, characters[currentID].proficiencies.reputation.helpStrRef },
		}
		for k, v in ipairs(characters[currentID].proficiencies.class_skills) do
			table.insert(listItems, {v.strRef, v.current})
		end
		showJustText = 1
		showStats = 0
		helpTextString = ''
		for k, v in ipairs(listItems) do
			if (v[3] == nil or v[3] == '') then
				helpTextString = helpTextString .. Infinity_FetchString( v[1])  .. ': ' .. v[2] .. '^-' .. '\n'
			else
				helpTextString = helpTextString .. Infinity_FetchString( v[1])  .. ': ' .. v[2] .. '^-' .. '\n' .. Infinity_FetchString(v[3]) ..'\n \n'
			end
		end
	elseif currentTab == 4 then
		listItems = {	}
		showJustText = 1
		showStats = 0
		if openAdvance == 0 then
			for k, v in ipairs(listItems) do
				helpTextString = helpTextString .. '^M' .. Infinity_FetchString( v[1])  .. ': '.. v[2] .. '^-' .. '\n' .. Infinity_FetchString(v[3])  ..'\n \n'
			end
		else
			for k, v in ipairs(listItems) do				
				helpTextString = helpTextString .. '^M' .. Infinity_FetchString( v[1])  .. ': '.. v[2] .. '^-' ..'\n'
			end
		end
	elseif currentTab == 8 then
		listItems = {	}
		for k, v in ipairs(characters[currentID].proficiencies.ability) do
			table.insert(listItems, {v.strRef, v.current, v.helpStrRef})
		end
		showAbilityBonuses = 1
		showJustText = 0
		showStats = 0
		for k, v in ipairs(listItems) do
			helpTextString = helpTextString .. '^M' .. v[2] .. '\n \n'
		end
	elseif currentTab == 9 then
		showJustText = 0
		showStats = 0
		showClassInfo = 0
		zZshowCharInfo = 2
		Infinity_SetArea('zZcharacterInfo', nil, 242, nil, 404)
		listItems = {}
		helpTextString = ''
		zZcreateInfoTableCombat(characters[currentID])
	elseif currentTab == 6 then
		otherlist = { 
			{ characters[currentID].Stats.bestenemy.strRef, characters[currentID].Stats.bestenemy.current, ' ' },
			{ characters[currentID].Stats.timespent.strRef, characters[currentID].Stats.timespent.current, ' '},
			{ characters[currentID].Stats.favspell.strRef, characters[currentID].Stats.favspell.current, ' '},
			{ characters[currentID].Stats.favweapon.strRef, characters[currentID].Stats.favweapon.current, ' '},
		}
		listItems = {
			{ '', '', ''},
			{ characters[currentID].Stats.partychapxp.strRef, characters[currentID].Stats.partychapxp.current .. '%', characters[currentID].Stats.partygamexp.current .. '%'},
			{ characters[currentID].Stats.partychapkills.strRef, characters[currentID].Stats.partychapkills.current .. '%', characters[currentID].Stats.partygamekills.current .. '%'},
			{ characters[currentID].Stats.chapxpvalue.strRef, characters[currentID].Stats.chapxpvalue.current, characters[currentID].Stats.gamexpvalue.current},
			{ characters[currentID].Stats.chapkills.strRef, characters[currentID].Stats.chapkills.current, characters[currentID].Stats.gamekills.current},
		}
	elseif currentTab == 7 then
		listItems = {	}
		showJustText = 1
		showStats = 0
		showClassInfo = 0
		zZshowCharInfo = 0
		helpTextString = Infinity_FetchString(characters[currentID].biography)
	elseif currentTab == 5 then
		listItems = {	}
		showJustText = 1
		showStats = 0
		helpTextString = characters[currentID].kitDesc
	else
		listItems = { }
	end

	characterViewable = characterScreen:IsCharacterViewable()
	showClassInfo = showClassInfo == 1 and characterViewable == true
	showJustText = showJustText == 1 and characterViewable == true
	showMemorized = showMemorized == 1 and characterViewable == true
	showBothLists = showBothLists == 1 and characterViewable == true
	showStats = showStats == 1 and characterViewable == true
	showAbilityBonuses = showAbilityBonuses == 1 and characterViewable == true
end

characters = {}
statusEffects = { }

currentID = 16974083
canLevelUp = 0
openAdvance = 0
notrealValue = 0

function trunc(str, len)
	if str:len() < len then
		return str
	else
		return str:sub(1,len) .. "..."
	end
end

function characterDescString(char)
	return Infinity_FetchString(char.gender) .. "\n" .. Infinity_FetchString(char.race) .. "\n" .. char.class .. "\n" .. Infinity_FetchString(char.alignment) .. ""
end

function isStatModified(index)
	if (index == 1 ) then
		--strength
		return (characters[currentID].attr.str.current ~= characters[currentID].attr.str.base or characters[currentID].attr.str.extra ~= characters[currentID].attr.str.extraBase)
	else
		return attributeItems[index][1].current ~= attributeItems[index][1].base
	end
end

function displayAttr(index)
	str = 0
	if (index == 1 ) then
		str = displaySTR()
	else
		str = displayBuff( attributeItems[index][1].current, attributeItems[index][1].base, 1)
	end
	return str
end

function getPercent(first, second)
	tempNumber = ( first/second ) *100
	return tempNumber
end

function displayBuff( current, base, highisbetter)
	tmpstr = ''	
	--Infinity_Log( current .. ' - '.. base )
	if(highisbetter) then
		if(current > base) then
			tmpstr	= '^G' .. current .. '^-'
		elseif (current < base) then
			tmpstr	= '^R' .. current .. '^-'			
		end
	else
		if(current > base) then
			tmpstr	= '^R' .. current .. '^-'
		elseif (current < base) then
			tmpstr	= '^G' .. current .. '^-'			
		end
	end
	if(current == base) then
		tmpstr = current		
	end
	return tmpstr
end

function getNextLevelString()
	local multiplier = 1
	if multclass == 1 then multiplier = 2 end
	if multclass == 3 then multiplier = 3 end
	local nextLevelXp = (characters[currentID].level.nextLvlXp - characters[currentID].level.xp) * multiplier
	local perc = math.floor(zZgetAllClassPercent())
	local str = ""
	if(nextLevelXp > 0) then
		str = t("NEXT_LEVEL_LABEL")
		str = str .. " "
		str = str .. '^$' .. nextLevelXp .. '^-'
		str = str .. " "
		str = str .. t("XP_LABEL")
	else
		str = '^R' .. t("READY_TO_LEVEL_LABEL") .. '^-'
	end
	return str
	
end

function CurrentlyInGame()
	if characterScreen:IsInGame() == true then
		return true
	else
		return false
	end
end
function getClassString()
	local out = ""
	out = out .. zZgetClassStr(characters[currentID])
	return out
end
	listItems = { }
	listTest = { }
	zZclassDescription = {}

	helpTextString = ''
	zzAttribStr = ''
	currentTabIndex = 0
	currentTab = 0
	currentItem = 0
	ShowClassInfo = 0
	showStats = 0
	showJustText = 0
	showMemorized = 0
	showBothLists = 0
	zZshowCharInfo = 0
	zzInCharacterRecord = 0
	drained = 0
	characterViewable = true
`
menu
{
	name	'CHARACTER'
	modal lua "not CurrentlyInGame()"
	align center center
	ignoreEsc
	onopen
	"
		if zzInCharacterRecord == 0 then
			currentTab = 1
			currentTabIndex = 1
			currentItem = 0
			showStats = 0
			showJustText = 0
			showClassInfo = 0
			showAbilityBonuses = 0
			showMemorized = 0
			showBothLists = 0
			characterViewable = true
			zZsetVariables()
			zzInCharacterRecord = 1
		end
		zzAttribVar = 0
		if(CurrentlyInGame()) then
			pushSidebars()
		end
		updateAttrTable()
		
		if(currentPanelID == const.EXPORT_ID) then
			Infinity_PushMenu('CHARACTER_EXPORT')
		else 
			if(currentPanelID == const.CUSTOMIZE_ID) then 
				Infinity_PushMenu('CHARACTER_CUSTOMIZE')
			else
				currentPanelID = 0
			end
		end
	"
	onclose
	"
		Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		Infinity_PopMenu('CHARACTER_BIOGRAPHY')
		--Infinity_PopMenu('CHARACTER_SHOW_BIOGRAPHY') --tuta
		--Infinity_PopMenu('CHARACTER_INFO') --tuta
		Infinity_PopMenu('CHARACTER_SCRIPT')
		Infinity_PopMenu('CHARACTER_EXPORT')
		Infinity_PopMenu('CHARACTER_SOUND')
		Infinity_PopMenu('CHARACTER_COLOR')
		--Infinity_PopMenu('CHARACTER_SHOW_CLASSINFO') --tuta
		Infinity_PopMenu('CHARGEN_PORTRAIT')
		popSidebars()
	"

	label
	{
		area	0 -2 944 768
		mosaic	"GUIREC2Z"
	}
	
	label
	{
		name		"LABEL_2_268435495"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
		enabled "characterViewable"
	}
	label
	{
		area		80 150 358 64
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
		enabled		"characterViewable"
	}
	label
	{
		area		80 150 358 64
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
		enabled		"characterViewable"
	}
	label
	{
		area		85 218 348 1
		progressbar lua "zZgetFClassProgressBar(nameFirst, lvlFirst, xpNextFirst, xpFirst, 1, xpFirstLvl)"
		greyscale	0
		progressbar color	'H'
		progressbar full	'R'
		enabled "characterViewable"
	}
	label
	{
		area		85 223 348 1
		progressbar lua "zZgetFClassProgressBar(nameSecond, lvlSecond, xpNextSecond, xpSecond, 2, xpSecondLvl)"
		greyscale	0
		progressbar color	'F'
		progressbar full	'R'
		enabled "characterViewable and multclass > 0"
	}
	label
	{
		area		85 228 348 1
		progressbar lua "zZgetFClassProgressBar(nameThird, lvlThird, xpNextThird, xpThird, 3, xpThirdLvl)"
		greyscale	0
		progressbar color	'K'
		progressbar full	'R'
		enabled "characterViewable and multclass > 2"
	}
	label
	{
		area		670 356 206 25
		text		lua "characters[currentID].HP.current .. '^W / ^-' .. characters[currentID].HP.max .. '^W  ( '.. math.floor(getPercent(characters[currentID].HP.current, characters[currentID].HP.max)) .. '% )^-'"
		text style	'normal'
		text align	center center
		enabled		"characterViewable"
	}
	label
	{
		area		670 380 206 2
		progressbar lua "getPercent(characters[currentID].HP.current, characters[currentID].HP.max)"
		greyscale	0
		progressbar color	'H'
		progressbar full	'H'
		enabled "characterViewable"
	}
	label
	{
		area		662 393 37 26
		text		lua "characters[currentID].AC.current"
		text style  'normal'
		text align	center center
		enabled "characterViewable"
	}
	label
	{
		area		728 393 54 26
		text		lua "zZdisplayTHAC()"
		text style  'normal'
		text align	center center
		enabled "characterViewable"
	}
	label
	{
		area		808 388 70 36
		text		lua "zZgetDamage()"
		text style  'normal'
		text align	center center
		enabled "characterViewable"
	}
	label
	{
		area		670 430 206 2
		progressbar lua "getPercent(characters[currentID].Stats.partychapxp.current, 100)"
		greyscale	0
		progressbar color	'B'
		progressbar full	'B'
		enabled "characterViewable"
	}
	label
	{
		area		670 435 206 2
		progressbar lua "getPercent(characters[currentID].Stats.partygamexp.current, 100)"
		greyscale	0
		progressbar color	'$'
		progressbar full	'$'
		enabled "characterViewable"
	}
	label 
	{
		area		670 440 206 2
		progressbar lua "getPercent(characters[currentID].Stats.partychapkills.current, 100)"
		greyscale	0
		progressbar color	'Q'
		progressbar full	'Q'
		enabled "characterViewable"
	}
	label
	{
		area		670 445 206 2
		progressbar lua "getPercent(characters[currentID].Stats.partygamekills.current, 100)"
		greyscale	0
		progressbar color	'R'
		progressbar full	'R'
		enabled "characterViewable"
	}
	button
	{
		area		670 430 206 10
		text style	'button'
		text color	'K'
		actionEnter "zZCharXP = 1"
		actionExit	"zZCharXP = 0"
	}
	label
	{
		name		'zZlblCharXP'
		area		666 334 214 94
		text		lua "'^O' .. Infinity_FetchString(characters[currentID].Stats.partychapxp.strRef) .. '^-:\n' .. t('CHAPTER_LABEL') .. ': ^F' .. t(characters[currentID].Stats.partychapxp.current) .. '^- %  ( ^F' .. characters[currentID].Stats.chapxpvalue.current ..'^- )\n' .. t('GAME_LABEL') .. ': ^F' .. t(characters[currentID].Stats.partygamexp.current) .. '^- %  (^F ' .. characters[currentID].Stats.gamexpvalue.current .. '^- )'"
		text style	'normal'
		text align	center center
		rectangle	10
		rectangle opacity	220
		enabled	"characterViewable and zZCharXP == 1"
	}
	button
	{
		area		670 445 206 10
		text style	'button'
		text color	'K'
		actionEnter "zZCharKill = 1"
		actionExit	"zZCharKill = 0"
	}
	label
	{
		name		'zZlblCharXP'
		area		666 334 214 94
		text		lua "'^O' .. Infinity_FetchString(characters[currentID].Stats.partychapkills.strRef) .. '^-:\n' .. t('CHAPTER_LABEL') .. ': ^Q' .. t(characters[currentID].Stats.partychapkills.current) .. '^- %  (^Q ' .. characters[currentID].Stats.chapkills.current .. '^- )\n' .. t('GAME_LABEL') .. ': ^Q' .. t(characters[currentID].Stats.partygamekills.current) .. '^- %  ( ^Q' .. characters[currentID].Stats.gamekills.current .. '^- )'"
		text style	'normal'
		text align	center center
		rectangle	10
		rectangle opacity	220
		enabled	"characterViewable and zZCharKill == 1"
	}
	label
	{
		area		447 422 179 7
		progressbar lua "zZgetAllClassPercent()"
		greyscale	0 --display greyscale or not, number 0-1
		progressbar color	'F' --color when percentage != 100
		progressbar full	'R' --color when percentage == 100
		enabled "characterViewable"
	}
	label
	{
		area		447 435 179 2
		progressbar lua "getPercent(characters[currentID].level.xp, characters[currentID].level.nextLvlXp)"
		greyscale	0
		progressbar color	'M'
		progressbar full	'R'
		enabled "characterViewable"
	}
	label
	{
		area 447 420 179 14
		text lua "zZgetAllClassMinMaxXPVal()"
		text style 'label'
		text color 'I'
	}
	label
	{
		area		446 444 180 62
		text		lua "getNextLevelString()"
		text style  'normal' 
		text align	center center
		text shadow 1
		enabled "characterViewable"
	}
	label
	{
		area		446 444 180 62
		text		lua "zZgetNextLevelString()"
		text style  'normal'
		text align	center center
		text shadow 1
		enabled "characterViewable"
	}
	button
	{
		area 111 91 140 32
		bam	'GUIBUTNS'
		text 'INFORMATION_BUTTON'
		text style "button"
		pad 10 4 10 4
		action "currentTab = 1; updateAttrTable()"
	}
	button
	{
		area 257 91 140 32
		bam	'GUIBUTNS'
		text 'CLASS_LABEL'
		text style "button"
		pad 10 4 10 4
		action "currentTab = 2; updateAttrTable()"
	}
	button
	{
		area 403 91 140 32
		bam	'GUIBUTNS'
		text 'COMBAT_STATS_LABEL'
		text style "button"
		pad 10 4 10 4
		action "currentTab = 9; updateAttrTable()"
	}
	button
	{
		area 549 91 140 32
		bam	'GUIBUTNS'
		text 'STATS_LABEL'
		text style "button"
		pad 10 4 10 4
		action "currentTab = 6; updateAttrTable()"
	}
	button
	{
		area 695 91 140 32
		bam	'GUIBUTNS'
		text 'BIOGRAPHY_LABEL'
		text style "button"
		pad 10 4 10 4
		action "currentTab = 7; updateAttrTable()"
	}
	 label
	{
		area 239 88 11 11
		bam 'FCSTRGLD'
		enabled "characterViewable and currentTab == 1"
	}
	label
	{
		area 385 88 11 11
		bam 'FCSTRGLD'
		enabled "characterViewable and currentTab == 2"
	}
	label
	{
		area 531 88 11 11
		bam 'FCSTRGLD'
		enabled "characterViewable and currentTab == 9"
	}
	label
	{
		area 677 88 11 11
		bam 'FCSTRGLD'
		enabled "characterViewable and currentTab == 6"
	}
	label
	{
		area 823 88 11 11
		bam 'FCSTRGLD'
		enabled "characterViewable and currentTab == 7"
	}
	label
	{
		area		634 157 241 181
		mosaic		FCABLGRD
	}
	list
	{
		column 
		{ 
			width 75
			label
			{
				area		0 0 -1 36 
				text		lua "Infinity_FetchString( attributeItems[rowNumber][1].strRef)"
				text style  'normal'
				text align	left center
				text color	'$'
				text point	14
				text shadow 1
			}
		}
		column 
		{ 
			width 25
			label
			{
				area		0 0 -1 36 
				text		lua  "displayAttr(rowNumber)"
				text style  'label'
				text align	center center
				text color 'W'
				text point	14
				text shadow lua "isStatModified(rowNumber)"
			}
		}

		area 642 156 210 186
		rowheight	30
		table		"attributeItems"
		var			"currentItem"
		hidehighlight
		enabled "characterViewable"
		action
		"
			zZhelpTextString = Infinity_FetchString(attributeItems[currentItem][2])
			zzAttribItemsStrGenE()
			zzAttribItemsStrGen()
 			if zzAttribVar == 0 then
 				zzAttribVar = 1
 				zzAttribVarZ = currentItem
 			else
 				if zzAttribVarZ == currentItem then
 					zzAttribVar = 0
 					zzAttribVarZ = -1
 				else
 					zzAttribVarZ = currentItem
 				end
 			end
		"
		actionExit
		"
			zzAttribStr = ''
			zzAttribVar = 0
		"
	}
	label
	{
		area		625 348 270 120
		rectangle	10
		rectangle	opacity	220
		enabled		"characterViewable and zzAttribVar == 1"
	}
	text
	{
		area		632 355 256 106
		text		lua "zzAttribItemsStrGenEx()"
		text style	'normal'
		text align	center center
		text point	11
		enabled		"characterViewable and zzAttribVar == 1"
		action		"zzAttribVar = 0"
	}
	list
	{
		column 
		{ 
			width 13
			label
			{
				area		0 0 22 -1
				bam			lua "statusEffects[rowNumber].bam"
				sequence	lua "statusEffects[rowNumber].current"
				text align	center center				
			}
		}
		column 
		{ 
			width 87
			label
			{
				area		0 0 -1 -1
				text		lua "Infinity_FetchString(statusEffects[rowNumber].strRef)"
				text style  'normal'
				text align	left center
			}
		}
		area 634 472 246 180
		rowheight	dynamic
		table		"statusEffects"
		var		notrealValue
		scrollbar	'GUISCRC'
		enabled "characterViewable"
		hidehighlight	
	}

	button
	{
		name		"BUTTON_2_2"
		area		453 152 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
		action
		"
			Infinity_Log(dump(characters, 0))
		"
	}
	label
	{
		enabled "zZshowRaceDesc == 1"
		area 625 462 270 196
		rectangle 0
	}
	text
	{
		enabled "zZshowRaceDesc == 1"
		area 638 476 242 170
		text lua "zZgetRaceDescCharRec(characters[currentID].race)"
		text style	'label'
		text align	left top
		scrollbar	'GUISCRC'
		action "zZshowRaceDesc = 0"
	}
	text
	{
		area 446 512 180 76
		text lua "characterDescString(characters[currentID])"
		text style 'normal'
		text align center center
		enabled "characterViewable"
		sound ''
		action "
			if zZshowRaceDesc == 0 then zZshowRaceDesc = 1 else zZshowRaceDesc = 0 end
		"
	}
	-- class section
	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 -1 -1
				text		lua "zZclassDescription[rowNumber][2]"
				text style	"normal"
				text align	left center
			}
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZclassDescriptionMosaic(rowNumber)"
			}
		}
		area 68 242 368 404
		rowheight	dynamic
		table		"zZclassDescription"
		var		currentItem
		scrollbar	'GUISCRC'
		enabled "showClassInfo == 100"
		hidehighlight
	}
	text
	{
		enabled		"showClassInfo"
		area		68 242 368 404
		text		lua "zZscriptDescColorize(zZgetClassStr(characters[currentID]))"
		text style  'normal'
		scrollbar	'GUISCRC'
	}
	-- ability bonus stuff
	list
	{		
		column 
		{ 
			width 100
			label
			{
				area		0 0 -1 -1
				text		lua "listItems[rowNumber][2]" 
				text style  'normal'
				text align	left center

			}
		}
		area 50 182 342 418
		enabled		"showAbilityBonuses"
		rowheight	45
		table		"listItems"
		var			currentItem
		scrollbar	'GUISCRC'		
		hidehighlight
	}
	-- Stats screen stuff
	list
	{		
		column 
		{ 
			width 65
			label
			{
				area		0 0 -1 -1
				text		lua "zZtoUpperWithCheckLang(Infinity_FetchString(otherlist[rowNumber][1]), nil, 1)"
				text style  'normal'
				text align	left center
				text color	'$'
				text shadow	1
			}
		}
		column 
		{ 
			width 35
			label
			{
				area		0 0 -1 -1
				text		lua "otherlist[rowNumber][2]"				
				text style  'normal'
				text align	center center
			}
			label
			{
				area		-242 23 -1 -1
				mosaic		'fcatrtbn'
			}
		}
		area 74 242 366 180
		enabled		"showStats"
		rowheight	45
		table		"otherlist"
		var			currentItem
		scrollbar	'GUISCRC'		
		hidehighlight
	}
	label
	{
		enabled		"showStats"
		area		368 427 54 38
		text		"GAME_LABEL"
		text style  'label'
		text align	center center
		text color	'O'
	}
	label
	{
		enabled		"showStats"
		area		292 427 76 38
		text		"CHAPTER_LABEL"
		text style  'label'
		text align	center center
		text color	'O'
	}
	label
	{
		enabled		"showStats"
		area		376 455 38 2
		mosaic		'fcbtlina'
	}
	label
	{
		enabled		"showStats"
		area		311 455 38 2
		mosaic		'fcbtlina'
	}
	list
	{		
		column 
		{ 
			width 65
			label
			{
				area		0 0 -1 -1
				text		lua "zZtoUpperWithCheckLang(Infinity_FetchString(listItems[rowNumber][1]), nil, 1)"
				text style  'normal'
				text align	left center
				text color	'$'
				text shadow	1
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		0 0 -1 -1
				text		lua " listItems[rowNumber][2]"				
				text style  'normal'
				text align	center center
			}
		}
		column 
		{ 
			width 15
			label
			{
				area		0 0 -1 -1
				text		lua " listItems[rowNumber][3]"				
				text style  'normal'
				text align	center center
			}
			label
			{
				area		-312 20 -1 -1
				mosaic		'fcatrtbn'
			}
		}
		area 74 428 366 224
		enabled		"showStats"
		rowheight	42
		table		"listItems"
		var			currentItem
		scrollbar	'GUISCRC'		
		hidehighlight
	}
	label
	{
		enabled		"zZshowCharInfo == 1"
		area		68 242 372 27
		mosaic		fcatrtbx
		respectClipping
		text		lua "helpTextString"
		text style	"normal"
		text align	center top
		text point	14
	}
	list
	{
		column
		{
			width 70
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetAttributeTablePng(filterCreTablAttr(listItems)[rowNumber])"
			}
			label
			{
				area		8 0 -1 -1
				text		lua	"zZgetAttributeTableText(filterCreTablAttr(listItems)[rowNumber])"
				text style	"normal"
				text color	'B'
				text align	left center
			}
			label
			{
				area		8 6 10 10
				bam			lua	"zZgetAttributeTableBam(filterCreTablAttr(listItems)[rowNumber])"
				text align	center center
				scaleToClip
			}
		}
		column
		{
			width 30
			label
			{
				area		-251 0 -1 -1
				mosaic		lua "zZgetAttributeTablePng(filterCreTablAttr(listItems)[rowNumber])"
				respectClipping
			}
			label
			{
				area		0 0 -1 -1
				text		lua "zZgetAttributeTableValue(filterCreTablAttr(listItems)[rowNumber])"
				text style	"normal"
				text color	'W'
				text align	left center
			}
			label
			{
				area		1 6 110 10
				bam			'fcatrtba'
				sequence	lua "zZgetAttributeTableSeq(filterCreTablAttr(listItems)[rowNumber])"
				text align	center center
				scaleToClip
			}
		}
		name		'zZcharacterInfo'
		area		68 272 372 374
		rowheight	22
		table		"filterCreTablAttr(listItems)"
		var			"AttrItem"
		hidehighlight
		scrollbar	'GUISCRC'
		enabled		"zZshowCharInfo > 0"
		actionDbl
		"
			zZfoldUnfold{}
		"
	}
	button
	{
		bam			GUIOSW
		area		374 242 21 20
		sequence	0
		scaletoclip
		tooltip		lua "stringsAll.fold"
		enabled		"zZshowCharInfo == 1"
		action
		"
			zZunfoldCreAttr(1)
		"
	}
	button
	{
		bam			GUIOSW
		area		396 242 21 20
		sequence	1
		scaletoclip
		tooltip		lua "stringsAll.unfold"
		enabled		"zZshowCharInfo == 1"
		action
		"
			zZunfoldCreAttr(0)
		"
	}
	button
	{
		bam			GUIOSW
		area		374 242 21 20
		sequence	0
		scaletoclip
		tooltip		lua "stringsAll.fold"
		enabled		"zZshowCharInfo == 2"
		action
		"
			zZunfoldCreAttr(1)
		"
	}
	button
	{
		bam			GUIOSW
		area		396 242 21 20
		sequence	1
		scaletoclip
		tooltip		lua "stringsAll.unfold"
		enabled		"zZshowCharInfo > 1"
		action
		"
			zZunfoldCreAttr(0)
		"
	}
	-- Biography section
	text
	{
		enabled		"showJustText"
		area		68 242 372 404
		text		lua "helpTextString"
		text style  'normal'
		text align	left top
		scrollbar	'GUISCRC'
	}
	button
	{
		enabled 	"CurrentlyInGame()"
		name		"BUTTON_2_50"
		area		374 676 201 44
		text		"CUSTOMIZE_BUTTON"
		text style "button"
		bam		GUIBUTNT
		sequence	0
		clickable lua "characterScreen:IsMultiPlayerModifyable()"
		action 
		"
			characterScreen:OnCustomizeButtonClick();
		"
	}
	button
	{
		enabled 	"CurrentlyInGame()"
		name		"BUTTON_2_36"
		area		587 676 200 44
		text		"EXPORT_BUTTON"
		text style "button"
		bam		GUIBUTNT
		sequence	3
		clickable lua "characterScreen:IsExportButtonClickable()"
		action 
		"
			characterScreen:OnExportButtonClick();
		"
	}
	button
	{
		enabled 	"CurrentlyInGame()"
		clickable	lua "characterScreen:IsReformPartyButtonClickable()"
		name		"BUTTON_2_51"
		area		161 676 197 44
		text		"REFORM_PARTY_BUTTON"
		text style "button"
		bam		GUIBUTNT
		sequence	0
		action		"characterScreen:OnReformPartyButtonClick();"
	}
	button
	{
		enabled 	"CurrentlyInGame()"
		name		"BUTTON_2_0"
		area		466 592 140 29
		text		"DUAL_CLASS_BUTTON"
		text style "button"
		pad 10 4 10 4
		bam	'GUIBUTNS'
		sequence	2
		clickable	lua "characterScreen:IsDualClassButtonClickable()"
		action 		
		"
			popup2Button('DUALCLASS_CONFIRMATION', 'YES_BUTTON', function() characterScreen:OnDualClassButtonClick() end, 'NO_BUTTON')
		"
	}
	button
	{
		enabled 	"CurrentlyInGame()"
		name		"BUTTON_2_37"
		area		466 621 140 32
		text		"LEVEL_UP_BUTTON"
		text style "button"
		pad 10 4 10 4
		bam		'GUIBUTNS'
		sequence	3
		clickable	lua "characterScreen:IsLevelUpButtonClickable()"
		action		" characterScreen:OnLevelUpButtonClick();"
	}
	
	label
	{
		enabled "CurrentlyInGame() and zzGlowEye == 1"
		area 	840 18 33 27
		bam		'fcclweye'
		sequence 0
	}
	button
	{
		enabled 	"CurrentlyInGame()"
		on escape
		area		834 12 53 44
		action
		"
			e:SelectEngine(worldScreen)
		"
		actionEnter "zzGlowEye = 1"
		actionExit  "zzGlowEye = 0"
	}
	button
	{
		enabled 	"not CurrentlyInGame()"
		area		374 676 201 44
		text		"DONE_BUTTON"
		text style 	"button"
		bam		GUIBUTNT
		sequence	3
		action		"Infinity_PopMenu()"
	}
}
menu
{
	name 'CHARACTER_CUSTOMIZE'
	align center center
	modal
	ignoreesc
	onOpen
	"
		currentPanelID = const.CUSTOMIZE_ID
	"
	onClose "zzCangePortrait = 0"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area 446 150 442 288
		mosaic  FCCUST3Z
	}
	text
	{
		area 453 442 429 202
		text 11327 --Customize help text
		scrollbar 'GUISCRC'
		text style	normal
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		588 166 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
	}
	button
	{
		area 460 210 114 160
		align center center
		paperdoll 0
	}
	button
	{
		area 770 210 114 160
		align center center
		paperdoll 1
	}
	label
	{
		area	98 82 744 44
		text	"CUSTOMIZE_TITLE"
		text style	title
		text color	'O'
		text shadow	1
	}
	button
	{
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 60 263 382 34
		text style "button"
		text "APPEARANCE_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"		
		action 
		"
			characterScreen:OnAppearanceButtonClick()
			zzCangePortrait = 1
		"
	}
	button
	{
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 60 297 382 34
		text style "button"
		text "SOUNDS_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"	
		action 
		"
			characterScreen:OnSoundsButtonClick()
		"
	}
	button
	{
		bam 'GUIBUTWS'
		area 60 331 382 34	
		text style "button"
		text "COLORS_BUTTON"
		action 
		"
			characterScreen:OnHairSkinButtonClick()
			zzCangePortrait = 1
		"
	}
	button
	{
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 60 365 382 34
		text style "button"
		text "SCRIPT_BUTTON"		
		action 
		"
			characterScreen:OnScriptButtonClick()
		"
	}
	button
	{
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 60 399 382 34
		text style "button"
		text "BIOGRAPHY_BUTTON"		
		clickable lua
		"
			characterScreen:IsAppearanceButtonClickable();
		"
		action 
		"
			characterScreen:OnCusomizeBiographyButtonClick()
		"
	}
	button
	{
		on escape
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
	button
	{
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			currentPanelID = 0
			Infinity_PopMenu('CHARACTER_CUSTOMIZE')
		"
	}
}
`
recBioEdit = ""
recBioEditBackup = ""
`
menu
{
	name 'CHARACTER_BIOGRAPHY'
	align center center
	ignoreesc
	onOpen
	"
		recBioEditBackup = recBioEdit
		currentPanelID = 23
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area 102 82 740 44
		text	"BIOGRAPHY_TITLE"
		text style	'title'
		text color	'O'
		text shadow	1
	}
	edit
	{
		name		"recBioEditArea"
		area		454 154 430 490
		var			recBioEdit
		scrollbar	'GUISCRC'
		text style	"edit"
	}
	button
	{
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 60 263 382 34	
		text style "button"
		text	"CLEAR_BUTTON"		
		action 
		"
			recBioEdit = ''
		"
	}
	button
	{
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 60 297 382 34
		text style "button"
		text "REVERT_BUTTON"		
		action 
		"
			recBioEdit = recBioEditBackup
		"
	}
	button
	{
		on escape
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}
`
scriptList_idx = 0
showingSmartOptions = false
function formatScriptName(text)
	local i =  string.find(text, ":", #text)
	if(i) then 
		text = string.sub(text,1, i - 1)
	end
	if(#text > zZstrLen) then
		text = string.sub(text,1, zZstrLen)
		text = text .. "..."
	end
	return text
end

scriptOptions = 
{
	{'SCRIPT_ATTACK_ENEMIES_LABEL',			'SCRIPT_ATTACK_ENEMIES_DESCRIPTION',		 1, 0, 0},
	{'SCRIPT_USE_MELEE_WEAPONS_LABEL',		'SCRIPT_USE_MELEE_WEAPONS_DESCRIPTION',		 2, 0, 0},
	{'SCRIPT_USE_RANGED_WEAPONS_LABEL',		'SCRIPT_USE_RANGED_WEAPONS_DESCRIPTION',	 3, 0, 0},
	{'SCRIPT_USE_ITEMS_LABEL',				'SCRIPT_USE_ITEMS_DESCRIPTION',				 4, 0, 0},
	{'SCRIPT_USE_SPECIAL_ABILITIES_LABEL',	'SCRIPT_USE_SPECIAL_ABILITIES_DESCRIPTION',	 5, 0, 0},
	{'SCRIPT_USE_OFFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_OFFENSIVE_SPELLS_DESCRIPTION',	 6, 0, 0},
	{'SCRIPT_USE_DEFENSIVE_SPELLS_LABEL',	'SCRIPT_USE_DEFENSIVE_SPELLS_DESCRIPTION',	 7, 0, 0},
	{'SCRIPT_FIND_TRAPS_LABEL',				'SCRIPT_FIND_TRAPS_DESCRIPTION',			 8, 0, 0},
	{'SCRIPT_HIDE_IN_SHADOWS_LABEL',		'SCRIPT_HIDE_IN_SHADOWS_DESCRIPTION',		 9, 0, 0},
	{'SCRIPT_SING_BATTLESONG_LABEL',		'SCRIPT_SING_BATTLESONG_DESCRIPTION',		10, 0, 0},
	{'SCRIPT_TURN_UNDEAD_LABEL',			'SCRIPT_TURN_UNDEAD_DESCRIPTION',			11, 0, 0}
}

function handleScriptOptionChange(option)
	local wasOn = scriptOptions[option][4] == 2

	if option == 2 then --Melee
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 3 then --Ranged
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	elseif option == 8 then --Find Traps
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
			scriptOptions[option+3][4] = 0
			scriptOptions[option+3][5] = false
		end
	elseif option == 9 then --Hide
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
			scriptOptions[option+2][4] = 0
			scriptOptions[option+2][5] = false
		end
	elseif option == 10 then --Sing
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
			scriptOptions[option+1][4] = 0
			scriptOptions[option+1][5] = false
		end
	elseif option == 11 then --Turn
		if wasOn == true then
			scriptOptions[option][4] = 0
			scriptOptions[option][5] = false
		else
			scriptOptions[option][4] = 2
			scriptOptions[option][5] = true
			scriptOptions[option-3][4] = 0
			scriptOptions[option-3][5] = false
			scriptOptions[option-2][4] = 0
			scriptOptions[option-2][5] = false
			scriptOptions[option-1][4] = 0
			scriptOptions[option-1][5] = false
		end
	else
		scriptOptions[option][4] = toggleFrame(scriptOptions[option][4])
		if scriptOptions[option][4] == 0 then
			scriptOptions[option][5] = false
		else
			scriptOptions[option][5] = true
		end
	end
end
`
menu
{
	name 'CHARACTER_SCRIPT'
	align center center
	ignoreesc
	onOpen 
	"
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		currentPanelID = const.SCRIPT_ID

		showingSmartOptions = (scriptList_idx == 2)
		scriptDescription = t(scriptOptions[scriptList_idx][2])

		for index, var in pairs(scriptOptions) do
			var[5] = characterScreen:GetTempSmartScriptLocal(var[3])
			if var[5] == false then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		445 184 433 10
		mosaic		'fcline01'
	}
	label
	{
		area 100 82 742 46
		text	"SCRIPT_TITLE"
		text style	'title'
		text color	'O'
		text shadow	1
	}
	label
	{
		area 454 504 428 140
		rectangle 0
		enabled "showingSmartOptions == true"
	}
	label
	{
		area 454 144 428 40
		text	"CURRENT_SCRIPT_LABEL"
		text style	'label'
		text color	'$'
		text shadow	1
	}
	text
	{
		area 468 518 402 112
		text lua "zZscriptDescColorize(scriptDescription)"
		scrollbar 'GUISCRC'
		text style	normal
		enabled "showingSmartOptions == true"
	}
	text
	{
		area 454 198 424 446
		text lua "zZscriptDescColorize(scriptDescription)"
		scrollbar 'GUISCRC'
		text style	normal
		enabled "showingSmartOptions == false"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetScriptSoundPng(rowNumber, scriptList_idx)"
				respectClipping
			}
			label
			{
				area 8 6 10 10
				enabled "scriptList[rowNumber] ~= '' and rowNumber ~= 3"
				bam lua "zZgetChargenGuiPfc(rowNumber, scriptList_idx)"
				scaleToClip 
			}
			label
			{
				area 0 0 -1 -1
				enabled "scriptList[rowNumber] ~= ''"
				text lua	"zZsetScriptNameTableText(formatScriptName(scriptList[rowNumber]), rowNumber, scriptList_idx)"
				text style	"normal"
				text align	left center
				pad 8 0 0 0
			}
			label
			{
				area -10 -10 10000 10000
				enabled "scriptList[rowNumber] == ''"
				rectangle	1
			}
		}
		area 64 244 374 400
		rowheight	22
		table		"scriptList"
		var			"scriptList_idx"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			showingSmartOptions = (scriptList_idx == 2)
			if scriptList[scriptList_idx] ~= '' then
				Infinity_OnScriptItemSelect(scriptList_idx - 1)
				doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
			else
				scriptList_idx = 0
				scriptDescription = ''
				doneEnabled = false
			end
		"
	}
	list
	{
		
		column 
		{ 
			width 80
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetScriptSmartPng(rowNumber, selScriptOpt)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(scriptOptions[rowNumber][1]), rowNumber, selScriptOpt)"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		-325 0 -1 -1
				mosaic		lua "zZgetScriptSmartPng(rowNumber, selScriptOpt)"
				respectClipping
			}
			label
			{
				area		28 14 22 22
				bam			ROUNDBUT
				align 		left top
				frame		lua "scriptOptions[rowNumber][4]"
				scaleToClip
			}
		}
		area 454 198 428 298
		rowheight	50
		table		"scriptOptions"
		var			selScriptOpt
		scrollbar	'GUISCRC'
		enabled 	"showingSmartOptions == true"
		hidehighlight
		action		
		"
			scriptDescription = t(scriptOptions[selScriptOpt][2])
			selectedSL = 0
			selFeedOpt = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				handleScriptOptionChange(selScriptOpt)
			end
		"
	}
	button
	{
		on escape
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			if showingSmartOptions == true then
				for index, var in pairs(scriptOptions) do
					characterScreen:SetTempSmartScriptLocal(var[3], var[5])
				end
			end
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}
`
list_GUIREC_13_0_idx = 0
characterExportCharacterEdit = ""
`
menu
{
	name 'CHARACTER_EXPORT'
	align center center
	modal
	ignoreEsc
	onOpen
	"
		currentPanelID = const.EXPORT_ID;
		Infinity_FocusTextEdit('characterExportCharacterEditArea');
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area 446 150 442 288
		mosaic  FCCUST3Z
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		588 166 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
	}
	button
	{
		area 460 210 114 160
		align center center
		paperdoll 0
	}
	button
	{
		area 770 210 114 160
		align center center
		paperdoll 1
	}
	label
	{
		area		56 595 385 10
		mosaic		'fcline01'
		respectClipping
	}
	label
	{
		area	100 82 740 44
		text	"EXPORT_TITLE"
		text style	title
		text color	'O'
		text shadow	1
	}
	list
	{
		column
		{ 
			width 100
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetScriptSoundPng(rowNumber, list_GUIREC_13_0_idx)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(zZsetScriptTextOffset(list_GUIREC_13_0[rowNumber], rowNumber, list_GUIREC_13_0_idx), rowNumber, list_GUIREC_13_0_idx)"
				text style "list"
			}
		}
		area 64 246 374 342
		rowheight	22
		table		"list_GUIREC_13_0"
		var			"list_GUIREC_13_0_idx"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			Infinity_OnCharacterItemSelect(list_GUIREC_13_0_idx - 1)
		"
	}
	label
	{
		area		64 610 150 40
		text		lua "zZcolorizeString(t('EXPORT_FILENAME_LABEL'), ':')"
		text style	"label"
		text align	right center
		text color 	'3'
	}
	label
	{
		area		224 610 210 36
		mosaic		'fcexpedt'
	}
	edit
	{
		name		"characterExportCharacterEditArea"
		area		228 614 202 28
		var			characterExportCharacterEdit
		text style	"edit"
		text align	center center
		maxlines	1
		fill            112 111 111 64
		action
		"
			if(characterExportCharacterEdit:len() > 7 and key_pressed ~= 8) then				
				return 0
			else
				Infinity_UpdateCharacterRecordExportPanel()
				return 1
			end
		"
	}
	text
	{
		area 456 448 424 194
		text lua "zZscriptDescColorize(Infinity_FetchString(10962))"
		text style	normal
		scrollbar 'GUISCRC'
	}
	button
	{
		on escape
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_EXPORT')
			currentPanelID = 0
		"
	}
	button
	{
		clickable	lua "characterScreen:IsDoneButtonClickable(currentID)"
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
		"
	}
}
`
list_GUIREC_20_5_idx = 0
doneEnabled = 0

function compareCustomSound(s1, s2)
	-- DEFAULT, then normal alphabetically, then AoN alphabetically (result must be strictly less than)
	if s1.sound == "DEFAULT" or s2.sound == "DEFAULT" then
		return s2.sound ~= "DEFAULT"
	end

	local s1_is_aon = string.sub(s1.sound, 1, 4) == "BDTP"
	local s2_is_aon = string.sub(s2.sound, 1, 4) == "BDTP"

	if s1_is_aon ~= s2_is_aon then
		return s2_is_aon
	end

	return s1.sound < s2.sound
end

function prepareSounds(soundTable)
	-- preserve original indices to return as selection
	local i;
	for i = 1, #soundTable, 1 do
		local s = soundTable[i];
		if (type(s) == "string") then
			soundTable[i] = {
				index = i,
				sound = s
			}
		end
	end
	table.sort(soundTable, compareCustomSound)
end

function getSoundStringRef(rowNumber, tab)
	if ( filenames_stringrefs[tab[rowNumber].sound] ~= nil ) then
		return Infinity_FetchString(filenames_stringrefs[tab[rowNumber].sound][1])
	else
		return tab[rowNumber].sound
	end
end
`
menu
{
	name 'CHARACTER_SOUND'
	align center center
	ignoreesc
	onOpen 
	"
		currentPanelID = const.SOUND_ID
		Infinity_OnSoundItemSelect(0)
		doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		prepareSounds(list_GUIREC_20_5)
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area 446 150 442 288
		mosaic  FCCUST3Z
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		80 150 358 78
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
	}
	label
	{
		area		588 166 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
	}
	button
	{
		area 460 210 114 160
		align center center
		paperdoll 0
	}
	button
	{
		area 770 210 114 160
		align center center
		paperdoll 1
	}
	
	label
	{
		area		56 595 385 10
		mosaic		'fcline01'
		respectClipping
	}
	label
	{
		area 104 80 740 44
		text	"SOUND_TITLE"
		text style	'title'
		text color	'O'
		text shadow	1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetScriptSoundPng(rowNumber, list_GUIREC_20_5_idx)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(zZsetScriptTextOffset(getSoundStringRef(rowNumber, list_GUIREC_20_5), rowNumber, list_GUIREC_20_5_idx), rowNumber, list_GUIREC_20_5_idx)"
				text style	"list"
				pad 8 0 0 0
			}
		}
		area 66 242 375 345
		rowheight	22
		table		"list_GUIREC_20_5"
		var			"list_GUIREC_20_5_idx"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			Infinity_OnSoundItemSelect(list_GUIREC_20_5[list_GUIREC_20_5_idx].index - 1)
			doneEnabled = characterScreen:IsDoneButtonClickable(currentID)
		"
	}
	text
	{
		area 454 444 426 201
		text lua "zZscriptDescColorize(Infinity_FetchString(11315))"
		scrollbar 'GUISCRC'
		text style	normal
	}
	button
	{
		clickable lua "list_GUIREC_20_5_idx"
		sequence 0
		bam 'GUIBUTWS'
		sequence 0
		scaleToClip
		area 59 611 382 34
		text style "button"
		text	"PLAY_SOUND_BUTTON"
		action 
		"	
			characterScreen:OnPlayButtonClick();			
		"
	}
	button
	{
		on escape
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text style "button"
		text	"CANCEL_BUTTON"
		action 
		"
			characterScreen:OnCancelButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
	button
	{
		clickable lua "doneEnabled"
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text style "button"
		text "DONE_BUTTON"		
		action 
		"
			characterScreen:OnDoneButtonClick()
			Infinity_PopMenu()
			currentPanelID = 17
		"
	}
}
`
function toggleFrame(curFrame)
	if curFrame == 0 then 
		return 2
	else 
		return 0
	end 
end
function getSelected(cur, my)
	if cur == my then 
		return 1
	else 
		return 0
	end 
end
function removeStoryModeOption()
	for index = 1, #toggleTitles-1, 1 do
		toggleTitles[index] = toggleTitles[index+1]
	end
	toggleTitles[#toggleTitles] = nil
end
function addStoryModeOption()
	for index = #toggleTitles, 1, -1 do
		toggleTitles[index+1] = toggleTitles[index]
	end
	toggleTitles[1] = {'DIFFICULTY_LABEL_STORYMODE',	'%strstory_mode%',	65, 0, 0}
end

function removeOptionFromList(list, option)
	local startingPoint = 1
	local found = false
	for index = 1, #list-1, 1 do
		if list[index][3] == option then
			startingPoint = index
			found = true
			break
		end
	end
	if found == true then
		for index = startingPoint, #list-1, 1 do
			list[index] = list[index+1]
		end
		list[#list] = nil
	end
end

toggleTitles = {
{"DIFFICULTY_LABEL_STORYMODE_MIXED",	"%strstory_mode%",	65, 0, 0},
{"ENABLE_CLOUD_LABEL",					"ENABLE_CLOUD_DESCRIPTION", 		60, 0, 0},
{"WORLDMAP_HIGHLIGHT_LABEL",			"WORLDMAP_HIGHLIGHT_DESCRIPTION", 	66, 0, 0},
{"MP_CHAT_LABEL",						"MP_CHAT_DESCRIPTION",				67, 0, 0},
{"GORE_LABEL",							"GORE_DESCRIPTION", 				19, 0, 0},
{"WEATHER_LABEL",						"WEATHER_DESCRIPTION", 				47, 0, 0},
{"GROUP_INFRA_LABEL",					"GROUP_INFRA_DESCRIPTION", 			42, 0, 0},
{"HEAL_ON_REST_LABEL",					"HEAL_ON_REST_DESCRIPTION", 		50, 0, 0},
{"MAX_HP_ON_LEVEL_LABEL",				"MAX_HP_ON_LEVEL_DESCRIPTION", 		55, 0, 0},
{"NO_DAMAGE_INCREASE_LABEL",			"NO_DAMAGE_INCREASE_DESCRIPTION", 	64, 0, 0},
{"AUTO_USE_MAGIC_AMMO_LABEL",			"AUTO_USE_MAGIC_AMMO_DESCRIPTION", 	68, 0, 0},
}

selectedOpt = 0
helpString = 0

ttDelaySLDR = 0
keyboardSLDR = 0
mouseSLDR = 0
difficultySLDR = 0

panelID = 8

function getDifficulty(d)
	local text = ""
	if ( d == 0 ) then
		text = t("DIFFICULTY_LABEL_EASY")
	elseif (d == 1) then
		text = t("DIFFICULTY_LABEL_NORMAL")
	elseif (d == 2) then
		text = t("DIFFICULTY_LABEL_CORERULES")
	elseif (d == 3) then
		text = t("DIFFICULTY_LABEL_HARD")
	elseif (d == 4) then
		text = t("DIFFICULTY_LABEL_INSANE")
	elseif (d == 5) then
		text = string.upper(t("MULTIPLAYER_DIFFICULTY_LABEL")).." "..t("DIFFICULTY_LABEL_LEGACYOFBHAAL")
	end
	return text
end
`
menu
{
	name	'OPTIONS_GAMEPLAY'
	align center center
	modal
	onOpen
	"
		zzInCharacterRecord = 0
		
		panelID = 8
		helpString = 'GAMEPLAY_DESCRIPTION'
		selectedOpt = 0
		selectedSL = 0

		if Infinity_GetOption(59, 8) ~= 0 and toggleTitles[1][3] == 65 then
			removeStoryModeOption()
		elseif Infinity_GetOption(59, 8) == 0 and toggleTitles[1][3] ~= 65 then
			addStoryModeOption()
		end

		ttDelaySLDR = Infinity_GetOption(1, panelID)
		keyboardSLDR = Infinity_GetOption(3, panelID)
		mouseSLDR = Infinity_GetOption(2, panelID)
		difficultySLDR = Infinity_GetOption(12, panelID)
		
		for index, var in pairs(toggleTitles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
 			end
		end
 
		if Infinity_CanCloudSave() == false and (toggleTitles[1][3] == 60 or toggleTitles[2][3] == 60) then
			removeOptionFromList(toggleTitles,60)
		end
	"

	button
	{
		area	0 -2 944 768
		mosaic	FCCREDIT
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedOpt = 0
			selectedSL = 0
		"
	}
	button
	{
		area	56 142 421 512
		mosaic	fcoptcp1
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedOpt = 0
			selectedSL = 0
		"
	}
	label
	{
		area		96 80 754 44
		text		"GAMEPLAY_TITLE"
		text style	title
		text color	'O'
		text shadow	1
	}
	list
	{
		column 
		{
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selectedOpt)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(toggleTitles[rowNumber][1]), rowNumber, selectedOpt)"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -296 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selectedOpt)"
				respectClipping
			}
			label
			{
				area		15 9 22 22
				bam			ROUNDBUT
				frame		lua "toggleTitles[rowNumber][4]"
				scaleToClip
			}
		}
		area 484 152 396 310
		rowheight	44
		table		"toggleTitles"
		var		selectedOpt
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			panelID = 8
			selectedSL = 0
			helpString = toggleTitles[selectedOpt][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				toggleTitles[selectedOpt][4] = toggleFrame(toggleTitles[selectedOpt][4])

				if toggleTitles[selectedOpt][4] == 0 then
					toggleTitles[selectedOpt][5] = 0
				else 
					toggleTitles[selectedOpt][5] = 1
				end
			end
			if selectedOpt == 1 and toggleTitles[1][5] == 1 then
				groundItemsButtonToggle = 1
				highlightButtonToggle = 1
			end
		"
	}
	label
	{
		area 484 466 396 184
		rectangle 0
	}
	text
	{
		area		496 478 372 160
		text		lua "zZscriptDescColorize(t(helpString))"
		text style	normal
		text align	left top
		text point	12
		scrollbar	'GUISCRC'
	}
	text
	{
		area		64 162 192 39
		text		"TOOLTIP_DELAY_LABEL"
		text style	"label"
		text align	right center
		text color	'$'
		text upper
		glow lua "getSelected(selectedSL, 1)"
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 1
		" 
	}
	label
	{
		area 266 162 200 39
		glow lua "getSelected(selectedSL, 1)"
	}
	slider
	{
		area 266 162 200 39
		position "ttDelaySLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 'TOOLTIP_DELAY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 1
		" 
	}
	text
	{
		area		64 216 192 39	
		text		"KEYBOARD_SCRLSPEED_LABEL"
		text style	"label"
		text align	right center
		text color	'$'
		text upper
		glow lua "getSelected(selectedSL, 2)"
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 2
		" 
	}
	label
	{
		area 266 216 200 40
		glow lua "getSelected(selectedSL, 2)"
	}
	slider
	{
		area 266 226 200 30
		position "keyboardSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'KEYBOARD_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 2
		" 
	}
	text
	{
		area		64 266 192 39	
		text		"MOUSE_SCRLSPEED_LABEL"
		text style	"label"
		text align	right center
		text color	'$'
		text upper
		glow lua "getSelected(selectedSL, 3)"
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 3
		" 
	}
	label
	{
		area 266 266 200 40
		glow lua "getSelected(selectedSL, 3)"
	}
	slider
	{
		area 266 266 200 40
		position "mouseSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		enabled "not e:IsTouchUI()"
		action 
		"
			helpString = 'MOUSE_SCRLSPEED_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 3
		" 
	}
	text
	{
		area		64 354 192 39
		text		"DIFFICULTY_LABEL"
		text style	"label"
		text align	right center
		text color	'$'
		text upper
		glow lua "getSelected(selectedSL, 4)"
		enabled "Infinity_GetOption(59, 8) == 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	label
	{
		area 266 354 200 39
		glow lua "getSelected(selectedSL, 4)"
	}
	slider
	{
		area 266 354 200 39
		position "difficultySLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	5
		pad 4 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] == 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	label
	{
		area		266 384 200 35
		text		lua "getDifficulty(difficultySLDR)"
		text style	"label"
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] == 0"
	}
	label
	{
		area		64 364 402 39
		text		lua "zZscriptDescColorize(getDifficulty(5))"
		text style	"label"
		text align	center center
		enabled "Infinity_GetOption(59, 8) ~= 0"
	}
	--fakes for story mode
	slider
	{
		area 266 354 200 39
		position "0"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	5
		pad 4 0 4 0
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
		action 
		"
			helpString = 'DIFFICULTY_DESCRIPTION' 
			selectedOpt = 0
			selectedSL = 4
		" 
	}
	label
	{
		area		266 384 200 35	
		text		lua "getDifficulty(0)"
		text style	"label"
		text align	center center
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
	}
	label
	{
		area 266 353 200 40
		enabled "Infinity_GetOption(59, 8) == 0 and toggleTitles[1][4] ~= 0"
		rectangle 1
		rectangle opacity 200	
	}
	
	button
	{
		bam			GUIBUTWS
		sequence	0
		area		96 482 340 32
		text		"ASSIGN_KEYS_BUTTON"
		text style	"button"
		enabled "not e:IsTouchUI()"
		action
		"
			Infinity_PushMenu( 'OPTIONS_KEYBINDINGS' );
			selectedOpt = 0
		"
	}
	button
	{
		area		96 524 340 32
		bam			GUIBUTWS
		sequence	2
		text 		"FEEDBACK_BUTTON"
		text style	"button"
		action
		"
			Infinity_PushMenu( 'OPTIONS_FEEDBACK' );
			selectedOpt = 0
		"
	}
	button
	{
		area		96 566 340 32
		bam			GUIBUTWS
		sequence	2
		text 		"AUTO_PAUSE_BUTTON"
		text style	"button"
		action
		"
			selectedOpt = 0
			Infinity_PushMenu( 'OPTIONS_AUTOPAUSE' );
		"
	}
	button
	{
		area		96 606 340 32
		bam			GUIBUTWS
		sequence	2
		text 		"FC_TIPUN_OPTIONS"
		text style	"button"
		action
		"
			selectedOpt = 0
			Infinity_PushMenu( 'TIPUN_OPTIONS' );
		"
	}
	button
	{
		area 232 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"CANCEL_BUTTON"
		text style	"button"
		action
		"			
			Infinity_PopMenu()
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			panelID = 8
			Infinity_ChangeOption( 1, ttDelaySLDR, panelID)
			Infinity_ChangeOption( 3, keyboardSLDR, panelID )
			Infinity_ChangeOption( 2, mouseSLDR, panelID )
			Infinity_ChangeOption( 12, difficultySLDR + 1, panelID) -- cannot set story mode through slider

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(toggleTitles) do
				Infinity_ChangeOption( var[3], var[5], panelID)
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}
}
`
autoPauseToggles = { 
{'WEAPON_UNUSABLE_LABEL',18036, 5 , 0, 0},
{'END_OF_ROUND_LABEL',10640, 25, 0, 0},
{'ENEMY_SIGHTED_LABEL',23514, 26, 0, 0},
{'SPELL_CAST_LABEL',%str31872%, 31, 0, 0},
{'TRAP_FOUND_LABEL',%str58171%, 34, 0, 0}
}

characterPauseToggles = { 
{'CENTER_MEMBER_LABEL',%str10571%, 37, 0, 0},
{'CHARACTER_HIT_LABEL',18032, 1 , 0, 0},
{'CHARACTER_INJURED_LABEL',18033, 2 , 0, 0},
{'CHARACTER_DEATH_LABEL',18034, 3 , 0, 0},
{'CHARACTER_ATTACKED_LABEL',18035, 4 , 0, 0},
{'CHARACTER_TARGET_DESTROYED',18037, 13, 0, 0},
}

selOptAP = 0

`
menu
{
	name	'OPTIONS_AUTOPAUSE'
	modal
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
		
		panelID = 10
		selOptAP = 0
		autopauseString = 18044
		
		for index, var in pairs(autoPauseToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
		
		for index, var in pairs(characterPauseToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"

	button
	{
		area 0 -2 944 768
		mosaic	FCCREDIT
		action
		"
			autopauseString = 18044
			selOptAP = 0
		"
	}
	button
	{
		area	56 146 832 417
		mosaic	fcoptcp2
		action
		"
			autopauseString = 18044
			selOptAP = 0
		"
	}
	label
	{
		area		104 80 740 44
		text		"AUTO_PAUSE_TITLE"
		text style	title
		text color	'O'
		text shadow	1
	}
	list
	{
		
		column 
		{ 
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selOptAP)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(autoPauseToggles[rowNumber][1]), rowNumber, selOptAP)"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -300 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selOptAP)"
				respectClipping
			}
			label
			{
				area		15 9 22 22
				bam			ROUNDBUT
				frame		lua "autoPauseToggles[rowNumber][4]"
				scaleToClip
			}
		}
		area 482 156 390 388
		rowheight	44
		table		"autoPauseToggles"
		var		selOptAP
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			selOptAPC = 0
			autopauseString = autoPauseToggles[selOptAP][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				autoPauseToggles[selOptAP][4] = toggleFrame(autoPauseToggles[selOptAP][4])

				if autoPauseToggles[selOptAP][4] == 0 then
					autoPauseToggles[selOptAP][5] = 0
				else 
					autoPauseToggles[selOptAP][5] = 1
				end
			end
		"
	}
	list
	{
	
		column 
		{ 
			width 80 
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selOptAPC)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t( characterPauseToggles[rowNumber][1]), rowNumber, selOptAPC)"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -300 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selOptAPC)"
				respectClipping
			}
			label
			{
				area		15 9 22 22
				bam			ROUNDBUT
				frame		lua "characterPauseToggles[rowNumber][4]"
				scaleToClip
			}
		}
		area 80 156 382 388
		rowheight	44
		table		"characterPauseToggles"
		var		selOptAPC
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			selOptAP = 0
			autopauseString = characterPauseToggles[selOptAPC][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')

				characterPauseToggles[selOptAPC][4] = toggleFrame(characterPauseToggles[selOptAPC][4])

				if characterPauseToggles[selOptAPC][4] == 0 then
					characterPauseToggles[selOptAPC][5] = 0
				else 
					characterPauseToggles[selOptAPC][5] = 1
				end
			end
		"
	}
	text
	{
		area		70 564 810 80
		text		lua "zZscriptDescColorize(Infinity_FetchString(autopauseString))"
		text style	normal
		scrollbar	'GUISCRC'
	}
	button
	{
		area 232 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"CANCEL_BUTTON"
		text style	"button"
		action
		"
			panelID = 8
			helpString = 'GAMEPLAY_DESCRIPTION'
			Infinity_PopMenu()
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			panelID = 10

			for index, var in pairs(autoPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)		
			end
			for index, var in pairs(characterPauseToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)		
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}	
}
`
graphicsToggles = {
{'FULL_SCREEN_LABEL',18000, 9, 0, 0, 0},
{'HARDWARE_CURSOR_LABEL',%str93703%, 13, 0, 0, 0},
{'SCALE_UI_LABEL',%str93704%, 14, 0, 0, 0},
{'ZOOM_LOCK_LABEL',%str103188%, 36, 0, 0, 0},
{'SPRITE_OUTLINE_LABEL',%str103189%, 15, 0, 0, 0},
{'GREYSCALE_ON_PAUSE_LABEL',%str103190%, 66, 0, 0, 0},
{'HIGHLIGHT_SPRITE_LABEL',%str103191%, 67, 0, 0, 0},
{'DITHER_ALWAYS_LABEL',18021, 52, 0, 0, 0},
{'SHOW_HP_LABEL',%str103205%, 53, 0, 0, 0},
{'SHOW_HEALTHBAR_LABEL',%str103192%, 65, 0, 0, 0},
{'SHOW_BLACK_SPACE_LABEL','SHOW_BLACK_SPACE_DESCRIPTION', 69, 0, 0, 0},
{'NEAREST_NEIGHBOUR_LABEL','NEAREST_NEIGHBOUR_DESCRIPTION', 70, 0, 0, 0},
{'AREA_MAP_ZOOM_TRANSITION_LABEL','AREA_MAP_ZOOM_TRANSITION_DESCRIPTION', 71, 0, 0, 0}
}

addedDirectx = false
function appendDirectXOption()
	if addedDirectx == false then
		dxOption = {'DIRECTX_LABEL', %str103148%, 68, 0, 0, 0}
		table.insert(graphicsToggles, dxOption)
		addedDirectx = true
	end
end

selectedGraphicOpt = 0

fontSizeSLDR = 0
fontSizeCancel = 0
function formatGraphicsInfoString()
	return options['Graphics']['version'] .. "\nrunning on " .. options['Graphics']['renderer'] .. "\ndriver provided by " .. options['Graphics']['vendor']
end
`
menu
{
	name	'OPTIONS_GRAPHICS'
	modal
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
		
		if e:HasDirectX() then
			appendDirectXOption()
		end
		panelID = 6
		helpString = 18042
		selectedGraphicOpt = 0
		selectedSL = 0
		fontSizeSLDR = Infinity_GetOption(22, panelID)
		fontSizeCancel = Infinity_GetOption(22, panelID)
		
		for index, var in pairs(graphicsToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			var[6] = 0
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end

		if e:IsTouchUI() then
			removeOptionFromList(graphicsToggles, 9)
			removeOptionFromList(graphicsToggles, 13)
		end
	"
	onClose
	"
		zZupdateGraphicOpt = 1
	"
	button
	{
		area 0 -2 944 768
		mosaic	fchlaabl
		action
		"
			helpString = 18042
			selectedSL = 0
		"
	}
	label
	{
		area		102 84 742 44
		text		"GRAPHICS_TITLE"
		text style	title
		text color	'O'
		text shadow	1
	}
	label
	{
		area		490 154 388 162
		text		lua "formatGraphicsInfoString()"
		text style	normal
		text color	'$'
		text align	center center
	}
	text
	{
		area		78 218 380 44
		text		"DISPLAY_OPTIONS_LABEL"
		text style	"button"
		text color	'O'
		text point	14
		text align 	right center
		glow lua "getSelected(selectedSL, 1)"
		action
		"
			selectedGraphicOpt = 0
			helpString = 18042
			selectedSL = 1
		"
	}
	list
	{
		column 
		{
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetImportExportPng(rowNumber, selectedGraphicOpt)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(t(graphicsToggles[rowNumber][1]), rowNumber, selectedGraphicOpt)"
				text style "normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -285 0 -1 -1
				mosaic lua "zZgetImportExportPng(rowNumber, selectedGraphicOpt)"
				respectClipping
			}
			label
			{
				area		25 4 22 22
				bam			ROUNDBUT
				frame		lua "graphicsToggles[rowNumber][4]"
				scaletoclip
			}
		}
		area 78 276 380 368
		rowheight	34
		table		"graphicsToggles"
		var		selectedGraphicOpt
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			panelID = 6
			helpString = graphicsToggles[selectedGraphicOpt][2]
			selectedSL = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				graphicsToggles[selectedGraphicOpt][4] = toggleFrame(graphicsToggles[selectedGraphicOpt][4])

				if graphicsToggles[selectedGraphicOpt][4] == 0 then
					graphicsToggles[selectedGraphicOpt][5] = 0
				else 
					graphicsToggles[selectedGraphicOpt][5] = 1
				end
				graphicsToggles[selectedGraphicOpt][6] = 1
			end
		"
	}
	label
	{
		area 482 326 400 318
		rectangle 0
		rectangle opacity 250
	}
	text
	{
		area		496 338 374 292
		text		lua "zZscriptDescColorize(getStringFromAmbiguousSource(helpString))"
		text style	normal
		scrollbar	'GUISCRC'
	}
	text
	{
		area		78 154 171 36
		text		lua "t('FONT_SIZE_LABEL') .. '  [ ^A' .. fontSizeSLDR .. '^- ]'"
		text style	"label"
		text align	right center
		text color	'$'
		text upper
		text useFontZoom 1
		glow lua "getSelected(selectedSL, 2)"
		action 
		"
			helpString = 17204
			selectedGraphicOpt = 0
			selectedSL = 2
		" 
	}
	label
	{
		area 258 154 200 36
		glow lua "getSelected(selectedSL, 2)"
	}
	slider
	{
		area 258 154 200 36
		position "fontSizeSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	7
		pad 4 0 4 0
		action
		"
			Infinity_ChangeOption( 22, fontSizeSLDR, 6)
			helpString = 17204
			selectedGraphicOpt = 0
			selectedSL = 2
		"
	}
	button
	{
		area		232 676 230 44
		bam			GUIBUTMT
		sequence	2
		text 		"CANCEL_BUTTON"
		text style	"button"
		action
		"
			panelID = 6
			Infinity_ChangeOption( 22, fontSizeCancel, panelID)
			selectedSL = 0
			Infinity_PopMenu()
		"
	}
	button
	{
		area		482 676 230 44	
		bam			GUIBUTMT
		sequence	2
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			panelID = 6
			Infinity_ChangeOption( 22, fontSizeSLDR, panelID)

			for index, var in pairs(graphicsToggles) do
				
				if ( var[6] == 1 ) then
					Infinity_ChangeOption( var[3], var[5], panelID)
				end				
			end

			selectedSL = 0
			Infinity_PopMenu()
		"
	}
}
`
soundsToggles = {
{'CHARACTER_SUBTITLES_LABEL',18015, 5, 0, 0},
{'BATTLE_CRIES_LABEL',18013, 6, 0, 0},
{'MOVEMENT_SOUNDS_LABEL',18014, 7, 0, 0}
}
selectedsoundOpt = 0
command = {
{'ALWAYS_LABEL',0, 8, 0, 0},
{'SELDOM_LABEL',0, 9, 0, 0},
{'NEVER_LABEL',0, 10, 0, 0}
}
commandSel = 0
selectOpt = {
{'ALWAYS_LABEL',0, 58, 0, 0},
{'SELDOM_LABEL',0, 59, 0, 0},
{'NEVER_LABEL',0, 60, 0, 0}
}
selectSel = 0
ambientSLDR = 0
sfxSLDR = 0
voiceSLDR = 0
musicSLDR = 0
movieSLDR = 0

`
menu
{
	name	'OPTIONS_SOUND'
	align center center
	modal
	onOpen
	"
		zzInCharacterRecord = 0
		
		panelID = 7
		helpString = 18042
		selectedsoundOpt = 0
		selectedSL = 0

		ambientSLDR = Infinity_GetOption(1, panelID)
		sfxSLDR = Infinity_GetOption(2, panelID)
		voiceSLDR = Infinity_GetOption(3, panelID)
		musicSLDR = Infinity_GetOption(4, panelID)
		movieSLDR = Infinity_GetOption(22, panelID)

		for index, var in pairs(command) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				commandSel = index
			end
		end
		for index, var in pairs(selectOpt) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
		for index, var in pairs(soundsToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
				selectSel = index
			end
		end
	"
	button
	{
		area	0 -2 944 768
		mosaic	FCCREDIT
		action
		"
			helpString = 18042
		"
	}
	button
	{
		area	56 142 421 512
		mosaic	fcoptcp1
		action
		"
			helpString = 18042
		"
	}
	label
	{
		area		102 80 742 44
		text		"SOUND_TITLE"
		text style	title
		text color	'O'
		text shadow 1
	}
	text
	{
		area		68 465 312 44
		text		"CHARACTER_SOUNDS_LABEL"
		text style	"button"
		text color	'O'
		text point	14
		text align 	right center
		action
		"
			helpString = 18042
		"
	}
	list
	{
		column 
		{
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selectedsoundOpt)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(t(soundsToggles[rowNumber][1]), rowNumber, selectedsoundOpt)"
				text style "normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -294 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, selectedsoundOpt)"
				respectClipping
			}
			label
			{
				area		35 9 22 22
				bam			ROUNDBUT
				frame		lua "soundsToggles[rowNumber][4]"
				scaleToClip
			}
		}
		area 67 509 410 145
		rowheight	44
		table		"soundsToggles"
		var		selectedsoundOpt
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			panelID = 7
			helpString = soundsToggles[selectedsoundOpt][2]
			selectedSL = 0
			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				soundsToggles[selectedsoundOpt][4] = toggleFrame(soundsToggles[selectedsoundOpt][4])

				if soundsToggles[selectedsoundOpt][4] == 0 then
					soundsToggles[selectedsoundOpt][5] = 0
				else 
					soundsToggles[selectedsoundOpt][5] = 1
				end
				
			end
		"
	}
	text
	{
		area		486 146 308 44
		text		"COMMAND_SOUNDS_BUTTON"
		text style	"button"
		text color	'O'
		text point	14
		text align 	right center
		glow lua "getSelected(selectedSL, 1)"
		action 
		"
			helpString = 18016
			selectedsoundOpt = 0
			selectedSL = 1
		"
	}
	list
	{
		column 
		{ 
			width 80
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(command[rowNumber][1]), 2, command[rowNumber][4])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		35 9 22 22
				bam			ROUNDBUT
				frame		lua "command[rowNumber][4]"
				scaleToClip
			}
		}
		area 486 194 394 132
		rowheight	44
		table		"command"
		var		commandSel
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			panelID = 7
			helpString = 18016
			selectedSL = 1
			opt = commandSel
			command[1][4] = 0
			command[2][4] = 0
			command[3][4] = 0
			selectedSoundOpt = 0
			
			Infinity_PlaySound('GAM_09')
			command[opt][4] = 2
		"
	}
	text
	{
		area		486 326 308 44
		text		"SELECTION_BUTTON"
		text style	"button"
		text color	'O'
		text point	14
		text align 	right center
		glow lua "getSelected(selectedSL, 2)"
		action 
		"
			helpString = 11352
			selectedsoundOpt = 0
			selectedSL = 2
		"
	}
	list
	{
		column 
		{ 
			width 80
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(selectOpt[rowNumber][1]), 2, selectOpt[rowNumber][4])"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area		35 9 22 22
				bam			ROUNDBUT
				frame		lua "selectOpt[rowNumber][4]"
				scaleToClip
			}
		}
		area 486 370 394 134
		rowheight	44
		table		"selectOpt"
		var		selectSel
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			panelID = 7
			helpString = 11352
			selectedSL = 2
			opt = selectSel
			selectOpt[1][4] = 0
			selectOpt[2][4] = 0
			selectOpt[3][4] = 0
			selectedSoundOpt = 0
			
			Infinity_PlaySound('GAM_09')
			selectOpt[opt][4] = 2
		"
	}
	label
	{
		area 482 504 398 143
		rectangle 0
	}
	text
	{
		area		494 518 376 119
		text		lua "zZscriptDescColorize(Infinity_FetchString(helpString))"
		text style	normal
		scrollbar	'GUISCRC'
	}
	text
	{
		area		74 146 314 44
		text		"VOLUME_CONTROLS_LABEL"
		text style	"button"
		text color	'O'
		text point	14
		text align 	right center
	}
	text
	{
		area		74 194 173 40
		text		"AMBIENT_VOLUME_LABEL"
		text style	"label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 4)"
		action 
		"
			helpString = 18008
			selectedsoundOpt = 0
			selectedSL = 4
		"
	}
	label
	{
		area 266 197 200 36
		glow lua "getSelected(selectedSL, 4)"
	}
	slider
	{
		area 266 197 200 36
		position "ambientSLDR"
		mosaic GUISLDR
		bam	 'SLDRSTAR'
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18008
			selectedsoundOpt = 0
			selectedSL = 4
		"
	}
	text
	{
		area		74 248 173 40	
		text		"SFX_VOLUME_LABEL"
		text style	"label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 5)"
		action 
		"
			helpString = 18009
			selectedsoundOpt = 0
			selectedSL = 5
		"
	}
	label
	{
		area 266 251 200 36
		glow lua "getSelected(selectedSL, 5)"
	}
	slider
	{
		area 266 251 200 36
		mosaic GUISLDR
		position "sfxSLDR"
		bam	 'SLDRSTAR'
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18009
			selectedsoundOpt = 0
			selectedSL = 5
		"
	}
	text
	{
		area		74 304 173 40	
		text		"VOICE_VOLUME_LABEL"
		text style	"label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 6)"
		action 
		"
			helpString = 18010
			selectedsoundOpt = 0
			selectedSL = 6
		"
	}
	label
	{
		area 266 307 200 36
		glow lua "getSelected(selectedSL, 6)"
	}
	slider
	{
		area 266 307 200 36
		position "voiceSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18010
			selectedsoundOpt = 0
			selectedSL = 6
		"
	}
	text
	{
		area		74 360 173 40	
		text		"MUSIC_VOLUME_LABEL"
		text style	"label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 7)"
		action 
		"
			helpString = 18011
			selectedsoundOpt = 0
			selectedSL = 7
		"
	}
	label
	{
		area 266 363 200 36
		glow lua "getSelected(selectedSL, 7)"
	}
	slider
	{
		area 266 363 200 36
		position "musicSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		glow lua "getSelected(selectedSL, 7)"
		action 
		"
			helpString = 18011
			selectedsoundOpt = 0
			selectedSL = 7
		"
	}
	text
	{
		area		74 416 173 40	
		text		"MOVIE_VOLUME_LABEL"
		text style	"label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 8)"
		action 
		"
			helpString = 18012
			selectedsoundOpt = 0
			selectedSL = 8
		"
	}
	label
	{
		area 266 419 200 36
		glow lua "getSelected(selectedSL, 8)"
	}
	slider
	{
		area 266 419 200 36
		position "movieSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	40
		pad 4 0 4 0
		action 
		"
			helpString = 18012
			selectedsoundOpt = 0
			selectedSL = 8
		"
	}
	button
	{
		area		232 676 230 44
		bam			GUIBUTMT
		sequence	2
		text 		"CANCEL_BUTTON"
		text style	"button"
		action
		"
			selectedSL = 0
			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
	{
		area		482 676 230 44	
		bam			GUIBUTMT
		sequence	2
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			panelID = 7
			
			for index, var in pairs(command) do
				Infinity_Log('Com var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, panelID)
				end
			end
			for index, var in pairs(selectOpt) do
				Infinity_Log('Sel var[4] #' .. index .. ': ' .. var[4])
				if var[4] == 2 then
					Infinity_ChangeOption( var[3], 1, panelID)	
				end	
			end
			Infinity_ChangeOption( 1, ambientSLDR, panelID)
			Infinity_ChangeOption( 2, sfxSLDR, panelID )
			Infinity_ChangeOption( 3, voiceSLDR, panelID )
			Infinity_ChangeOption( 4, musicSLDR, panelID)
			Infinity_ChangeOption( 22, movieSLDR, panelID)

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(soundsToggles) do				
				Infinity_ChangeOption( var[3], var[5], panelID)						
			end

			panelID = 8
			Infinity_PopMenu()
		"
	}
}
`

feedbackToggles = {
{'COLORED_MARKERS_LABEL',			'COLORED_MARKERS_HELP', 			 38, 0, 0},
{'CLASSIC_MARKERS_LABEL',			'CLASSIC_MARKERS_HELP', 			 45, 0, 0},
{'ENABLE_CONFIRMATION_LABEL',		'ENABLE_CONFIRMATION_HELP', 		 41, 0, 0},
{'DISABLE_COSMETIC_ATTACKS_LABEL',	'DISABLE_COSMETIC_ATTACKS_HELP', 	 43, 0, 0},
{'JOURNAL_POPUPS_LABEL',			'JOURNAL_POPUPS_HELP', 				 44, 0, 0},
{'EQUIPMENT_COMPARISON_LABEL',      'EQUIPMENT_COMPARISON_DESCRIPTION',  46, 0, 0}
}

messagesToggles = { 
{'TO_HIT_ROLLS_LABEL',		'TO_HIT_ROLLS_HELP', 	10, 0, 0},
{'ACTIONS_LABEL', 			'ACTIONS_HELP', 		12, 0, 0},
{'STATE_CHANGES_LABEL',		'STATE_CHANGES_HELP', 	13, 0, 0},
{'COMBAT_INFO_LABEL',		'COMBAT_INFO_HELP', 	11, 0, 0},
{'SELECTION_TEXT_LABEL',	'SELECTION_TEXT_HELP',	14, 0, 0},
{'MISC_LABEL',				'MISC_HELP', 			15, 0, 0}
}

selFeedOpt = 0
selMessageOpt = 0
helpString = 0

markerFeedSLDR = 0
locatorFeedSLDR = 0

function getFrequency(d,includeHighter)
	strref = ""
	if ( d ==0 ) then
		strref = "MINIMUM"
	elseif (d == 1) then
		strref = "LOW"
	elseif (d == 2) then
		strref = "MEDIUM"
	elseif (d == 3) then
		strref = "HIGH"
	elseif (d == 4 and includeHighter == true) then
		strref = "HIGHER"
	elseif (d == 4 and includeHighter == false) then
		strref = "MAXIMUM"
	elseif (d == 5) then
		strref = "MAXIMUM"
	end
	return t(strref)
end

`
menu
{
	name	'OPTIONS_FEEDBACK'
	align center center
	modal
	onOpen
	"
		zzInCharacterRecord = 0
		
		panelID = 9

		helpString = 'FEEDBACK_HELP'
		selFeedOpt = 0
		selMessageOpt = 0
		selectedSL = 0

		markerFeedSLDR = Infinity_GetOption(8, panelID)
		locatorFeedSLDR = Infinity_GetOption(9, panelID)
		
		for index, var in pairs(feedbackToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end

		for index, var in pairs(messagesToggles) do
			var[5] = Infinity_GetOption(var[3], panelID)
			if var[5] == 0 then
				var[4] = 0
			else
				var[4] = 2
			end
		end
	"
	button
	{
		area	0 -2 944 768
		mosaic	FCCREDIT
		action
		"
			helpString = 'FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 0
		"
	}
	button
	{
		area	56 142 421 512
		mosaic	fcoptcp3
		action
		"
			helpString = 'FEEDBACK_HELP'
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 0
		"
	}
	label
	{
		area		100 74 746 54
		text		"FEEDBACK_TITLE"
		text style	title
		text color	'O'
		text shadow	1
	}
	label
	{
		area		68 336 304 44
		text		"VISUAL_FEEDBACK_LABEL"
		text style	"label"
		text color	'O'
		text upper
		text align 	right center
	}
	list
	{
		
		column 
		{ 
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, selFeedOpt)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(t(feedbackToggles[rowNumber][1]), rowNumber, selFeedOpt)"
				text style "normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -335 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, selFeedOpt)"
				respectClipping
			}
			label
			{
				area		35 12 22 22
				bam			ROUNDBUT
				frame		lua "feedbackToggles[rowNumber][4]"
				scaleToClip
			}
		}
		area 68 380 398 266
		rowheight	50
		table		"feedbackToggles"
		var		selFeedOpt
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			selectedSL = 0
			selMessageOpt = 0
			helpString = feedbackToggles[selFeedOpt][2]

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				feedbackToggles[selFeedOpt][4] = toggleFrame(feedbackToggles[selFeedOpt][4])

				if feedbackToggles[selFeedOpt][4] == 0 then
					feedbackToggles[selFeedOpt][5] = 0
				else 
					feedbackToggles[selFeedOpt][5] = 1
				end
			end
		"
	}
	label
	{
		area		482 150 300 44
		text		"FEEDBACK_MESSAGES_LABEL"
		text style	"label"
		text color	'O'
		text upper
		text align 	right center
	}
	list
	{
		column 
		{ 
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, selMessageOpt)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(messagesToggles[rowNumber][1]), rowNumber, selMessageOpt)"
				text style	"normal"
				text align right center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -335 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, selMessageOpt)"
				respectClipping
			}
			label
			{
				area		35 12 22 22
				bam			ROUNDBUT
				frame		lua "messagesToggles[rowNumber][4]"
				scaleToClip
			}
		}
		area 482 194 392 310
		rowheight	50
		table		"messagesToggles"
		var		selMessageOpt
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			helpString = messagesToggles[selMessageOpt][2]
			selectedSL = 0
			selFeedOpt = 0

			if(cellNumber == 2) then
				Infinity_PlaySound('GAM_09')
				messagesToggles[selMessageOpt][4] = toggleFrame(messagesToggles[selMessageOpt][4])

				if messagesToggles[selMessageOpt][4] == 0 then
					messagesToggles[selMessageOpt][5] = 0
				else 
					messagesToggles[selMessageOpt][5] = 1
				end
			end
		"
	}
	label
	{
		area 482 498 392 148
		rectangle 0
	}
	text
	{
		area		494 510 368 126
		text		lua "zZscriptDescColorize(t(helpString))"
		text style	normal
		scrollbar	'GUISCRC'
	}
	text 
	{
		area		68 166 190 36
		text		"MARKER_FEEDBACK_LABEL"
		text style "label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 1)"
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 1
		"
	}
	label
	{
		area		266 166 200 36
		glow lua "getSelected(selectedSL, 1)"
	}
	slider
	{
		area		266 166 200 36
		position "markerFeedSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	6
		pad 5 0 5 0
		action 
		"
			helpString = 'MARKER_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 1
		"
	}
	label
	{
		area		266 198 200 36
		text		lua "getFrequency(markerFeedSLDR,true)"
		text style	"label"
		text align	center center
	}
	text
	{
		area		68 252 190 36	
		text		"LOCATOR_FEEDBACK_LABEL"
		text style "label"
		text color	'$'
		text align	right center
		text upper
		glow lua "getSelected(selectedSL, 2)"
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 2
		"
	}
	label
	{
		area		266 252 200 36
		glow lua "getSelected(selectedSL, 2)"
	}
	slider
	{
		area 266 252 200 36
		position "locatorFeedSLDR"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	5
		pad 5 0 5 0
		action 
		"
			helpString = 'LOCATOR_FEEDBACK_HELP' 
			selFeedOpt = 0
			selMessageOpt = 0
			selectedSL = 2
		"
	}
	label
	{
		area		266 284 200 36
		text		lua "getFrequency(locatorFeedSLDR,false)"
		text style	"label"	
		text align	center center
	}
	button
	{
		area 232 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"CANCEL_BUTTON"
		text style	"button"
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			selectedSL = 0
			panelID = 8
			Infinity_PopMenu()
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			helpString = 'GAMEPLAY_DESCRIPTION'
			panelID = 9
			Infinity_ChangeOption( 8, markerFeedSLDR, panelID)
			Infinity_ChangeOption( 9, locatorFeedSLDR, panelID )

			selectedOpt = 0
			selectedSL = 0

			for index, var in pairs(messagesToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)
			end

			for index, var in pairs(feedbackToggles) do
				Infinity_ChangeOption( var[3], var[5], panelID)
			end
			Infinity_PopMenu()
		"
	}
}
`
function getGooglePlaySignInText()
	if(Infinity_GooglePlaySignedIn() == 1) then
		return t("SIGN_OUT_BUTTON")
	else
		return t("SIGN_IN_BUTTON")
	end
end

keyCategory = 1
key = 0

function displayHelp()
	if not (key == 0) then
		return %str102621%
	end
	return 0
end

function formatKeyCode(number)
	local ret = ""

	if number < 127 and number > 32 then
		return string.format('%c', keybindings[keyCategory][rowNumber][6])
	end
	ret = t("SDL_" .. string.format('%d', keybindings[keyCategory][rowNumber][6]))
 
	return ret
end

function getHotkeyName(category,number)
	local ret = ""
	if category < 5 then
		ret = t(keybindings[category][number][4])
		if ret == keybindings[category][number][4] then
			ret = Infinity_FetchString(keybindings[category][number][4])
		end
	else
		ret = Infinity_FetchString(keybindings[category][number][4])
	end
	return ret
end
`
menu
{
	name	'OPTIONS_KEYBINDINGS'
	modal
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
	"
	button
	{
		area 0 -2 944 768
		mosaic FCCHSSPM
	}
	
	label
	{
		area 100 82 744 44
		text  "ASSIGN_KEYS_TITLE" 
		text style	"title"
		text color	'O'
		text shadow	1
	}
	label
	{
		area 72 150 390 50
		text  "ASSIGN_KEYS_SUBTITLE" 
		text style	"label"
		text color	'$'
	}
	label
	{
		area 482 150 392 50
		text lua "Infinity_FetchString(displayHelp())"
		text style	"label"
		text color	'$'
	}
	list
	{
		column 
		{ 
			width 100 
			label
			{
				area 0 0 -1 -1
				bam lua "zZgetBkgBam(rowNumber, keyCategory)"
				sequence 0
				scaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(t(keycategories[rowNumber][2]), rowNumber, keyCategory)"
				text style	"normal"
				text align	center center 
			}
		}
		area 72 214 390 430
		rowheight	24
		table		"keycategories"
		var			keyCategory
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			Infinity_StopKeybind()
			key = 0
		"
	}
	list
	{
		column 
		{ 
			width 90 
			label
			{
				area 0 0 -1 -1
				bam lua "zZgetBkgBam(rowNumber, key)"
				sequence 0
				scaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(getHotkeyName(keyCategory,rowNumber), rowNumber, key)"
				text style	"normal"
				align left center
			}
		}
		column 
		{ 
			width 10
			label
			{
				area 0 0 -1 -1
				bam lua "zZgetBkgBam(rowNumber, key)"
				sequence 0
				scaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "formatKeyCode(keybindings[keyCategory][rowNumber][6])"
				text style	"normal"
				text color	'D'
				text upper
				glow lua "rowNumber == key"
				text align right center 
			}
		}
		area 486 214 388 430
		rowheight	24
		table		"keybindings[keyCategory]"
		var			key
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
		if(key > 0) then
			Infinity_StartKeybind(key);
		end
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		sequence 0
		text		"DONE_BUTTON"
		text style	"button"
		action
		"
			Infinity_StopKeybind()
			key = 0
			Infinity_PopMenu();
		"	
	}
	button
	{
		area 232 676 230 44
		bam GUIBUTMT
		sequence 0
		text		"REVERT_BUTTON"
		text style	"button"
		action
		"
			revertKeymap();
		"	
	}
}
menu
{
	name	'TIPUN_OPTIONS'
	modal
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
		zZoptHelpString = ''
	"
	label
	{
		area 0 -2 944 768
		mosaic FCCHSSPM
	}
	label
	{
		area		96 80 754 44
		text		"FC_TIPUN_OPTIONS"
		text style	title
		text color	'O'
		text shadow	1
	}
	label
	{
		area		66 148 402 54
		text		"FC_TIPUN_BASE_SETTINGS"
		text style	title
		text color	'$'
	}
	label
	{
		area		478 148 398 54
		text		"FC_TIPUN_OTHER_SETTINGS"
		text style	title
		text color	'$'
	}
	label
	{
		area 484 466 396 184
		rectangle 0
	}
	text
	{
		area		496 478 372 160
		text		lua "zZscriptDescColorize(t(zZoptHelpString))"
		text style	normal
		text align	left top
		text point	12
		scrollbar	'GUISCRC'
	}
	--list general
	list
	{
		column 
		{
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, zZoptGeneral)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(zZgeneralSettings[rowNumber][1]), rowNumber, zZoptGeneral)"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -296 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, zZoptGeneral)"
				respectClipping
			}
			label
			{
				area		30 9 22 22
				bam			ROUNDBUT
				frame		lua "zZgeneralSettings[rowNumber][4]"
				scaleToClip
			}
		}
		area 82 212 396 248
		rowheight	44
		table		"zZgeneralSettings"
		var		zZoptGeneral
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			zZoptHelpString = zZgeneralSettings[zZoptGeneral][2]
			if cellNumber == 2 then
				zZgeneralSettings[zZoptGeneral][4] = toggleFrame(zZgeneralSettings[zZoptGeneral][4])
				zZgeneralSettings[zZoptGeneral][5] = zzSetZOpt(zZgeneralSettings[zZoptGeneral][4])
				zZupdateGeneralOptionsVars(zZoptGeneral)
			end
		"
	}
	--list other
	list
	{
		column 
		{
			width 80
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, zZoptOther)"
				respectClipping
			}
			label
			{
				area 10 0 -1 -1
				text lua "zZsetTextColorTableScript(t(zZotherSettings[rowNumber][1]), rowNumber, zZoptOther)"
				text style "normal"
				text align left center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -296 0 -1 -1
				mosaic lua "zZgetHatedRaceCassMosaic(rowNumber, zZoptOther)"
				respectClipping
			}
			label
			{
				area		30 9 22 22
				bam			ROUNDBUT
				frame		lua "zZotherSettings[rowNumber][4]"
				scaleToClip
			}
		}
		area 482 212 396 248
		rowheight	44
		table		"zZotherSettings"
		var		zZoptOther
		scrollbar	'GUISCRC'
		hidehighlight
		action		
		"
			zZoptHelpString = zZotherSettings[zZoptOther][2]
			if cellNumber == 2 then
				zZotherSettings[zZoptOther][4] = toggleFrame(zZotherSettings[zZoptOther][4])
				zZotherSettings[zZoptOther][5] = zzSetZOpt(zZotherSettings[zZoptOther][4])
				zZupdateOtherOptionsVars(zZoptOther)
			end
		"
	}
	--Close
	button
	{
		area 232 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"CANCEL_BUTTON"
		text style	"button"
		action
		"
			zZoptOther = 0
			zZoptGeneral = 0
			Infinity_PopMenu()
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			zZoptOther = 0
			zZoptGeneral = 0
			zZsaveZOptions(zZotherSettings)
			zZsaveZOptions(zZgeneralSettings)
			Infinity_PopMenu()
		"
	}
}
`
creditspage = 1
function GetCreditsTitle()
	return creditspage .. ' / ' .. #credits
end
`
menu
{
	name	'CREDITS'
	modal
	align center center
	label
	{
		area 0 -2 944 768
		mosaic FCCREDIT
	}
	
	label
	{
		area 96 80 754 44
		text lua "'^O' .. stringsAll.zzPage .. '^-: ' .. GetCreditsTitle()"
		text style "title"
		text color	'$'
		text shadow	1
	}
	text
	{
		area 75 155 793 488
		text lua "zZscriptDescColorize(Infinity_FetchString(credits[creditspage]))"
		scrollbar	'GUISCRC'
		scrollbar func "resetScrollbar"
		text style "normal"
		text align center top
	}
	button
	{
		area		587 676 200 44
		bam			GUIBUTNT
		sequence	0
		text		"NEXT_BUTTON"
		text style "button"
		action
		"
			scrollbarReset = 1
			creditspage = creditspage + 1;
			if credits[creditspage] == nil then creditspage = 1 end
		"	
	}
	button
	{
		area		161 676 197 44
		bam			GUIBUTNT
		sequence	1
		text		"BACK_BUTTON"
		text style "button"
		action
		"
			scrollbarReset = 1
			creditspage = creditspage - 1;
			if credits[creditspage] == nil then creditspage = #credits end
		"	
	}
	button
	{
		area		374 676 201 44
		bam			GUIBUTNT
		sequence	2
		text  "DONE_BUTTON"
		text style "button"
		on escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}
`
language = 0
showsubtitles = 0
function languageDetails()
	if languages[language] ~= nil then
		return Infinity_FetchString(languages[language][2]) .. '\n'  .. Infinity_FetchString(languages[language][3])
	else
		return ""
	end
end
function findCurrentLanguage()
	local lang = Infinity_GetINIString('Language', 'Text', '')
	for k,v in pairs(languages) do
		if v[1] == lang then
			language = k
		end
	end
end
`
menu
{
	name	'OPTIONS_LANGUAGE'
	modal
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
		showsubtitles = Infinity_GetINIValue('Program Options', 'Display Subtitles', 1)
		findCurrentLanguage()
	"
	button
	{
		area		0 -2 944 768
		mosaic		FCCREDIT
	}
	label
	{
		area 96 80 754 44
		text "LANGUAGE_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	list
	{
		column { 
			width 100
			label
			{
				area 0 0 -1 -1
				bam lua "zZgetBkgBam(rowNumber, language)"
				scaleToClip
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(languages[rowNumber][4], rowNumber, language)"
				text style	"normal"
				text align center center 
			}
		}
		area		72 158 206 446
		rowheight	24
		table		"languages"
		var			language
		scrollbar	'GUISCRC'
		hidehighlight
	}
	label
	{
		area 284 234 580 370
		fill 112 111 111 64
	}
	text
	{
		area		284 234 580 370
		text lua	"zZscriptDescColorize(languageDetails())"
		text style	normal
		text align	center top
		scrollbar	'GUISCRC'
	}
	label
	{
		area		72 608 170 34
		text	"SHOW_SUBTITLES_LABEL"
		text style	"label"
		text color	'O'
		text align	right center
		text upper
	}
	label
	{
		area		284 604 580 42
		text lua 	"Infinity_FetchString(%str102624%)"
		text style	"normal"
		text color	'$'
		text align	center center
		text upper
	}
	label
	{
		area		284 158 580 72
		text lua 	"zZscriptDescColorize(Infinity_FetchString(%str102626%))"
		text style	"normal"
		text align	center center
		text color 	'$'
	}
	button
	{
		area		255 613 22 22
		bam			ROUNDBUT
		toggle		showsubtitles
		scaleToClip
	}
	button
	{
		area 232 676 230 44
		bam GUIBUTMT
		sequence 0
		text	"CANCEL_BUTTON"
		text style	"button"
		action
		"
			-- cancel
			for index, var in pairs(languages) do
				Infinity_Log(var[3])
			end
			Infinity_PopMenu();
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		sequence 0
		text 		"DONE_BUTTON"
		text style	"button"
		action
		"
			-- done
			Infinity_SetLanguage(languages[language][1],showsubtitles)
			Infinity_PopMenu()
		"
	}
}
`
function restoreOverlayFromQuit()
	--restore the old overlay if applicable
	if oldOverlayMenuName and oldOverlayMenuName ~= 'QuitMenu' then
		Infinity_SetOverlay(oldOverlayMenuName)
	else
		Infinity_SetOverlay(nil)
	end
end
`
menu
{
	name 'QuitMenu'
	modal
	align center center
	label
	{
		area 0 0 657 234
		mosaic 'GUIERR6Z'
	}
	label
	{
		area 40 20 600 120
		text  20186
		text style	"label"
	}
	button
	{
		area		370 170 230 40
		bam			'GUIBUTMT'
		sequence	0
		text  "QUIT_GAME_BUTTON"
		text style	"button"
		on 			return
		enabled "not e:IsAndroid()"
		action
		"
			restoreOverlayFromQuit()
			Infinity_ShutdownGame()
		"	
	}
	button
	{
		area		370 170 230 40
		bam			'GUIBUTMT'
		sequence	0
		text  "QUIT_GAME_BUTTON"
		text style	"button"
		on 			escape
		enabled "e:IsAndroid()"
		action
		"
			restoreOverlayFromQuit()
			Infinity_ShutdownGame()
		"	
	}
	button
	{
		area		88 170 230 40
		bam			'GUIBUTMT'
		sequence	0
		text  "CANCEL_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			restoreOverlayFromQuit()
			Infinity_PopMenu('QuitMenu')
		"	
	}
}
`
selectedSlot = nil
itemRequestAmt = 0

function showItemAmountRequester(slotName)
	local slot = characters[id].equipment[slotName]
	if(slot.item.count == nil) then
		Infinity_Log("Nil count in requester!")
		return
	end
	if(slot.item.count > 1) then
		selectedSlot = slotName
		popupRequester(slot.item.count, inventorySplitStack, false)
	end
end
function inventorySplitStack(cnt)
	Infinity_SplitItemStack(characters[id].equipment[selectedSlot].id, cnt,'slot_inv_' .. characters[id].equipment[selectedSlot].id)
end

function GetAbilityIdentifyString()
	if(characters[id].equipment[selectedSlot].item.identified == 0) then
		return t("IDENTIFY_BUTTON")
	end
	
	if(characters[id].equipment[selectedSlot].abilityMode == 1) then
		return t("ABILITIES_BUTTON")
	end
	return ""
end
requester = {}
requester.requesterMax = 0
requester.requesterFunc = nil
requester.selling = false
`
menu
{
	name 'POPUP_REQUESTER'
	align center center
	modal
	onOpen
	"
		zzInCharacterRecord = 0
		if requester.selling == false then
			itemRequestAmt = 1
		else
			itemRequestAmt = requester.requesterMax
		end
		zZitemRequestAmt = itemRequestAmt
	"
	
	label
	{
		area 0 0 465 500
		mosaic FCGUIERR
	}
	label
	{
		area	132 136 208 47
		text	"CHOOSE_AMT_LABEL"
		text style "normal"
		text color 'O'
		text align center center
	}
	edit
	{
		area		156 195 86 39
		var			itemRequestAmt
		text style	"edit"
		align center center
		maxlines	1
		fill            112 111 111 64
		action
		"
			-- only permit numbers as letters.
			-- character limit of 4
			if((tonumber(letter_pressed) ~= nil and #tostring(itemRequestAmt) < 4) or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		bam			GUIBUTNT
		sequence	6
		area		139 362 201 40
		text  "CANCEL_BUTTON"
		text style	"button"
		action
		"
			Infinity_PopMenu()
		"
	}	
	button
	{
		bam			GUIBUTWT
		sequence	6
		area		84 316 299 40
		text  "DONE_BUTTON"
		text style	"button"
		action
		"
			local cnt = tonumber(itemRequestAmt)
			Infinity_PopMenu()
			if(cnt and cnt > 0 and cnt <= requester.requesterMax) then
				requester.requesterFunc(cnt)
			end
		"
	} 
	label
	{
		area 135 295 50 20
		text "1"
		text style	"normal"
		text color "Z"
		align left center
	}
	label
	{
		area 210 295 50 20
		text lua "math.floor(requester.requesterMax / 2)"
		text style	"normal"
		text color "Z"
		align center center
	}
	label
	{
		area 285 295 50 20
		text lua "requester.requesterMax"
		text style	"normal"
		text color "Z"
		align right center
	}
	slider
	{
		area 135 266 200 39
		position "zZitemRequestAmt"
		bam	 'SLDRSTAR'
		mosaic GUISLDR
		sequence 0
		frame	 1
		settings	lua "requester.requesterMax + 1"
		pad 4 0 6 0
		action 
		"
			selectedOpt = 0
			selectedSL = 0
			if zZitemRequestAmt == 0 then zZitemRequestAmt = 1 end
			itemRequestAmt = zZitemRequestAmt
		" 
		actionScroll
		"
			zZitemRequestAmt = zZscrollPopupRequests(zZitemRequestAmt, requester.requesterMax)
			if zZitemRequestAmt < 1 then zZitemRequestAmt = 1
			elseif zZitemRequestAmt > requester.requesterMax then zZitemRequestAmt = requester.requesterMax
			end
			itemRequestAmt = zZitemRequestAmt
		"
	}
	button
	{
		bam GUIOSW
		area 248 195 44 44
		sequence 0
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
				zZitemRequestAmt = itemRequestAmt
			end
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt < requester.requesterMax) then
				itemRequestAmt = amt + 1
				zZitemRequestAmt = itemRequestAmt
			end
		"
	}
	button
	{
		bam GUIOSW
		area 292 195 44 44
		sequence 1
		action
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
				zZitemRequestAmt = itemRequestAmt
			end
		"
		actionHold
		"
			local amt = tonumber(itemRequestAmt)
			if(amt > 1) then
				itemRequestAmt = amt - 1
				zZitemRequestAmt = itemRequestAmt
			end
		"
	}
}
`
selectedAbility = -1
function initAbilities()
	--initialize selected ability
	local i = 1
	while ( i < 4 ) do
		local ability = characters[id].equipment[selectedSlot].abilities[i]
		if(ability ~= nil) then
			if(ability.selected == 1) then
				selectedAbility = i
				return
			end
		end
		i = i + 1
	end
end
`
menu
{
	name 'ITEM_ABILITIES'
	align center center
	modal
	onOpen "initAbilities()"
	label
	{
		area	0 0 390 617
		mosaic	FCGUIMGX
	}
	label
	{
		area 0 16 390 44
		text "ITEM_ABILITIES_TITLE"
		text style	"title"
		text color 'O'
	}
	label
	{
		area 22 74 344 52
		glow lua "selectedAbility == 1"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
	}
	text
	{
		area 22 74 344 52
		glow lua "selectedAbility == 1"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[1].text"
		text style	"label"
		text color '$'
		action "selectedAbility = 1"
	}
	button
	{
		area 22 74 52 52
		bam "STONSLOT"
		enabled "characters[id].equipment[selectedSlot].abilities[1] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[1].icon"
		action "selectedAbility = 1"
	}
	label
	{
		area 22 138 344 52
		glow lua "selectedAbility == 2"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
	}
	text
	{
		area 22 138 344 52
		glow lua "selectedAbility == 2"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[2].text"
		text style	"label"
		text color '$'
		action "selectedAbility = 2"
	}
	button
	{
		area 22 138 52 52
		bam "STONSLOT"
		enabled "characters[id].equipment[selectedSlot].abilities[2] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[2].icon"
		action "selectedAbility = 2"
	}
	label
	{
		area 22 202 344 52
		glow lua "selectedAbility == 3"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
	}
	text
	{
		area 22 202 344 52
		glow lua "selectedAbility == 3"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		text lua "characters[id].equipment[selectedSlot].abilities[3].text"
		text style	"label"
		text color '$'
		action "selectedAbility = 3"
	}
	button
	{
		area 22 202 52 52
		bam "STONSLOT"
		enabled "characters[id].equipment[selectedSlot].abilities[3] ~= nil"
		icon lua "characters[id].equipment[selectedSlot].abilities[3].icon"
		action "selectedAbility = 3"
	}
	
	label
	{
		area 32 340 326 116
		text 11322
		text style "label"
	}
	
	button
	{
		area 78 484 232 40
		bam			GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		action
		"
			local itemNum = characters[id].equipment[selectedSlot].abilities[selectedAbility].itemNum
			Infinity_SelectItemAbility(selectedAbility - 1, itemNum, characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
		"
	}
	
	button
	{
		area 78 538 232 40
		bam			GUIBUTMT
		text "CANCEL_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu()
		"
	}
}
`
TEXT_popup_info = 0
`
menu
{
	name 'POPUP_INFO'
	align center center
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z
	}
	label
	{
		area 29 21 580 126
		text lua "getStringFromAmbiguousSource(TEXT_popup_info)"
		text style	"label"
	}
	button
	{
		area 213 170 200 40
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'POPUP_TWOBUTTON'
	align center center
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z

	}
	label
	{
		area 29 21 580 126
		text lua "getStringFromAmbiguousSource(Popup2Button.info)"
		text style	"label"
		text align center center
	}
	button
	{
		on escape
		area 79 170 230 40
		bam GUIBUTMT
		align center center
		text lua "t(Popup2Button.cancelText or 'CANCEL_BUTTON')"
		text style	"button"
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.cancelFunc) then
				Popup2Button.cancelFunc()
			end
		"
	}
	button
	{
		area 343 170 230 40
		bam GUIBUTMT
		align center center
		text style	"button"
		text lua "t(Popup2Button.okText or 'DONE_BUTTON')"
		action 
		"
			Infinity_PopMenu('POPUP_TWOBUTTON')
			if (Popup2Button.okFunc) then
				Popup2Button.okFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_THREEBUTTON'
	align center center
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z

	}
	label
	{
		area 29 21 580 126
		text lua "getStringFromAmbiguousSource(Popup3Button.info)"
		text style	"label"
		text align center center
	}
	button
	{
		area 440 170 200 40
		bam GUIBUTNT
		align center center
		text lua "t(Popup3Button.rightText)"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.rightFunc) then
				Popup3Button.rightFunc()
			end
		"
	}
	button
	{
		area 228 170 200 40
		bam GUIBUTNT
		align center center
		text style	"button"
		text lua "t(Popup3Button.midText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.midFunc) then
				Popup3Button.midFunc()
			end
		"
	}
	button
	{
		area 18 170 200 40
		bam GUIBUTNT
		align center center
		text style	"button"
		text lua "t(Popup3Button.leftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup3Button.leftFunc) then
				Popup3Button.leftFunc()
			end
		"
	}
}

menu
{
	name 'POPUP_FOURBUTTON'
	align center center
	modal
	label
	{
		area 0 0 900 234
		mosaic GUIERR7Z
	}
	label
	{
		area 55 21 789 126
		text lua "getStringFromAmbiguousSource(Popup4Button.info)"
		text style	"label"
		text align center center
	}
	button
	{
		area 668 170 200 40
		bam		GUIBUTNT
		text lua "t(Popup4Button.farRightText)"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farRightFunc) then
				Popup4Button.farRightFunc()
			end
		"
	}
	button
	{
		area 458 170 200 40
		bam		GUIBUTNT
		text style	"button"
		text lua "t(Popup4Button.rightText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.rightFunc) then
				Popup4Button.rightFunc()
			end
		"
	}
	button
	{
		area 248 170 200 40
		bam		GUIBUTNT
		text style	"button"
		text lua "t(Popup4Button.leftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.leftFunc) then
				Popup4Button.leftFunc()
			end
		"
	}
	button
	{
		area 38 170 200 40
		bam		GUIBUTNT
		text style	"button"
		text lua "t(Popup4Button.farLeftText)"
		action 
		"
			Infinity_PopMenu()
			if (Popup4Button.farLeftFunc) then
				Popup4Button.farLeftFunc()
			end
		"
	}
}

menu
{
	name 'ITEM_IDENTIFY'
	align center center
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z
	}
	text 
	{
		area 29 21 580 126
		text 19394
		text style "label"
		align center center
	}
	button
	{
		area 440 170 200 40
		bam GUIBUTNT
		text style "button"
		text "SPELL_BUTTON"
		clickable lua "Infinity_GetSpellIdentifyEnabled(characters[id].equipment[selectedSlot].id)"
		action 
		"
			Infinity_OnSpellIdentify(characters[id].equipment[selectedSlot].id); 
			Infinity_PopMenu()
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		"
	}
	button
	{
		area 228 170 200 40
		bam GUIBUTNT
		text style "button"
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu()
			if(createCharScreen:GetEngineState() == 7) then
				--If we're in import character mode, go back to the import screen.
				e:SelectEngine(startEngine)
				startEngine:OnImportCharacterButtonClick()
			end
		"
	}
	button
	{
		area 18 170 200 40
		bam GUIBUTNT
		text style "button"
		text "SCROLL_BUTTON"
		clickable lua "Infinity_GetScrollIdentifyEnabled(characters[id].equipment[selectedSlot].id)"
		action 
		"
			Infinity_OnScrollIdentify(characters[id].equipment[selectedSlot].id)
			Infinity_PopMenu()
			itemDesc.item = characters[id].equipment[selectedSlot].item --update itemDesc item
		"
	}
}
`
function showItemDescriptionInventory(slotName)
	if(characters[id].equipment[slotName].empty ~= 0) then
		return
	end
	
	selectedSlot = slotName
	
	Infinity_CheckItemIdentify(characters[id].equipment[slotName].id)
	showItemDescription(characters[id].equipment[slotName].item, 0)
end

itemDesc = {}
function showItemDescription(item, mode)
	itemDesc.item = item
	itemDesc.mode = mode
	Infinity_PushMenu('ITEM_DESCRIPTION',0,0)
end

function itemDescLeftButtonEnabled()
	if(itemDesc.mode == 0) then
		return GetAbilityIdentifyString() ~= ""
	elseif(itemDesc.mode == 1) then
		return itemDesc.item.isBag
	end
	return 0
end
function itemDescLeftButtonText()
	if(itemDesc.mode == 0) then
		return GetAbilityIdentifyString()
	elseif(itemDesc.mode == 1) then
		return t('OPEN_CONTAINER_BUTTON')
	end
	return ""
end
function itemDescLeftButtonAction()
	if(itemDesc.mode == 0) then
		if(characters[id].equipment[selectedSlot].item.identified == 0) then
			Infinity_PushMenu('ITEM_IDENTIFY',0,0)
		else
			Infinity_PushMenu('ITEM_ABILITIES',0,0)
		end
	elseif(itemDesc.mode == 1) then 
		storeScreen:OpenBag(itemDesc.item.res)
		Infinity_PopMenu()
	end
end

function itemDescRightButtonEnabled()
	if(itemDesc.mode == 0) then
		return characters[id].equipment[selectedSlot].useMode ~= -1
	else
		return 0
	end
end
function itemDescRightButtonText()
	return Infinity_GetUseButtonText(characters[id].equipment[selectedSlot].id, characters[id].equipment[selectedSlot].useMode)
end
function itemDescRightButtonAction()
	Infinity_PopMenu()
	Infinity_OnUseButtonClick(characters[id].equipment[selectedSlot].id, characters[id].equipment[selectedSlot].useMode)
end
`
menu
{
	name 'ITEM_DESCRIPTION'
	align center center
	modal
	onOpen "
		zzCurrentDesc = 1
		zzInvPageCnt = 0
		zZnoSelectPortrait = 1
	"
	onClose "
		zZnoSelectPortrait = 0
	"
	label
	{
		area 0 -2 944 768
		mosaic FCINVITM
	}
	label
	{
		area 134 82 674 48
		text "ITEM_TITLE"
		text style title
		text color 'O'
	}
	label
	{
		area 134 161 52 52
		icon lua "itemDesc.item.icon"
	}
	label
	{
		area 248 160 448 48
		text lua "itemDesc.item.name"
		text align center center
		text style "label"
		text color  '$'
	}
	text
	{
		name 'zzItemDesc'
		area 406 270 430 338
		text lua "zZitemIdentify(itemDesc.item.identified) .. zZgetTextFromLongTexst(zZinventorySpellDesc(itemDesc.item.description), zzTextMaxSize)"
		scrollbar 'GUISCRC'
		text style "normal_parchment"
	}
	label
	{
		area 108 270 280 338
		bam lua "itemDesc.item.descPicture"
		sequence 0
		frame 0
		align center center
	}
	button
	{
		area 547 575 40 40
		bam GUIPRC
		sequence 3
		scaleToClip
		enabled "zzCurrentDesc > 1 and zzInvPageCnt >= zzCurrentDesc"
		action
		"
			zzCurrentDesc = zzCurrentDesc - 1
		"
	}
	button
	{
		area 667 575 40 40
		bam GUIPRC
		sequence 2
		scaleToClip
		enabled "zzCurrentDesc < zzInvPageCnt"
		action
		"
			zzCurrentDesc = zzCurrentDesc + 1
		"
	}
	label
	{
		area 587 575 80 40
		text lua "zzCurrentDesc .. ' / ' .. zzInvPageCnt"
		text align center center
		text point 16
		enabled "zzInvPageCnt > 1"
	}
	button
	{
		bam			GUIBUTNT
		sequence	6
		area		161 676 197 44
		enabled "itemDescLeftButtonEnabled()"
		text lua "itemDescLeftButtonText()"
		text style "button"
		action
		"
			itemDescLeftButtonAction()
		"
	}
	button
	{
		bam			GUIBUTNT
		sequence	6
		area		374 676 201 44
		text  "DONE_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu();
		"
	}
	button
	{
		bam			GUIBUTNT
		sequence	6
		area		587 676 200 44
		enabled "itemDescRightButtonEnabled()"
		text lua "itemDescRightButtonText()"
		text style "button"
		action
		"
			itemDescRightButtonAction()
		"
	}
}
`
function highlightSidebarButton(engine)
	return (engine == e:GetActiveEngine())
end
sidebarVisible =
{
	LEFT = 1,
	RIGHT = 1
}
function toggleSidebar(side)
	local show = side .. "_SIDEBAR"
	local hide = show .. "_HIDDEN"
	if(sidebarVisible[side] == 1) then
		local temp = show
		show = hide
		hide = temp
		sidebarVisible[side] = 0
	else
		sidebarVisible[side] = 1
	end
	Infinity_PushMenu(show)
	Infinity_PopMenu(hide)
end
sidebarForceTooltips = 0
`
menu
{
	name 'LEFT_SIDEBAR'
	align left top
	ignoreEsc
	onOpen 
	"
		if(sidebarVisible.LEFT == 1) then
			Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('LEFT_SIDEBAR')
			Infinity_PushMenu('LEFT_SIDEBAR_HIDDEN')
		end
		if(showJournal == 1 and toggleJournal == 0) then
			Infinity_PushMenu('JOURNAL')
		end
		sidebarForceTooltips = 0
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM')
		if toggleJournal == 0 then
			Infinity_PopMenu('JOURNAL')
		end
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 0 0
	}
	button --to game
	{
		enabled "zZsidebarJourDiz()"
		area 6 16 66 46
		bam GUILS10
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,%str16313%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(0)
		"
	}
	button
	{ --map
		enabled "zZsidebarJourDiz()"
		area 6 60 66 46
		bam GUILS10
		sequence 1
		tooltip lua "getTooltipWithHotkey(4,15418)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(mapScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(1)
		"
	}
	button
	{ --journal
		enabled "zZsidebarJourDiz()"
		area 6 106 66 46
		bam GUILS10
		sequence 2
		tooltip lua "getTooltipWithHotkey(3,%str16308%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "showJournal == 1"
		clickable lua "sidebarsGreyed ~= 1 and zZgetJournalOpenable()"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(0)
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
		"
	}
	button
	{ --inventory
		enabled "zZsidebarJourDiz()"
		area 6 152 66 46
		bam GUILS10
		sequence 3
		tooltip lua "getTooltipWithHotkey(0,%str16307%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(inventoryScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(3)
		"
	}
	button
	{ --character record
		enabled "zZsidebarJourDiz()"
		area 6 198 66 46
		bam GUILS10
		sequence 4
		tooltip lua "getTooltipWithHotkey(1,%str16306%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(characterScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(4)
		"
	}
	button
	{ --mage spells
		enabled "zZsidebarJourDiz()"
		area 6 244 66 46
		bam GUILS10
		sequence 5
		tooltip lua "getTooltipWithHotkey(5,%str16309%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(mageScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(5)
		"
	}
	button
	{ --priest spells
		enabled "zZsidebarJourDiz()"
		area 6 290 66 46
		bam GUILS10
		sequence 6
		tooltip lua "getTooltipWithHotkey(6,%str14930%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(priestScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(6)
		"
	}
	button
	{ --options
		enabled "zZsidebarJourDiz()"
		area 6 336 66 46
		bam GUILS10
		sequence 7
		tooltip lua "getTooltipWithHotkey(7,%str16311%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(optionsScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(7)
		"
	}
	button
	{ --multiplayer
		area 3 385 66 46
		enabled "e:IsMultiplayer() and zZsidebarJourDiz()"
		bam GUILS10
		sequence 8
		tooltip lua "getTooltipWithHotkey(8,%str16312%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(multiplayerScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(8)
		"
	}
	button
	{ --achievements
		enabled "zZsidebarJourDiz() and zZachShowAchivements == 1"
		area 13 435 46 48
		bam "ZZACHIVE"
		scaleToClip
		tooltip lua "zZachText.achievems"
		glow lua	"zZshowAch == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action "
			Infinity_PushMenu('ACHIEVEMENTS')
		"
	}

	button
	{
		area 6 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('LEFT')
			if not zZjourBtnEnabled then zZjourBtnEnabled = true else zZjourBtnEnabled = false end
		"
	}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM'
	align left bottom
	offset 0 -22
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	ignoreEsc
	label
	{
		area 0 382 260 20
	}
	button
	{
		area 142 220 66 46
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz()"
		bam GUILS10
		sequence 15
		tooltip lua "getTooltipWithHotkey(28,%str74261%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnQuickSaveButtonClick(false)
		"
		actionAlt
		"
			worldScreen:OnQuickSaveButtonClick(true)
		"
	}
	button
	{
		area 76 220 66 46
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz()"
		bam GUILS10
		sequence 16
		tooltip lua "Infinity_FetchString(%str74270%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			Infinity_PushMenu('HELP')
		"
	}
	button
	{
		enabled "zZsidebarJourDiz()"
		area 8 220 66 46
		bam GUILS10
		sequence 9
		tooltip lua "getTooltipWithHotkey(31,11942)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnRestButtonClick()
		"
	}
	--begin clock
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz() and (zzClockActive == 0 and not worldScreen:CheckIfPaused() and toggleShowClock == 0)"
		area 0 156 10 55
		mosaic "FCCFON"
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz() and (zzClockActive == 1 or worldScreen:CheckIfPaused() or toggleShowClock == 1)"
		area 8 156 73 55
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz() and (zzClockActive == 1 or worldScreen:CheckIfPaused() or toggleShowClock == 1)"
		area 8 156 73 55
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz() and (zzClockActive == 1 or worldScreen:CheckIfPaused() or toggleShowClock == 1)"
		area 8 156 73 55
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	button
	{
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz()"
		area 8 156 73 55
		tooltip lua "worldScreen:GetCurrentTimeString()"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:TogglePauseGame(true)
		"
		actionEnter "zzClockActive = 1"
		actionExit  "zzClockActive = 0"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
}
menu
{
	name 'LEFT_SIDEBAR_HIDDEN'
	align left top
	ignoreEsc
	button
	{
		area 6 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('LEFT')
			if not zZjourBtnEnabled then zZjourBtnEnabled = true else zZjourBtnEnabled = false end
		"
	}
}
`
	mouseOverPortrait = -1
	draggedPortrait = nil
	function swapPortraits(dest)
		worldScreen:SwapPortraits(dest,draggedPortrait)
		draggedPortrait = nil
	end

	function getPartyAITooltip()
		if aiButtonToggle == 1 then
			return Infinity_FetchString(15918)
		else
			return Infinity_FetchString(15917)
		end
	end
`
menu
{
	name 'RIGHT_SIDEBAR'
	align right top
	ignoreEsc
	onOpen 
	"
		if(sidebarVisible.RIGHT == 1) then
			Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM')
		else
			Infinity_PopMenu('RIGHT_SIDEBAR')
			Infinity_PushMenu('RIGHT_SIDEBAR_HIDDEN')
		end
		if(worldScreen == e:GetActiveEngine() and game:GetPartyAI()) then aiButtonToggle = 1 end
		if(worldScreen == e:GetActiveEngine()) then Infinity_PushMenu('WORLD_LEVEL_UP_BUTTONS') end
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM')
		Infinity_PopMenu('WORLD_LEVEL_UP_BUTTONS')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 80 0
	}
	button
	{
		area 7 14 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "draggedPortrait and draggedPortrait ~= 0"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_OnPortraitRClick(0)"
		actionDbl "Infinity_OnPortraitDblClick(0)"
		actiondrag "Infinity_SwapWithPortrait(0)"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 0"
		actionSimpleDrop "swapPortraits(0)"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 7 106 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "draggedPortrait and draggedPortrait ~= 1"
		action "Infinity_OnPortraitLClick(1)"
		actionAlt "Infinity_OnPortraitRClick(1)"
		actionDbl "Infinity_OnPortraitDblClick(1)"
		actiondrag "Infinity_SwapWithPortrait(1)"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 1"
		actionSimpleDrop "swapPortraits(1)"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 7 198 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "draggedPortrait and draggedPortrait ~= 2"
		action "Infinity_OnPortraitLClick(2)"
		actionAlt "Infinity_OnPortraitRClick(2)"
		actionDbl "Infinity_OnPortraitDblClick(2)"
		actiondrag "Infinity_SwapWithPortrait(2)"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 2"
		actionSimpleDrop "swapPortraits(2)"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 7 290 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "draggedPortrait and draggedPortrait ~= 3"
		action "Infinity_OnPortraitLClick(3)"
		actionAlt "Infinity_OnPortraitRClick(3)"
		actionDbl "Infinity_OnPortraitDblClick(3)"
		actiondrag "Infinity_SwapWithPortrait(3)"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 3"
		actionSimpleDrop "swapPortraits(3)"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 7 382 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "draggedPortrait and draggedPortrait ~= 4"
		action "Infinity_OnPortraitLClick(4)"
		actionAlt "Infinity_OnPortraitRClick(4)"
		actionDbl "Infinity_OnPortraitDblClick(4)"
		actiondrag "Infinity_SwapWithPortrait(4)"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 4"
		actionSimpleDrop "swapPortraits(4)"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 7 474 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "draggedPortrait and draggedPortrait ~= 5"
		action "Infinity_OnPortraitLClick(5)"
		actionAlt "Infinity_OnPortraitRClick(5)"
		actionDbl "Infinity_OnPortraitDblClick(5)"
		actiondrag "Infinity_SwapWithPortrait(5)"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		actionSimpleDrag "draggedPortrait = 5"
		actionSimpleDrop "swapPortraits(5)"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 3 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('RIGHT')
			if not zZjourPortEnabled then zZjourPortEnabled = true else zZjourPortEnabled = false end
		"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM'
	align right bottom
	ignoreEsc
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	button
	{
		area 6 0 71 48
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		toggle selectionButtonToggle
		bam GUILS10
		sequence 14
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:OnSelectionButtonClick()
		"
	}
	button
	{
		area  -136 149 71 48
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz()"
		toggle highlightButtonToggle
		bam GUILS10
		sequence 11
		tooltip lua "Infinity_FetchString(%str103144%)"
		tooltip force lua "sidebarForceTooltips == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
		"
	}
	button
	{
		area  -70 149 71 48
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz()"
		toggle aiButtonToggle
		bam GUILS10
		sequence 10
		tooltip lua "getPartyAITooltip()"
		tooltip force lua "sidebarForceTooltips == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:ToggleAI()
		"
	}
	button
	{
		area -6 149 71 48
		enabled "worldScreen == e:GetActiveEngine() and zZsidebarJourDiz()"
		bam GUILS10
		sequence 13
		tooltip lua "Infinity_FetchString(10485)"
		tooltip force lua "sidebarForceTooltips == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			game:SelectAll()
		"
		actionDbl
		"
			game:CenterOnGroupLeader()
		"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_HIDDEN'
	align right top
	ignoreEsc
	button
	{
		area  3 0 67 16
		bam GUIPNL10
		action
		"
			toggleSidebar('RIGHT')
			if not zZjourPortEnabled then zZjourPortEnabled = true else zZjourPortEnabled = false end
		"
	}
}
`
	TEXT_inventoryError = ""

function resetStatsDisplay()
	tempStats = {}
end
function getTempDamage()
	local str = ""
	local dmgMinTemp = getTempStat(characters[id].damage.min,'dmgMin',1)
	local dmgMaxTemp = getTempStat(characters[id].damage.max,'dmgMax',1)
	if(dmgMinTemp == "-" and dmgMaxTemp == "-") then
		return "-"
	end
	if(dmgMinTemp == "-") then
		str = characters[id].damage.min
	else
		str = dmgMinTemp
	end
	str = str .. " - "
	if(dmgMaxTemp == "-") then
		str = str .. characters[id].damage.max
	else
		str = str .. dmgMaxTemp
	end

	return str
end
function getStat(old, newName, coeff)
	return old
end
function getTempStat(old, newName, coeff)
	if(tempStats[id] == nil) then
		return "-"
	end
	local new = tempStats[id][newName]
	local score = coeff * (new - old)
	if(score == 0) then
		return "-"
	end
	if(score < 0) then
		return "^R" .. new .. "^-"
	end
	if(score > 0) then
		return "^G" .. new .. "^-"
	end
end
function checkDoubleClickScheduled(slotName)
	if(doubleClickEventScheduled == slotName) then
		slotDoubleClick(doubleClickEventScheduled, true)
		doubleClickEventScheduled = nil
	end
end
function getStatsTitle()
	if(tempStats[id] ~= nil) then
		return tempStats[id].tempItem
	else
		return ""
	end
end
function slotDoubleClick(slotName, force)
	local slot = characters[id].equipment[slotName]
	
	if(string.sub(slotName,1,6) == "ground" and force == nil) then
		--this hack is needed because the unlike other slots, ground item add/remove is a message (doesnt get executed immediately)
		--since the double click removes the item before re-adding it, we need to wait for that re-add to complete before continuing.
		doubleClickEventScheduled = slotName
		return
	end
	
	if(slot ~= nil) then
		if(slot.item.isBag ~= 0) then
			Infinity_OpenInventoryContainer(slot.item.res)
		else
			showItemAmountRequester(slotName)
		end
	end
end
function checkDoubleClickScheduled(slotName)
	if(doubleClickEventScheduled == slotName) then
		slotDoubleClick(doubleClickEventScheduled, true)
		doubleClickEventScheduled = nil
	end
end
function getTempHP()
	local maxHP = getTempStat(characters[id].HP.max,'maxHP',1)
	local currentHP = getTempStat(characters[id].HP.current, 'currentHP',1)
	if(maxHP == "-" and currentHP == "-") then
		--nothing changed.
		return "-"
	end
	if(maxHP == "-") then
		--only current HP changed.
		maxHP = characters[id].HP.max
	end
	if(currentHP == "-") then
		--only max HP changed.
		currentHP = characters[id].HP.current
	end
	
	return currentHP .. '/' .. maxHP
end
function shouldGreyOutInventory()
	return characters[id].HP.current <= 0 or inventoryScreen:IsSpriteOrderable() == false
end
function getInventoryTHAC0()
	local str = characters[id].THAC0.current
	if(characters[id].THAC0.offhand) then
		str = str .. "\n" .. characters[id].THAC0.offhand
	end
	return str
end
function getInventoryDamage()
	local str = characters[id].damage.min .. ' - ' .. characters[id].damage.max
	if(characters[id].damage.minOffhand and characters[id].damage.maxOffhand) then
		str = str .. "\n" .. characters[id].damage.minOffhand .. ' - ' .. characters[id].damage.maxOffhand 
	end
	return str
end
function getInventoryDamageDetails()
	if characters[id].damage.detailsOffhand == nil or characters[id].damage.detailsOffhand == "" then
		return characters[id].damage.details
	else
		return characters[id].damage.details.."\n\n"..characters[id].damage.detailsOffhand
	end
end
function getInventoryTHAC0Details()
	if characters[id].THAC0.detailsOffhand == nil or characters[id].THAC0.detailsOffhand == "" then
		return characters[id].THAC0.details
	else
		return characters[id].THAC0.details.."\n\n"..characters[id].THAC0.detailsOffhand
	end
end
function scrollGroundItems()
	forceGroundItemsScrollbar = true
	if scrollDirection > 0 then
		Infinity_OnGroundPage(-1)
	elseif scrollDirection < 0 then
		Infinity_OnGroundPage(1)
	end
	currentFakePage = Infinity_GetCurrentGroundPage()
end

fakeItemList = {}
currentFakePage = 1
currentMaxFakePages = 1
forceGroundItemsScrollbar = false

function scrollGroundItemsFunction(top, height, contentHeight)
	if forceGroundItemsScrollbar then
		forceGroundItemsScrollbar = false
		return (currentFakePage / currentMaxFakePages) * (height - contentHeight)
	elseif top ~= 0 and height ~= contentHeight and currentMaxFakePages ~= 0 then
		local currentPage = currentFakePage
		currentFakePage = math.floor((top / (height - contentHeight) * currentMaxFakePages))
		if currentPage > currentFakePage then
			Infinity_OnGroundPage(-1)
		elseif currentPage < currentFakePage then
			Infinity_OnGroundPage(1)
		end
		return nil
	end
end

function isGroundScrollbarEnabled()
	local maxPages = Infinity_GetMaxGroundPage()
	if currentMaxFakePages ~= maxPages then
		currentMaxFakePages = maxPages

		fakeItemList = {}
		for i = 1, currentMaxFakePages+1 do
			fakeItemList[i] = 1
		end
	end

	return currentMaxFakePages > 0
end
`
menu
{
	name 'INVENTORY'
	align center center
	ignoreEsc
	
	onOpen 
	"
		Infinity_ActivateInventory()
		pushSidebars()
		doubleClickEventScheduled = nil

		for i = 1, Infinity_GetMaxGroundPage()+1 do
			fakeItemList[i] = 1
		end
		currentFakePage = Infinity_GetCurrentGroundPage()
		currentMaxFakePages = Infinity_GetMaxGroundPage()
		zzUpdInfoAttrTable = 1
		zZcurrIdInvAttr = id
		zZinvQuickLoot = 0
	"
	onClose 
	"
		zzUpdInfoAttrTable = 0
		zZcurrIdInvAttr = -1
		zZinvQuickLoot = 0
		Infinity_PopMenu('CHARACTER_COLOR')
		Infinity_PopMenu('ITEM_DESCRIPTION')
		Infinity_PopMenu('ITEM_IDENTIFY')
		Infinity_PopMenu('CHARACTER_ZZ_INVENTORY')
		Infinity_PopMenu('WORLD_QUICKLOOT_EX')
		Infinity_PopMenu('FC_IDENTIFY_ALL')
		worldScreen:StopGroundItems()
		popSidebars()

		fakeItemList = {}
	"
	label
	{
		area 0 -2 944 768
		mosaic FCINVENT
	}
	
	label
	{
		area		565 110 309 49
		text lua	"getStatsTitle()"
		text style	"label"
		text color 'D'
		enabled		"tempStats[id] ~= nil"
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		706 159 76 47
		text		"CURRENT_LABEL"
		text style	"label"
		text color 'D'
		text point 10
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		790 159 84 47
		text		"NEW_LABEL"
		text style	"label"
		text color 'D'
		text point 10
	}
	text
	{
		area		574 211 126 69
		text		"ARMOR_CLASS_LABEL"
		text style	"label"
		text color	'$'
		enabled		"tempStats[id] ~= nil"
		tooltip lua "characters[id].AC.details"
		text align left center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		710 211 72 69
		text lua	"getStat(characters[id].AC.current,'AC',-1)"
		text style	"label"
		align center center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		790 211 84 69
		text lua	"getTempStat(characters[id].AC.current,'AC',-1)"
		text style	"label"
		align center center
	}
	
	text
	{
		area		574 290 126 64
		text		"HIT_POINTS_LABEL"
		text style	"label"
		text color	'$'
		enabled		"tempStats[id] ~= nil"
		tooltip lua "characters[id].HP.details"
		text align left center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		710 290 72 64
		text lua	"characters[id].HP.current .. '/' .. getStat(characters[id].HP.max, 'HP', 1) "
		text style	"label"
		align center center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		790 290 84 64
		text lua	"getTempHP()"
		text style	"label"
		align center center
	}
	
	text
	{
		area		574 362 126 66
		text		"THAC0_LABEL"
		text style	"label"
		text color	'$'
		enabled		"tempStats[id] ~= nil"
		tooltip lua "characters[id].THAC0.details"
		text align left center
	}	
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		710 362 72 66
		text lua	"getStat(characters[id].THAC0.current,'THAC0', -1)"
		text style	"label"
		align center center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		790 362 84 66
		text lua	"getTempStat(characters[id].THAC0.current,'THAC0',-1)"
		text style	"label"
		align center center
	}
	
	text
	{
		area		574 437 126 59
		text		"DAMAGE_LABEL"
		text style	"label"
		text color	'$'
		enabled		"tempStats[id] ~= nil"
		tooltip lua "characters[id].damage.details"
		text align left center
	}	
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		710 437 72 59
		text lua	"getStat(characters[id].damage.min,'dmgMin',1) .. ' - ' .. getStat(characters[id].damage.max, 'dmgMax', 1)"
		text style	"label"
		align center center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		790 437 84 59
		text lua	"getTempDamage()"
		text style	"label"
		align center center
	}
	--stat details begin
	label
	{
		enabled		"tempStats[id] == nil"
		area   562 110 327 397
		mosaic FCINVSTT
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area		583 131 38 40
		text lua	"characters[id].AC.current"
		text style	"label"
		text color	'F'
		align center center
	}
	label
	{
		area		566 200 72 2
		progressbar lua "getPercent(10 - characters[id].AC.current, 30)"
		greyscale	0
		progressbar color	'F'
		progressbar full	'F'
		enabled "tempStats[id] == nil"
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area		580 230 44 42
		text lua	"characters[id].HP.current .. '/' .. characters[id].HP.max"
		text style	"label"
		text color	'F'
		align center center
	}
	label
	{
		area		566 295 72 2 
		progressbar lua "getPercent(characters[id].HP.current, characters[id].HP.max)"
		greyscale	0
		progressbar color	'H'
		progressbar full	'H'
		enabled "tempStats[id] == nil"
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area		585 330 34 42
		text lua	"getInventoryTHAC0()"
		text style	"label"
		text color	'F'
		align center center
	}
	label
	{
		area		566 389 72 2 
		progressbar lua "getPercent(20 - characters[id].THAC0.current, 40)"
		greyscale	0
		progressbar color	'K'
		progressbar full	'K'
		enabled "tempStats[id] == nil and characters[id].THAC0.offhand"
	}
	label
	{
		area		566 395 72 2 
		progressbar lua "getPercent(20 - zzInventorThacO(characters[id]), 40)"
		greyscale	0
		progressbar color	'K'
		progressbar full	'K'
		enabled "tempStats[id] == nil"
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area		582 423 42 39
		text lua	"zZgetInventoryDamage('zZinvDmg', 566, 72)"
		text style	"label"
		text color	'F'
		align center center
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area        564 491 76 6
		fill        50 50 50 255
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area        566 493 72 2
		fill        100 100 100 255
	}
	label
	{
		enabled		"tempStats[id] == nil"
		name        'zZinvDmg'
		area        574 493 18 2
		fill        190 190 0 255
	}
	label
	{
		area 0 0 1 1 
		text lua "zzUpdInfoAttrTableFunc(characters[id])"
	}
	list
	{
		column
		{
			width 85
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetAttributeTablePngInv(filterCreTablAttr(listItems)[rowNumber])"
			}
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetAttributeTablePngInv(filterCreTablAttr(listItems)[rowNumber])"
			}
			label
			{
				area		10 0 -1 -1
				text		lua	"zZgetAttributeInvTableText(filterCreTablAttr(listItems)[rowNumber])"
				text style	"normal"
				text color	'B'
				text align	left center
			}
		}
		column
		{
			width 15
			label
			{
				area		-323 0 -1 -1
				mosaic		lua "zZgetAttributeTablePngInv(filterCreTablAttr(listItems)[rowNumber])"
				respectClipping
			}
			label
			{
				area		-323 0 -1 -1
				mosaic		lua "zZgetAttributeTablePngInv(filterCreTablAttr(listItems)[rowNumber])"
				respectClipping
			}
			label
			{
				area		0 0 -1 -1
				text		lua "zZgetAttributeTableValue(filterCreTablAttr(listItems)[rowNumber])"
				text style	"normal"
				text color	'W'
				text align	left center
			}
		}
		name		'zZcharacterInvInfo'
		area		647 122 242 374
		rowheight	22
		table		"filterCreTablAttr(listItems)"
		var			"AttrItem"
		enabled		"tempStats[id] == nil"
		hidehighlight
		scrollbar	'GUISCRC'
	}
	--stat details end
	button
	{
		area 353 209 128 160
		paperdoll 1
		actiondrag "Infinity_SwapWithAppearance()"
	}
	button
	{
		area 104 542 78 104
		encumbrance
	}
	label
	{
		area 282 30 376 46
		text lua "characters[id].name"
		text style "title"
		text align	center center
	}
	label
	{
		area 108 70 728 40
		text "INVENTORY_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area 74 218 200 36
		text "QUICK_WEAPONS_LABEL"
		text style "label"
		text color	'F'
	}
	label
	{
		area 72 326 162 32
		text "QUICK_ITEMS_LABEL"
		text style "label"
		text color	'F'
	}
	label
	{
		area 126 116 150 34
		text "QUIVER_LABEL"
		text style "label"
		text color	'F'
	}
	label
	{
		area 353 648 211 22
		text lua 'zZgroundItemText()'
		text style "label"
		text color	'F'
		align center center
	}
	label
	{
		area 728 680 90 36
		text lua "zZgroundItemCountText()"
		text style "label"
		text color	'F'
		align center center
	}
	label
	{
		area 736 580 78 50
		bam GUIGOLD
	}
	label
	{
		area 716 626 120 32
		text lua "characters[id].gold"
		text style "label"
		text color	'$'
		align center center
	}
	label
	{
		area 340 171 156 40
		text lua "characters[id].class"
		text style "label"
		text color	'$'
		text point	14
		align center center
	}
	text
	{
		area 70 437 482 79
		text lua "zZscriptDescColorize(TEXT_inventoryError)"
		scrollbar 'GUISCRC'
		text style normal
	}
	--weapons
	slot {name "slot_inv_1"		area 70 264 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.weapon0"		}
	slot {name "slot_inv_2"		area 122 264 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.weapon1"		}
	slot {name "slot_inv_3"		area 174 264 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.weapon2"		}
	slot {name "slot_inv_4"		area 226 264 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.weapon3"		}
	--quick slots
	slot {name "slot_inv_5"		area 70 368 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.personal0"	}
	slot {name "slot_inv_6"		area 122 368 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.personal1"	}
	slot {name "slot_inv_7"		area 174 368 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.personal2"	}
	--equipment
	slot {name "slot_inv_11"	area 286 147 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.armor"		}
	slot {name "slot_inv_12"	area 340 119 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.gauntlets"	}
	slot {name "slot_inv_13"	area 392 119 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.helmet"		}
	slot {name "slot_inv_14"	area 444 119 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.amulet"		}
	slot {name "slot_inv_15"	area 122 159 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.quiver0"		}
	slot {name "slot_inv_16"	area 174 159 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.quiver1"		}
	slot {name "slot_inv_17"	area 226 159 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.quiver2"		}
	slot {name "slot_inv_21"	area 444 369 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.belt"		}
	slot {name "slot_inv_22"	area 286 320 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ringleft"	}
	slot {name "slot_inv_23"	area 501 320 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ringright"	}
	slot {name "slot_inv_24"	area 340 369 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.cloak"		}
	slot {name "slot_inv_25"	area 392 369 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.boots"		}
	slot {name "slot_inv_26"	area 501 264 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.shield"		}
	--backpack
	slot {name "slot_inv_30"	area 247 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group0"		}
	slot {name "slot_inv_31"	area 247 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group1"		}
	slot {name "slot_inv_32"	area 300 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group2"		}
	slot {name "slot_inv_33"	area 300 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group3"		}
	slot {name "slot_inv_34"	area 353 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group4"		}
	slot {name "slot_inv_35"	area 353 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group5"		}
	slot {name "slot_inv_36"	area 406 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group6"		}
	slot {name "slot_inv_37"	area 406 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group7"		}
	slot {name "slot_inv_38"	area 459 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group8"		}
	slot {name "slot_inv_39"	area 459 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group9"		}
	slot {name "slot_inv_40"	area 512 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group10"		}
	slot {name "slot_inv_41"	area 512 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group11"		}
	slot {name "slot_inv_42"	area 565 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group12"		}
	slot {name "slot_inv_43"	area 565 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group13"		}
	slot {name "slot_inv_44"	area 618 542 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group14"		}
	slot {name "slot_inv_45"	area 618 597 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.group15"		}
	list
	{
		column 
		{ 
			width	100
			label
			{
				area 	0 0 671 -1
			}
		}
		
		area 246 671 671 54
		rowheight	54
		hidehighlight
		table		"fakeItemList"
		var			currentFakePage
		scrollbar func "scrollGroundItemsFunction"
		scrollbar respectConstraints
		actionScroll "scrollGroundItems()"
		enabled "isGroundScrollbarEnabled()"
	}
	slot {name "slot_inv_68" area 247 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground0"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_69" area 300 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground1"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_70" area 353 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground2"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_71" area 406 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground3"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_72" area 459 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground4"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_73" area 512 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground5"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_74" area 565 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground6"	actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_75" area 618 672 52 52	bam "STONSLOT"	slotinfo "characters[id].equipment.ground7"	actionScroll "scrollGroundItems()"}
	button
	{
		area 673 672 40 52
		bam GUIPRC
		sequence 2
		scaleToClip
		action
		"
			Infinity_OnGroundPage(1)
		"
	}
	button
	{
		area 205 672 40 52
		bam GUIPRC
		sequence 3
		scaleToClip
		action
		"
			Infinity_OnGroundPage(-1)
		"
	}
	-- new quickloot
	button
	{
		enabled		"zZquickLootenabled == 1"
		area 69 687 22 22
		bam ROUNDBUT
		frame lua 'zZnewQuickLootFrame()'
		scaleToClip
		tooltip lua "Infinity_FetchString(%str99897%)"
		action "
			if zZinvQuickLoot == 0 then
				zZinvQuickLoot = 1
				worldScreen:StartGroundItems()
				Infinity_PushMenu('WORLD_QUICKLOOT_EX')
				Infinity_SetOffset('WORLD_QUICKLOOT_EX', -66, 315)
			else
				zZinvQuickLoot = 0
				worldScreen:StopGroundItems()
				Infinity_PopMenu('WORLD_QUICKLOOT_EX')
			end
		"
	}
	button
	{
		area 502 147 50 52
		bam INVBUT
		colordisplay 1
		action
		"
			Infinity_PushMenu('CHARACTER_COLOR', 0, 0)
			zZcurrId = id
			zZcolorsFromInv = 1
			sidebarsGreyed = 1
		"
	}
	button
	{
		area 678 540 200 40
		bam GUIBUTNT
		sequence 2
		text style "button"
		text "FC_ALL_INVENTORYA"
		clickable lua "Infinity_GetNumCharacters() > 1 and zZgeneralInventory == 1"
		action
		"
			Infinity_PushMenu('CHARACTER_ZZ_INVENTORY')
		"
	}
	button
	{
		enabled "zZidentifyScreen == 1"
		area 188 550 50 35
		bam GUILS10
		sequence 16
		scaleToClip
		tooltip lua "t('FC_IDENTIFY_ALL_LABEL')"
		action
		"
			Infinity_PushMenu('FC_IDENTIFY_ALL')
		"
	}
	label --this has to be last so it draws over top of everything.
	{
		area 0 -2 944 768
		enabled "shouldGreyOutInventory() or Infinity_IsMenuOnStack('CHARACTER_ZZ_INVENTORY')"
		rectangle 1
		rectangle opacity 200
	}
}
menu
{
	name	'FC_IDENTIFY_ALL'
	align center center
	onOpen
	"
		TEXT_itemdescIdent = t('FC_IDENTIFY_ALL_DESC')
		if zZidentItemType == nil then zZidentItemType = 'notempty' end
		if zZidentifyValidItemType ~= 0 then zZidentifyValidItemType = 0 end
		if zZidentExchangeMode ~= 0 then zZidentExchangeMode = 0 end
		if zZidentSelectChar ~= 0 then zZidentSelectChar = 0 end
		popSidebars()
		identify = IdentAll:create()
	"
	onClose
	"
		pushSidebars()
		Infinity_PressKeyboardButton(identify.currCharKey)
		identify = nil
	"
	label
	{
		area 0 0 944 768
		mosaic "FCGUIJRN"
	}
	label
	{
		area 68 186 641 471
		mosaic 'FCGUIJR4'
	}
	button
	{
		enabled "zZidentExchangeMode ~= 0"
		area 408 189 468 464
		mosaic 'FCGUIJR5'
		sound ""
		actionExit "zZidentExchangeMode = 0"
	}
	label
	{
		area 244 28 454 46
		text "FC_IDENTIFY_ALL_LABEL"
		text style "title"
		text color	'O'
	}
	label
	{
		area 75 178 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 1"
		area 75 230 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 2"
		area 75 283 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 3"
		area 75 336 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 4"
		area 75 389 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 5"
		area 75 442 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 6"
		area 75 495 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	label
	{
		enabled "#identify.itemValid >= 7"
		area 75 548 320 50
		mosaic 'fcatrtnu'
		respectClipping
	}
	text
	{
		area		314 117 314 60
		text lua	"identify.charSlot[1].name"
		text style	"title"
		text align center center
		text color '$'
		text point 18
		action	"zZidentSelectChar = 1"
	}
	button
	{
		area 312 196 37 20
		bam 'FCBTNVHZ'
		sequence 0
		scaleToClip
		clickable lua "identify:chackIncDecItem(1)"
		action "identify:incDecItem(1)"
	}
	button
	{
		area 353 196 37 20
		bam 'FCBTNVHZ'
		sequence 1
		scaleToClip
		clickable lua "identify:chackIncDecItem(-1)"
		action "identify:incDecItem(-1)"
	}
	button
	{
		area 86 196 220 26
		text lua "identify.valid[zZidentItemType][3]"
		text style 'label'
		text color '$'
		fill 112 111 111 80
		action
		"
			zZidentifyValidItemType = 1
		"
	}
	button
	{
		enabled "#identify.itemValid >= 1"
		name "ident_slot_1"
		area 80 226 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(1, 'highlight')"
		icon lua "identify:getItemProp(1, 'icon')"
		tint lua "identify:getItemProp(1, 'tint')"
		action "identify:selectItem(1)"
		actionAlt "
			if not identify:checkSelected(1) then identify:selectItem(1) end
			identify:setExchChaar(1)
		"
		actionDbl "identify:setExchChaar(1, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 2"
		name "ident_slot_2"
		area 80 279 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(2, 'highlight')"
		icon lua "identify:getItemProp(2, 'icon')"
		tint lua "identify:getItemProp(2, 'tint')"
		action "identify:selectItem(2)"
		actionAlt "
			if not identify:checkSelected(2) then identify:selectItem(2) end
			identify:setExchChaar(2)
		"
		actionDbl "identify:setExchChaar(2, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 3"
		name "ident_slot_3"
		area 80 332 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(3, 'highlight')"
		icon lua "identify:getItemProp(3, 'icon')"
		tint lua "identify:getItemProp(3, 'tint')"
		action "identify:selectItem(3)"
		actionAlt "
			if not identify:checkSelected(3) then identify:selectItem(3) end
			identify:setExchChaar(3)
		"
		actionDbl "identify:setExchChaar(3, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 4"
		name "ident_slot_4"
		area 80 385 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(4, 'highlight')"
		icon lua "identify:getItemProp(4, 'icon')"
		tint lua "identify:getItemProp(4, 'tint')"
		action "identify:selectItem(4)"
		actionAlt "
			if not identify:checkSelected(4) then identify:selectItem(4) end
			identify:setExchChaar(4)
		"
		actionDbl "identify:setExchChaar(4, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 5"
		name "ident_slot_5"
		area 80 438 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(5, 'highlight')"
		icon lua "identify:getItemProp(5, 'icon')"
		tint lua "identify:getItemProp(5, 'tint')"
		action "identify:selectItem(5)"
		actionAlt "
			if not identify:checkSelected(5) then identify:selectItem(5) end
			identify:setExchChaar(5)
		"
		actionDbl "identify:setExchChaar(5, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 6"
		name "ident_slot_6"
		area 80 491 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(6, 'highlight')"
		icon lua "identify:getItemProp(6, 'icon')"
		tint lua "identify:getItemProp(6, 'tint')"
		action "identify:selectItem(6)"
		actionAlt "
			if not identify:checkSelected(6) then identify:selectItem(6) end
			identify:setExchChaar(6)
		"
		actionDbl "identify:setExchChaar(6, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 7"
		name "ident_slot_7"
		area 80 544 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(7, 'highlight')"
		icon lua "identify:getItemProp(7, 'icon')"
		tint lua "identify:getItemProp(7, 'tint')"
		action "identify:selectItem(7)"
		actionAlt "
			if not identify:checkSelected(7) then identify:selectItem(7) end
			identify:setExchChaar(7)
		"
		actionDbl "identify:setExchChaar(7, false)"
		actionScroll "identify:scrollList()"
	}
	button
	{
		enabled "#identify.itemValid >= 8"
		name "ident_slot_8"
		area 80 597 52 52
		bam "STONSLOT"
		frame lua "identify:getEquipProp(8, 'highlight')"
		icon lua "identify:getItemProp(8, 'icon')"
		tint lua "identify:getItemProp(8, 'tint')"
		action "identify:selectItem(8)"
		actionAlt "
			if not identify:checkSelected(8) then identify:selectItem(8) end
			identify:setExchChaar(8)
		"
		actionDbl "identify:setExchChaar(8, false)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl1"
		area 140 226 250 52
		text lua "identify:setItemName(1)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+1-1"
		action "identify:getDesc(1)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl2"
		area 140 279 250 52
		text lua "identify:setItemName(2)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+2-1"
		action "identify:getDesc(2)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl3"
		area 140 332 250 52
		text lua "identify:setItemName(3)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+3-1"
		action "identify:getDesc(3)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl4"
		area 140 385 250 52
		text lua "identify:setItemName(4)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+4-1"
		action "identify:getDesc(4)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl5"
		area 140 438 250 52
		text lua "identify:setItemName(5)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+5-1"
		action "identify:getDesc(5)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl6"
		area 140 491 250 52
		text lua "identify:setItemName(6)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+6-1"
		action "identify:getDesc(6)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl7"
		area 140 544 250 52
		text lua "identify:setItemName(7)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+7-1"
		action "identify:getDesc(7)"
		actionScroll "identify:scrollList()"
	}
	text
	{
		name "idlbl8"
		area 140 597 250 52
		text lua "identify:setItemName(8)"
		text style 'label'
		text color 'O'
		text align left center
		glow lua "identify.glow == identify.firstSlot+8-1"
		action "identify:getDesc(8)"
		actionScroll "identify:scrollList()"
	}
	--description
	text
	{
		area		422 200 442 436
		text lua	"zZinventorySpellDesc(TEXT_itemdescIdent)"
		text style	'normal_parchment'
		scrollbar	'GUISCRC'
		action		"TEXT_itemdescIdent = t('FC_IDENTIFY_ALL_DESC')"
	}
	button
	{
		enabled "zZidentExchangeMode ~= 0"
		area 68 186 341 471
		mosaic 'FCGUIJR6'
		sound ""
		action "
			identify:createItemTable()
			identify:createItemValid()
			zZidentExchangeMode = 0
		"
		actionScroll "identify:scrollList()"
	}
	label
	{
		enabled "zZidentExchangeMode ~= 0"
		area 408 189 468 464
		mosaic 'FCGUIJR5'
	}
	slot {name "slot_inv_30"  area 434 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(1,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_31"  area 434 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(2,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_32"  area 486 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(3,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_33"  area 486 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(4,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_34"  area 538 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(5,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_35"  area 538 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(6,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_36"  area 590 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(7,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_37"  area 590 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(8,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_38"  area 642 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(9,  1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_39"  area 642 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(10, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_40"  area 694 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(11, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_41"  area 694 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(12, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_42"  area 746 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(13, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_43"  area 746 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(14, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_44"  area 798 281 52 52 bam "STONSLOT" slotinfo "identify:Slot(15, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_45"  area 798 333 52 52 bam "STONSLOT" slotinfo "identify:Slot(16, 1)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_30"  area 434 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(1,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_31"  area 434 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(2,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_32"  area 486 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(3,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_33"  area 486 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(4,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_34"  area 538 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(5,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_35"  area 538 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(6,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_36"  area 590 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(7,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_37"  area 590 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(8,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_38"  area 642 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(9,  identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_39"  area 642 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(10, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_40"  area 694 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(11, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_41"  area 694 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(12, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_42"  area 746 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(13, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_43"  area 746 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(14, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_44"  area 798 495 52 52 bam "STONSLOT" slotinfo "identify:Slot(15, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	slot {name "slot_inv_45"  area 798 547 52 52 bam "STONSLOT" slotinfo "identify:Slot(16, identify.exchChar)" enabled "zZidentExchangeMode ~= 0" actionAlt "" actionDbl ""}
	label 
	{
		area 434 230 416 50
		text lua "identify.charSlot[1].name"
		text style 'title'
		text color '$'
		enabled "zZidentExchangeMode ~= 0"
	}
	label 
	{
		area 434 442 416 52
		text lua "identify.charSlot[identify.exchChar].name"
		text style 'title'
		text color '$'
		enabled "zZidentExchangeMode ~= 0"
	}
	label 
	{
		area 434 281 416 104
		mosaic 'FCTRANS2'
		actionEnter "mouseOverPortrait = identify.charSlot[1].idx-1; identify:SelChar(1)"
		actionExit "mouseOverPortrait = -1; identify:SelChar(1)"
		enabled "identify.charSlot[1] ~= nil and mouseOverPortrait ~= identify.charSlot[1].idx-1 and zZidentExchangeMode ~= 0"
	}
	label 
	{
		area 434 495 416 104
		mosaic 'FCTRANS2'
		actionEnter "mouseOverPortrait = identify.charSlot[identify.exchChar].idx-1; identify:SelChar(identify.exchChar)"
		actionExit "mouseOverPortrait = -1; identify:SelChar(1)"
		enabled "identify.charSlot[identify.exchChar] ~= nil and mouseOverPortrait ~= identify.charSlot[identify.exchChar].idx-1 and zZidentExchangeMode ~= 0"
	}
	--buttons
	button
	{
		enabled "zZidentExchangeMode == 0"
		area 216 679 140 32
		bam GUIBUTNS
		text style "button"
		text "SPELL_BUTTON"
		clickable lua "Infinity_GetSpellIdentifyEnabled(characters[identify.charId].equipment[identify.slotName].id)"
		action 
		"
			if identify.charSlot[1].name == identify.itemValid[identify.validIdx].char.name then
				Infinity_OnSpellIdentify(characters[identify.charId].equipment[identify.slotName].id)
			else
				popupInfo(stringsAll.identOtherInv)
			end
			if characters[identify.charId].equipment[identify.slotName].item.identified ~= 0 then
				identify.itemValid[identify.validIdx].item.name = characters[identify.charId].equipment[identify.slotName].item.name
				identify.itemValid[identify.validIdx].item.desc = characters[identify.charId].equipment[identify.slotName].item.description
				identify.itemValid[identify.validIdx].item.identified = characters[identify.charId].equipment[identify.slotName].item.identified
				identify:getDesc(identify.validIdx, false)
			end
		"
	}
	button
	{
		enabled "zZidentExchangeMode == 0"
		area 72 679 140 32
		bam GUIBUTNS
		text style "button"
		text "SCROLL_BUTTON"
		clickable lua "Infinity_GetScrollIdentifyEnabled(characters[identify.charId].equipment[identify.slotName].id)"
		action
		"
			if identify.charSlot[1].name == identify.itemValid[identify.validIdx].char.name then
				Infinity_OnScrollIdentify(characters[identify.charId].equipment[identify.slotName].id)
			else
				popupInfo(stringsAll.identOtherInv)
			end
			if characters[identify.charId].equipment[identify.slotName].item.identified ~= 0 then
				identify.itemValid[identify.validIdx].item.name = characters[identify.charId].equipment[identify.slotName].item.name
				identify.itemValid[identify.validIdx].item.desc = characters[identify.charId].equipment[identify.slotName].item.description
				identify.itemValid[identify.validIdx].item.identified = characters[identify.charId].equipment[identify.slotName].item.identified
				identify:getDesc(identify.validIdx, false)
			end
		"
	}
	button
	{
		enabled "zZidentExchangeMode == 0"
		area 364 679 140 32
		bam GUIBUTNS
		text style "button"
		text lua "Infinity_FetchString(9459) .. ' (' .. characters[identify.charSlot[1].id].proficiencies.lore.current .. ')'"
		clickable lua "tonumber(characters[identify.charSlot[1].id].proficiencies.lore.current) >= zzItemListAll[characters[identify.charId].equipment[identify.slotName].item.res].lore and characters[identify.charId].equipment[identify.slotName].item.identified == 0"
		action 
		"
			local str = stringsAll.identNoLore
			if identify.charSlot[1].name == identify.itemValid[identify.validIdx].char.name then
				Infinity_CheckItemIdentify(characters[identify.charId].equipment[identify.slotName].id)
			else
				str = stringsAll.identOtherInv
			end
			if characters[identify.charId].equipment[identify.slotName].item.identified == 0 then
				popupInfo(str)
			else
				Infinity_PlaySound('EFF_M04')
				identify.itemValid[identify.validIdx].item.name = characters[identify.charId].equipment[identify.slotName].item.name
				identify.itemValid[identify.validIdx].item.desc = characters[identify.charId].equipment[identify.slotName].item.description
				identify.itemValid[identify.validIdx].item.identified = characters[identify.charId].equipment[identify.slotName].item.identified
				identify:getDesc(identify.validIdx, false)
			end
		"
	}
	button
	{
		enabled "zZidentifyValidItemType ~= 0"
		area 80 190 232 90
		rectangle 0
		rectangle opacity 220
		actionEnter ""
		actionExit "zZidentifyValidItemType = 0"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				enabled  "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				fill 112 111 111 65
			}
			label
			{
				area 5 0 -1 -1
				text lua "identify.validtwo[rowNumber][2]"
				text style "label"
				text align left center
			}
		}
		enabled "zZidentifyValidItemType ~= 0"
		area 86 196 220 78
		hidehighlight
		rowheight	26
		table		"identify.validtwo"
		var			"zZidentifyValidItem"
		action "
			local temp = identify.validtwo[zZidentifyValidItem][1]
			if temp ~= zZidentItemType then
				zZidentItemType = temp
				identify:createItemValid()
			end
			zZidentifyValidItemType = 0
		"
		actionEnter ""
		actionExit "zZidentifyValidItemType = 0"
	}
	button
	{
		enabled "zZidentSelectChar ~= 0"
		name 'zZidentSelectCharBkg'
		area 306 180 330 116
		rectangle 0
		rectangle opacity 220
		actionEnter ""
		actionExit "zZidentSelectChar = 0"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				enabled  "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				fill 112 111 111 65
			}
			label
			{
				area 5 0 -1 -1
				text lua "identify.charSelect[rowNumber].name .. ' (' .. Infinity_FetchString(9459) .. ': ' .. identify.charSelect[rowNumber].lore .. ')'"
				text style "label"
				text align left center
			}
		}
		enabled "zZidentSelectChar ~= 0"
		name 'zZidentSelectCharList'
		area 312 186 318 104
		hidehighlight
		rowheight	26
		table		"identify.charSelect"
		var			"zZidentSelectCharItem"
		action "
			identify.swapChars(zZidentSelectCharItem+1)
			zZidentSelectChar = 0
		"
		actionEnter ""
		actionExit "zZidentSelectChar = 0"
	}
	button
	{
		area 628 674 200 44
		on 'x'
		bam "GUIBUTNT"
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		action 
		"
			Infinity_PopMenu('FC_IDENTIFY_ALL')
		"
	}
}
menu
{
	name 'CHARACTER_ZZ_INVENTORY'
	align center center
	--ignoreEsc
	onOpen
	"
		TEXT_inventoryError = nil
		TEXT_inventoryError = ''
		zZinvAllTime = zZachTime() + 3
		mouseOverPortrait = -1
		worldScreen:StopGroundItems()
		zZinvQuickLoot = 0
		popSidebars()
		invAll = InvAll:create()
	"
	onClose
	"
		zZinvQuickLoot = 0
		pushSidebars()
		Infinity_PressKeyboardButton(invAll.currCharKey)
		worldScreen:StopGroundItems()
		invAll = nil
	"
	label
	{
		enabled "(mouseOverPortrait == -1 or zZinvQuickLoot ~= 0) and invAll.updateHighlight ~= nil and zZachTime() > zZinvAllTime"
		text lua	"invAll:updateHlight()"
	}
	label
	{
		area 0 -2 944 768
		mosaic FCINVENA
	}
	label
	{
		area 244 24 454 50
		text  lua "'^O' .. t('FC_ALL_INVENTORYB') .. '^-: ' .. invAll.charSlot[invAll.selected].name"
		text style "title"
	}
	label
	{
		area 130 572 82 16
		text  lua "t('FC_ALL_INV_AC')"
		text style 'normal'
		text color 'O'
		text align center center
	}
	label
	{
		area 124 590 96 38
		text lua "zzTempAC()"
		text style	"normal"
		text align center center
	}
	label
	{
		area		124 630 96 2
		progressbar lua "getPercent(10 - characters[id].AC.current, 30)"
		greyscale	0
		progressbar color	'F'
		progressbar full	'F'
		enabled "tempStats[id] == nil"
	}
	label
	{
		area 236 572 82 16
		text  lua "t('FC_ALL_INV_HP')"
		text style 'normal'
		text color 'O'
		text align center center
	}
	label
	{
		area 230 590 96 38
		text lua "zzTempHP()"
		text style	"normal"
		text align center center
	}
	label
	{
		area		230 630 96 2
		progressbar lua "getPercent(characters[id].HP.current, characters[id].HP.max)"
		greyscale	0
		progressbar color	'H'
		progressbar full	'H'
		enabled "tempStats[id] == nil"
	}
	label
	{
		area 130 638 82 16
		text  lua "t('FC_ALL_INV_THAC')"
		text style 'normal'
		text color 'O'
		text align center center
	}
	label
	{
		area 124 656 96 38
		text lua "zzTempTHAC0()"
		text style	"normal"
		text align center center
	}
	label
	{
		area		124 692 96 2
		progressbar lua "getPercent(20 - characters[id].THAC0.current, 40)"
		greyscale	0
		progressbar color	'K'
		progressbar full	'K'
		enabled "tempStats[id] == nil and characters[id].THAC0.offhand"
	}
	label
	{
		area		124 698 96 2
		progressbar lua "getPercent(20 - zzInventorThacO(characters[id]), 40)"
		greyscale	0
		progressbar color	'K'
		progressbar full	'K'
		enabled "tempStats[id] == nil"
	}
	label
	{
		area 236 638 82 16
		text  lua "t('FC_ALL_INV_DMG')"
		text color 'O'
		text align center center
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area		230 656 96 38
		text lua "zZgetInventoryDamage('zZinvAllDmg', 230, 96)"
		text style	"label"
		align center center
	}
	label
	{
		enabled		"tempStats[id] ~= nil"
		area		230 656 96 38
		text lua "getStat(characters[id].damage.min,'dmgMin',1) .. ' - ' .. getStat(characters[id].damage.max, 'dmgMax', 1) .. '\n' .. getTempDamage()"
		text style	"label"
		align center center
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area        228 696 96 6
		fill        50 50 50 255
	}
	label
	{
		enabled		"tempStats[id] == nil"
		area        230 698 96 2
		fill        100 100 100 255
	}
	label
	{
		enabled		"tempStats[id] == nil"
		name        'zZinvAllDmg'
		area        258 698 24 2
		fill        190 190 0 255
	}
	--slots
	slot {name "slot_inv_1"   area 64 278 52 52  bam "STONSLOT" slotinfo "invAll:Equip(1)" }    
	slot {name "slot_inv_2"   area 116 278 52 52 bam "STONSLOT" slotinfo "invAll:Equip(2)" }    
	slot {name "slot_inv_3"   area 168 278 52 52 bam "STONSLOT" slotinfo "invAll:Equip(3)" }    
	slot {name "slot_inv_4"   area 220 278 52 52 bam "STONSLOT" slotinfo "invAll:Equip(4)" }    
	                                                                                                                             
	slot {name "slot_inv_5"   area 64 336 52 52  bam "STONSLOT" slotinfo "invAll:Equip(5)" }    
	slot {name "slot_inv_6"   area 116 336 52 52 bam "STONSLOT" slotinfo "invAll:Equip(6)" }    
	slot {name "slot_inv_7"   area 168 336 52 52 bam "STONSLOT" slotinfo "invAll:Equip(7)" }    
	                                                                                                                             
	slot {name "slot_inv_11"  area 168 94 52 52  bam "STONSLOT" slotinfo "invAll:Equip(8)" }
	slot {name "slot_inv_12"  area 168 154 52 52 bam "STONSLOT" slotinfo "invAll:Equip(9)" }
	slot {name "slot_inv_13"  area 254 94 52 52  bam "STONSLOT" slotinfo "invAll:Equip(10)"}
	slot {name "slot_inv_14"  area 338 154 52 52 bam "STONSLOT" slotinfo "invAll:Equip(11)"}
	slot {name "slot_inv_15"  area 90 106 52 52  bam "STONSLOT" slotinfo "invAll:Equip(12)"}
	slot {name "slot_inv_16"  area 90 158 52 52  bam "STONSLOT" slotinfo "invAll:Equip(13)"}
	slot {name "slot_inv_17"  area 90 210 52 52  bam "STONSLOT" slotinfo "invAll:Equip(14)"}
	slot {name "slot_inv_21"  area 278 336 52 52 bam "STONSLOT" slotinfo "invAll:Equip(15)"}
	slot {name "slot_inv_22"  area 168 214 52 52 bam "STONSLOT" slotinfo "invAll:Equip(16)"}
	slot {name "slot_inv_23"  area 338 214 52 52 bam "STONSLOT" slotinfo "invAll:Equip(17)"}
	slot {name "slot_inv_24"  area 338 94 52 52  bam "STONSLOT" slotinfo "invAll:Equip(18)"}
	slot {name "slot_inv_25"  area 338 336 52 52 bam "STONSLOT" slotinfo "invAll:Equip(19)"}
	slot {name "slot_inv_26"  area 338 278 52 52 bam "STONSLOT" slotinfo "invAll:Equip(20)"}
	   
	slot {name "slot_inv_30"  area 64 408 52 52  bam "STONSLOT" slotinfo "invAll:Slot(1,  1)"}
	slot {name "slot_inv_31"  area 64 460 52 52  bam "STONSLOT" slotinfo "invAll:Slot(2,  1)"}
	slot {name "slot_inv_32"  area 116 408 52 52 bam "STONSLOT" slotinfo "invAll:Slot(3,  1)"}
	slot {name "slot_inv_33"  area 116 460 52 52 bam "STONSLOT" slotinfo "invAll:Slot(4,  1)"}
	slot {name "slot_inv_34"  area 116 512 52 52 bam "STONSLOT" slotinfo "invAll:Slot(5,  1)"}
	slot {name "slot_inv_35"  area 174 408 52 52 bam "STONSLOT" slotinfo "invAll:Slot(6,  1)"}
	slot {name "slot_inv_36"  area 174 460 52 52 bam "STONSLOT" slotinfo "invAll:Slot(7,  1)"}
	slot {name "slot_inv_37"  area 174 512 52 52 bam "STONSLOT" slotinfo "invAll:Slot(8,  1)"}
	slot {name "slot_inv_38"  area 226 408 52 52 bam "STONSLOT" slotinfo "invAll:Slot(9,  1)"}
	slot {name "slot_inv_39"  area 226 460 52 52 bam "STONSLOT" slotinfo "invAll:Slot(10, 1)"}
	slot {name "slot_inv_40"  area 226 512 52 52 bam "STONSLOT" slotinfo "invAll:Slot(11, 1)"}
	slot {name "slot_inv_41"  area 286 408 52 52 bam "STONSLOT" slotinfo "invAll:Slot(12, 1)"}
	slot {name "slot_inv_42"  area 286 460 52 52 bam "STONSLOT" slotinfo "invAll:Slot(13, 1)"}
	slot {name "slot_inv_43"  area 286 512 52 52 bam "STONSLOT" slotinfo "invAll:Slot(14, 1)"}
	slot {name "slot_inv_44"  area 338 408 52 52 bam "STONSLOT" slotinfo "invAll:Slot(15, 1)"}
	slot {name "slot_inv_45"  area 338 460 52 52 bam "STONSLOT" slotinfo "invAll:Slot(16, 1)"}
	
	slot {name "slot_inv_30"  area 466 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(1,  2)"}
	slot {name "slot_inv_31"  area 466 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(2,  2)"}
	slot {name "slot_inv_32"  area 518 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(3,  2)"}
	slot {name "slot_inv_33"  area 518 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(4,  2)"}
	slot {name "slot_inv_34"  area 570 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(5,  2)"}
	slot {name "slot_inv_35"  area 570 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(6,  2)"}
	slot {name "slot_inv_36"  area 622 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(7,  2)"}
	slot {name "slot_inv_37"  area 622 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(8,  2)"}
	slot {name "slot_inv_38"  area 674 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(9,  2)"}
	slot {name "slot_inv_39"  area 674 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(10, 2)"}
	slot {name "slot_inv_40"  area 726 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(11, 2)"}
	slot {name "slot_inv_41"  area 726 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(12, 2)"}
	slot {name "slot_inv_42"  area 778 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(13, 2)"}
	slot {name "slot_inv_43"  area 778 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(14, 2)"}
	slot {name "slot_inv_44"  area 830 94 52 52  bam "STONSLOT" slotinfo "invAll:Slot(15, 2)"}
	slot {name "slot_inv_45"  area 830 146 52 52 bam "STONSLOT" slotinfo "invAll:Slot(16, 2)"}
	
	slot {name "slot_inv_30"  area 466 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(1,  3)"}
	slot {name "slot_inv_31"  area 466 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(2,  3)"}
	slot {name "slot_inv_32"  area 518 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(3,  3)"}
	slot {name "slot_inv_33"  area 518 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(4,  3)"}
	slot {name "slot_inv_34"  area 570 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(5,  3)"}
	slot {name "slot_inv_35"  area 570 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(6,  3)"}
	slot {name "slot_inv_36"  area 622 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(7,  3)"}
	slot {name "slot_inv_37"  area 622 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(8,  3)"}
	slot {name "slot_inv_38"  area 674 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(9,  3)"}
	slot {name "slot_inv_39"  area 674 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(10, 3)"}
	slot {name "slot_inv_40"  area 726 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(11, 3)"}
	slot {name "slot_inv_41"  area 726 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(12, 3)"}
	slot {name "slot_inv_42"  area 778 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(13, 3)"}
	slot {name "slot_inv_43"  area 778 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(14, 3)"}
	slot {name "slot_inv_44"  area 830 204 52 52 bam "STONSLOT" slotinfo "invAll:Slot(15, 3)"}
	slot {name "slot_inv_45"  area 830 256 52 52 bam "STONSLOT" slotinfo "invAll:Slot(16, 3)"}
	
	slot {name "slot_inv_30"  area 466 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(1,  4)"}
	slot {name "slot_inv_31"  area 466 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(2,  4)"}
	slot {name "slot_inv_32"  area 518 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(3,  4)"}
	slot {name "slot_inv_33"  area 518 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(4,  4)"}
	slot {name "slot_inv_34"  area 570 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(5,  4)"}
	slot {name "slot_inv_35"  area 570 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(6,  4)"}
	slot {name "slot_inv_36"  area 622 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(7,  4)"}
	slot {name "slot_inv_37"  area 622 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(8,  4)"}
	slot {name "slot_inv_38"  area 674 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(9,  4)"}
	slot {name "slot_inv_39"  area 674 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(10, 4)"}
	slot {name "slot_inv_40"  area 726 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(11, 4)"}
	slot {name "slot_inv_41"  area 726 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(12, 4)"}
	slot {name "slot_inv_42"  area 778 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(13, 4)"}
	slot {name "slot_inv_43"  area 778 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(14, 4)"}
	slot {name "slot_inv_44"  area 830 314 52 52 bam "STONSLOT" slotinfo "invAll:Slot(15, 4)"}
	slot {name "slot_inv_45"  area 830 366 52 52 bam "STONSLOT" slotinfo "invAll:Slot(16, 4)"}
	
	slot {name "slot_inv_30"  area 466 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(1,  5)"}
	slot {name "slot_inv_31"  area 466 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(2,  5)"}
	slot {name "slot_inv_32"  area 518 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(3,  5)"}
	slot {name "slot_inv_33"  area 518 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(4,  5)"}
	slot {name "slot_inv_34"  area 570 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(5,  5)"}
	slot {name "slot_inv_35"  area 570 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(6,  5)"}
	slot {name "slot_inv_36"  area 622 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(7,  5)"}
	slot {name "slot_inv_37"  area 622 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(8,  5)"}
	slot {name "slot_inv_38"  area 674 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(9,  5)"}
	slot {name "slot_inv_39"  area 674 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(10, 5)"}
	slot {name "slot_inv_40"  area 726 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(11, 5)"}
	slot {name "slot_inv_41"  area 726 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(12, 5)"}
	slot {name "slot_inv_42"  area 778 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(13, 5)"}
	slot {name "slot_inv_43"  area 778 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(14, 5)"}
	slot {name "slot_inv_44"  area 830 424 52 52 bam "STONSLOT" slotinfo "invAll:Slot(15, 5)"}
	slot {name "slot_inv_45"  area 830 476 52 52 bam "STONSLOT" slotinfo "invAll:Slot(16, 5)"}
	
	slot {name "slot_inv_30"  area 466 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(1,  6)"}
	slot {name "slot_inv_31"  area 466 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(2,  6)"}
	slot {name "slot_inv_32"  area 518 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(3,  6)"}
	slot {name "slot_inv_33"  area 518 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(4,  6)"}
	slot {name "slot_inv_34"  area 570 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(5,  6)"}
	slot {name "slot_inv_35"  area 570 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(6,  6)"}
	slot {name "slot_inv_36"  area 622 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(7,  6)"}
	slot {name "slot_inv_37"  area 622 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(8,  6)"}
	slot {name "slot_inv_38"  area 674 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(9,  6)"}
	slot {name "slot_inv_39"  area 674 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(10, 6)"}
	slot {name "slot_inv_40"  area 726 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(11, 6)"}
	slot {name "slot_inv_41"  area 726 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(12, 6)"}
	slot {name "slot_inv_42"  area 778 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(13, 6)"}
	slot {name "slot_inv_43"  area 778 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(14, 6)"}
	slot {name "slot_inv_44"  area 830 534 52 52 bam "STONSLOT" slotinfo "invAll:Slot(15, 6)"}
	slot {name "slot_inv_45"  area 830 586 52 52 bam "STONSLOT" slotinfo "invAll:Slot(16, 6)"}
	
	label
	{
		area 712 40 94 34
		text lua "characters[id].gold"
		text style "label"
		text align center center
		text color '$'
	}
	button
	{
		area 136 45 100 29
		encumbrance
	}
	--ground items
	button
	{
		area 430 662 417 52
		actionScroll "scrollGroundItems()"
	}
	label
	{
		area 519 638 220 24
		text lua "zZgroundItemText() .. ': ' .. zZgroundItemCountText()"
		text style "label"
		align center center
		text color 'O'
	}

 	slot {name "slot_inv_68" area 430 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground0" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_69" area 482 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground1" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_70" area 534 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground2" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_71" area 586 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground3" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_72" area 638 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground4" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_73" area 686 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground5" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_74" area 738 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground6" actionScroll "scrollGroundItems()"}
	slot {name "slot_inv_75" area 788 662 52 52	bam "STONSLOT" slotinfo "characters[id].equipment.ground7" actionScroll "scrollGroundItems()"}
	button
	{
		area 840 662 40 52
		bam GUIPRC
		sequence 2
		scaleToClip
		action
		"
			Infinity_OnGroundPage(1)
		"
	}
	button
	{
		area 390 662 40 52
		bam GUIPRC
		sequence 3
		scaleToClip
		action
		"
			Infinity_OnGroundPage(-1)
		"
	}
	-- new quickloot
	button
	{
		enabled		"zZquickLootenabled == 1"
		area 885 677 22 22
		bam ROUNDBUT
		frame lua 'zZnewQuickLootFrame()'
		scaleToClip
		tooltip lua "Infinity_FetchString(%str99897%)"
		action "
			if zZinvQuickLoot == 0 then
				zZinvQuickLoot = 2
				worldScreen:StartGroundItems()
				Infinity_PushMenu('WORLD_QUICKLOOT_EX')
				Infinity_SetOffset('WORLD_QUICKLOOT_EX', 100, 305)
			else
				zZinvQuickLoot = 0
				worldScreen:StopGroundItems()
				Infinity_PopMenu('WORLD_QUICKLOOT_EX')
			end
		"
	}
	--selection areas
	label 
	{
		name "slotsArea1"
		area 466 94 416 104
		mosaic 'FCTRANS2'
		actionEnter "invAll:SelChar(2)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		enabled "invAll.charSlot[2] ~= nil and mouseOverPortrait ~= invAll.charSlot[2].idx-1 and zzInDescription == 0 and zZnoSelectPortrait == 0"
	}
	label 
	{
		name "slotsArea2"
		area 466 204 416 104
		mosaic 'FCTRANS2'
		actionEnter "invAll:SelChar(3)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		enabled "invAll.charSlot[3] ~= nil and mouseOverPortrait ~= invAll.charSlot[3].idx-1 and zzInDescription == 0 and zZnoSelectPortrait == 0"
	}
	label 
	{
		name "slotsArea3"
		area 466 314 416 104
		mosaic 'FCTRANS2'
		actionEnter "invAll:SelChar(4)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		enabled "invAll.charSlot[4] ~= nil and mouseOverPortrait ~= invAll.charSlot[4].idx-1 and zzInDescription == 0 and zZnoSelectPortrait == 0"
	}
	label 
	{
		name "slotsArea4"
		area 466 424 416 104
		mosaic 'FCTRANS2'
		actionEnter "invAll:SelChar(5)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		enabled "invAll.charSlot[5] ~= nil and mouseOverPortrait ~= invAll.charSlot[5].idx-1 and zzInDescription == 0 and zZnoSelectPortrait == 0"
	}
	label 
	{
		name "slotsArea5"
		area 466 534 416 104
		mosaic 'FCTRANS2'
		actionEnter "invAll:SelChar(6)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		enabled "invAll.charSlot[6] ~= nil and mouseOverPortrait ~= invAll.charSlot[6].idx-1 and zzInDescription == 0 and zZnoSelectPortrait == 0"
	}
	label 
	{
		name "slotsArea0"
		area 64 94 326 466
		mosaic 'FCTRANSP'
		actionEnter "invAll:SelChar(1)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		enabled "invAll.charSlot[1] ~= nil and mouseOverPortrait ~= invAll.charSlot[1].idx-1 and zzInDescription == 0 and zZnoSelectPortrait == 0"
	}
	--portraits
	button
	{
		name "zzPortrait1"
		area 397 98 70 97
		portrait lua "invAll.charSlot[2].idx - 1"
		bam GUIRSP10
		enabled "invAll.charSlot[2] ~= nil and zzInDescription == 0 and zZnoSelectPortrait == 0"
		action "Infinity_OnPortraitLClick(invAll.charSlot[2].idx - 1); invAll.selected = 2"
		actiondrag "Infinity_SwapWithPortrait(invAll.charSlot[2].idx - 1)"
		actionEnter "invAll:SelChar(2)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		actionAlt "invAll.swapChars(2)"
		tooltip lua "Infinity_GetPortraitTooltip(invAll.charSlot[2].idx - 1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "zzPortrait2"
		area 397 208 70 97
		portrait lua "invAll.charSlot[3].idx - 1"
		bam GUIRSP10
		enabled "invAll.charSlot[3] ~= nil and zzInDescription == 0 and zZnoSelectPortrait == 0"
		action "Infinity_OnPortraitLClick(invAll.charSlot[3].idx - 1); invAll.selected = 3"
		actiondrag "Infinity_SwapWithPortrait(invAll.charSlot[3].idx - 1)"
		actionEnter "invAll:SelChar(3)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		actionAlt "invAll.swapChars(3)"
		tooltip lua "Infinity_GetPortraitTooltip(invAll.charSlot[3].idx - 1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "zzPortrait3"
		area 397 318 70 97
		portrait lua "invAll.charSlot[4].idx - 1"
		bam GUIRSP10
		enabled "invAll.charSlot[4] ~= nil and zzInDescription == 0 and zZnoSelectPortrait == 0"
		action "Infinity_OnPortraitLClick(invAll.charSlot[4].idx - 1); invAll.selected = 4"
		actiondrag "Infinity_SwapWithPortrait(invAll.charSlot[4].idx - 1)"
		actionEnter "invAll:SelChar(4)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		actionAlt "invAll.swapChars(4)"
		tooltip lua "Infinity_GetPortraitTooltip(invAll.charSlot[4].idx - 1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "zzPortrait4"
		area 397 428 70 97
		portrait lua "invAll.charSlot[5].idx - 1"
		bam GUIRSP10
		enabled "invAll.charSlot[5] ~= nil and zzInDescription == 0 and zZnoSelectPortrait == 0"
		action "Infinity_OnPortraitLClick(invAll.charSlot[5].idx - 1); invAll.selected = 5"
		actiondrag "Infinity_SwapWithPortrait(invAll.charSlot[5].idx - 1)"
		actionEnter "invAll:SelChar(5)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		actionAlt "invAll.swapChars(5)"
		tooltip lua "Infinity_GetPortraitTooltip(invAll.charSlot[5].idx - 1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "zzPortrait5"
		area 397 538 70 97
		portrait lua "invAll.charSlot[6].idx - 1"
		bam GUIRSP10
		enabled "invAll.charSlot[6] ~= nil and zzInDescription == 0 and zZnoSelectPortrait == 0"
		action "Infinity_OnPortraitLClick(invAll.charSlot[2].idx - 1); invAll.selected = 6"
		actiondrag "Infinity_SwapWithPortrait(invAll.charSlot[6].idx - 1)"
		actionEnter "invAll:SelChar(6)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		actionAlt "invAll.swapChars(6)"
		tooltip lua "Infinity_GetPortraitTooltip(invAll.charSlot[6].idx - 1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "zzPortrait0"
		area 240 154 82 116
		portrait lua "invAll.charSlot[1].idx - 1"
		bam GUIRSP10
		enabled "invAll.charSlot[1] ~= nil and zzInDescription == 0 and zZnoSelectPortrait == 0"
		action "Infinity_OnPortraitLClick(invAll.charSlot[1].idx - 1); invAll.selected = 1"
		actiondrag "Infinity_SwapWithPortrait(invAll.charSlot[1].idx - 1)"
		actionEnter "invAll:SelChar(1)"
		actionExit "mouseOverPortrait = -1; invAll.updateHighlight = 1"
		tooltip lua "Infinity_GetPortraitTooltip(invAll.charSlot[1].idx - 1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	label
	{
		area 78 582 280 95
		enabled "TEXT_inventoryError ~= ''"
		mosaic 'FCINVERR'
	}
	text
	{
		area 90 594 254 72
		enabled "TEXT_inventoryError ~= ''"
		text lua "TEXT_inventoryError"
		scrollbar 'GUISCRC'
		text style normal
		text point 12
	}
	label
	{
		enabled "zzGlowEye == 1"
		area 	840 18 33 27
		bam		'fcclweye'
		sequence 0
	}
	button
	{
		area		834 12 53 44
		on 'escape'
		action
		"
			Infinity_PopMenu('CHARACTER_ZZ_INVENTORY')
		"
		actionEnter "zzGlowEye = 1"
		actionExit  "zzGlowEye = 0"
	}
}
`
SLIDER_color_hair_start = 1
SLIDER_color_skin_start = 1
SLIDER_color_major_start = 1
SLIDER_color_minor_start = 1

SLIDER_color_hair = 1
SLIDER_color_skin = 1
SLIDER_color_major = 1
SLIDER_color_minor = 1
`
menu
{
	name 'CHARACTER_COLOR'
	align center center
	ignoreesc
	onOpen
	"
		Infinity_UpdateLuaStats()
		
		SLIDER_color_hair = characters[id].colors.hair
		SLIDER_color_skin = characters[id].colors.skin
		SLIDER_color_major = characters[id].colors.major
		SLIDER_color_minor = characters[id].colors.minor
		
		SLIDER_color_hair_start = SLIDER_color_hair
		SLIDER_color_skin_start = SLIDER_color_skin
		SLIDER_color_major_start = SLIDER_color_major
		SLIDER_color_minor_start = SLIDER_color_minor
	"
	onClose
	"
		if(SLIDER_color_hair_start ~= -1) then Infinity_SetHairColor(SLIDER_color_hair_start) end
		if(SLIDER_color_skin_start ~= -1) then Infinity_SetSkinColor(SLIDER_color_skin_start) end
		if(SLIDER_color_major_start ~= -1) then Infinity_SetMajorColor(SLIDER_color_major_start) end
		if(SLIDER_color_minor_start ~= -1) then Infinity_SetMinorColor(SLIDER_color_minor_start) end
		zzCangePortrait = 0
		if zZcolorsFromInv ~= 0 then sidebarsGreyed = 0 end
		zZcolorsFromInv = 0
		zZcurrId = -1
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area 446 150 442 288
		mosaic  FCCUST3Z
	}
	label
	{
		enabled		"zzCangePortrait ~= 0"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		enabled		"zZcolorsFromInv ~= 0"
		area		282 30 376 46
		text		lua "characters[zZcurrId].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		enabled		"zzCangePortrait ~= 0"
		area		80 150 358 78
		text		lua "zZgetAllLevelString()"
		text style	'normal'
		text align	center center
	}
	label
	{
		enabled		"zzCangePortrait ~= 0"
		area		80 150 358 78
		text		lua "zZgetLevelDrain()"
		text style	'normal'
		text align	center center
	}
	label
	{
		enabled		"zZcolorsFromInv == 0"
		area		588 166 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
	}
	label
	{
		enabled		"zZcolorsFromInv ~= 0"
		area		588 166 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[zZcurrId].portrait"
	}
	button
	{
		enabled		"zzCangePortrait ~= 0 or zZcolorsFromInv ~= 0"
		area 460 210 114 160
		align center center
		paperdoll 0
	}
	button
	{
		enabled		"zzCangePortrait ~= 0 or zZcolorsFromInv ~= 0"
		area 770 210 114 160
		align center center
		paperdoll 1
	}
	label
	{
		area		56 430 385 10
		mosaic		'fcline01'
		respectClipping
	}
	label
	{
		area		445 582 433 10
		mosaic		'fcline01'
	}
	label
	{
		area 104 84 740 44
		text lua "zZchangeColorsTitle()"
		text style "title"
		text color	'O'
		text shadow	1
	}
	label
	{
		enabled		"zzCangePortrait == 0 and zZcolorsFromInv == 0"
		area 70 140 364 88
		text "COLOR_CHOICES_TITLE"
		text style "title"
		text color	'$'
	}
	label
	{
		enabled		"zZcolorsFromInv ~= 0"
		area 70 140 364 88
		text lua "characters[zZcurrId].class"
		text style "title"
		text color	'$'
	}
	label
	{
		area		611 485 39 39
		mosaic		'fcclrfrm'
	}
	label
	{
		area 608 482 42 44
		colordisplay 6
	}
	label
	{
		area		611 529 39 39
		mosaic		'fcclrfrm'
	}
	label
	{
		area 608 526 42 44
		colordisplay 3
	}
	label
	{
		area		821 485 39 39
		mosaic		'fcclrfrm'
	}
	label
	{
		area 818 482 42 44
		colordisplay 2
	}
	label
	{
		area		821 529 39 39
		mosaic		'fcclrfrm'
	}
	label
	{
		area 818 526 42 44
		colordisplay 1
	}
	label
	{
		area 80 240 364 38
		text lua "t('APPEARANCE_LABEL') ..  '^B:^-'"
		text style "label"
		text point 14
		text align left center
		text color	'O'
	}
	label
	{
		area 534 442 144 40
		text lua "t('APPEARANCE_LABEL') ..  '^B:^-'"
		text style "label"
		text point 14
		text align left center
		text color	'O'
	}
	label
	{
		area 202 278 74 30
		text "HAIR_LABEL"
		text style "label"
	}
	label
	{
		area 506 482 74 44
		text "HAIR_LABEL"
		text style "label"
	}
	slider
	{
		palette 6
		area 62 304 376 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_hair"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(6)"
		action
		"
			Infinity_SetHairColor(SLIDER_color_hair)
		"
	}
	label
	{
		area		60 302 380 48
		fill		104 42 8 45
		enabled "characters[id].PC ~= 1"
	}

	label
	{
		area 202 348 74 34
		text "SKIN_LABEL"
		text style "label"
	}
	label
	{
		area 506 526 74 44
		text "SKIN_LABEL"
		text style "label"
	}
	slider
	{
		palette 3
		area 62 382 376 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_skin"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(3)"
		action
		"
			Infinity_SetSkinColor(SLIDER_color_skin)
		"
	}
	label
	{
		area		60 380 380 48
		fill		104 42 8 45
		enabled "characters[id].PC ~= 1"
	}
	
	label
	{
		area 80 446 358 36
		text lua "t('CLOTHING_LABEL') ..  '^B:^-'"
		text style "label"
		text point 14
		text align left center
		text color	'O'
	}
	label
	{
		area 744 442 134 40
		text lua "t('CLOTHING_LABEL') ..  '^B:^-'"
		text style "label"
		text point 14
		text align left center
		text color	'O'
	}
	label
	{
		area 202 478 74 40
		text "MAJOR_LABEL"
		text style "label"
	}
	label
	{
		area 716 482 74 44
		text "MAJOR_LABEL"
		text style "label"
	}
	slider
	{
		palette 2
		area 62 514 376 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_major"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(2)"
		action
		"
			Infinity_SetMajorColor(SLIDER_color_major)
		"
	}
	label
	{
		area 202 558 74 38
		text "MINOR_LABEL"
		align center center
		text style "label"
	}
	label
	{
		area 716 526 74 44
		text "MINOR_LABEL"
		align center center
		text style "label"
	}
	slider
	{
		palette 1
		area 62 596 376 44
		bam	 'SLDRSTAR'
		scaleToClip
		position "SLIDER_color_minor"
		sequence 0
		frame	 1
		settings lua "game:GetPaletteSize(1)"
		action
		"
			Infinity_SetMinorColor(SLIDER_color_minor)
		"
	}
	label
	{
		area		611 605 39 39
		mosaic		'fcclrfrm'
	}
	label
	{
		area 608 602 42 44
		colordisplay 4
	}
	label
	{
		area 506 602 74 40
		text lua "stringsAll.clLeather"
		text style "label"
	}
	label
	{
		area		821 605 39 39
		mosaic		'fcclrfrm'
	}
	label
	{
		area 818 602 42 44
		colordisplay 5
	}
	label
	{
		area 716 602 74 40
		text lua "stringsAll.clArmor"
		text style "label"
	}
	button
	{
		on escape
		enabled		"zzCangePortrait ~= 0"
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text "CANCEL_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
	button
	{
		on return
		enabled		"zzCangePortrait ~= 0"
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text "DONE_BUTTON"
		text style "button"
		action
		"
			--save settings
			SLIDER_color_hair_start = SLIDER_color_hair
			SLIDER_color_skin_start = SLIDER_color_skin
			SLIDER_color_major_start = SLIDER_color_major
			SLIDER_color_minor_start = SLIDER_color_minor
			
			if (e:GetActiveEngine() == createCharScreen) then
				createCharScreen:OnDoneButtonClick()
			end
			
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
	button
	{
		on escape
		enabled		"zzCangePortrait == 0"
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
	button
	{
		on return
		enabled		"zzCangePortrait == 0"
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		action
		"
			--save settings
			SLIDER_color_hair_start = SLIDER_color_hair
			SLIDER_color_skin_start = SLIDER_color_skin
			SLIDER_color_major_start = SLIDER_color_major
			SLIDER_color_minor_start = SLIDER_color_minor
			
			if (e:GetActiveEngine() == createCharScreen) then
				createCharScreen:OnDoneButtonClick()
			end
			
			Infinity_PopMenu('CHARACTER_COLOR',0,0)
		"
	}
	button
	{
		enabled		"zzCangePortrait == 0"
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
menu
{
	name 'WORLD_LEVEL_UP_BUTTONS'
	align right top
	offset -60 0
	ignoreesc
	enabled  "not Infinity_IsPlayerMoving() and journalOpen == 0"
	onOpen
	"
		zzShowLPTooltip = 0
	"
	onClose
	"
		zzShowLPTooltip = 0
	"
	label
	{
		area -15 0 80 0
	}
	label
	{
		enabled "(Infinity_CanLevelUp(0) or Infinity_CanLevelUp(1) or Infinity_CanLevelUp(2) or Infinity_CanLevelUp(3) or Infinity_CanLevelUp(4) or Infinity_CanLevelUp(5)) and zzShowLPTooltip == 1"
		name 'zzWLevelUpLabel'
		area -245 106 250 60
		text lua "zzGetWLevelUpTooltip()"
		text style	'normal'
		text align	left center
		text point	12
		rectangle	10
		rectangle opacity 140
	}
	button
	{
		enabled "Infinity_CanLevelUp(0)"
		bam GUIOSW
		area 0 14 44 44
		sequence 0
		action "Infinity_ActivateRecord(0)"
		actionAlt "Infinity_OnPortraitLClick(0); e:GetActiveEngine():OnLeftPanelButtonClick(4)"
		actionEnter "Infinity_SetArea('zzWLevelUpLabel', nil, 14, nil, nil); zzShowLPTooltip = 1"
		actionExit  "zzShowLPTooltip = 0"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(1)"
		bam GUIOSW
		area 0 106 44 44
		sequence 0
		action "Infinity_ActivateRecord(1)"
		actionAlt "Infinity_OnPortraitLClick(1); e:GetActiveEngine():OnLeftPanelButtonClick(4)"
		actionEnter "Infinity_SetArea('zzWLevelUpLabel', nil, 106, nil, nil); zzShowLPTooltip = 1"
		actionExit  "zzShowLPTooltip = 0"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(2)"
		bam GUIOSW
		area 0 198 44 44
		sequence 0
		action "Infinity_ActivateRecord(2)"
		actionAlt "Infinity_OnPortraitLClick(2); e:GetActiveEngine():OnLeftPanelButtonClick(4)"
		actionEnter "Infinity_SetArea('zzWLevelUpLabel', nil, 198, nil, nil); zzShowLPTooltip = 1"
		actionExit  "zzShowLPTooltip = 0"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(3)"
		bam GUIOSW
		area 0 290 44 44
		sequence 0
		action "Infinity_ActivateRecord(3)"
		actionAlt "Infinity_OnPortraitLClick(3); e:GetActiveEngine():OnLeftPanelButtonClick(4)"
		actionEnter "Infinity_SetArea('zzWLevelUpLabel', nil, 290, nil, nil); zzShowLPTooltip = 1"
		actionExit  "zzShowLPTooltip = 0"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(4)"
		bam GUIOSW
		area 0 382 44 44
		sequence 0
		action "Infinity_ActivateRecord(4)"
		actionAlt "Infinity_OnPortraitLClick(4); e:GetActiveEngine():OnLeftPanelButtonClick(4)"
		actionEnter "Infinity_SetArea('zzWLevelUpLabel', nil, 382, nil, nil); zzShowLPTooltip = 1"
		actionExit  "zzShowLPTooltip = 0"
		pulse 1
	}
	button
	{
		enabled "Infinity_CanLevelUp(5)"
		bam GUIOSW
		area 0 474 44 44
		sequence 0
		action "Infinity_ActivateRecord(5)"
		actionAlt "Infinity_OnPortraitLClick(5); e:GetActiveEngine():OnLeftPanelButtonClick(4)"
		actionEnter "Infinity_SetArea('zzWLevelUpLabel', nil, 474, nil, nil); zzShowLPTooltip = 1"
		actionExit  "zzShowLPTooltip = 0"
		pulse 1
	}
}
menu
{
	name 'textflash'
	opacity lua 'getOpacityForInfoBlock(1000)'
	enabled 'getOpacityForInfoBlock(1000) ~= 0'
	align center top
	offset 0 5

	label
	{
		area 0 0 540 180
		mosaic fcflatxt
	}
	label
	{
		area 97 10 378 26
		text lua "getTitleString()"
		text style "label"
		text align left center
		text point 14
		text color C
	}
	text
	{
		area 97 36 378 26
		text lua "getSubtitleString()"
		text style "label"
		text align left center
		text point 14
		text color D
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}

	text
	{
		area 25 64 497 82
		text lua "getBodyString()"
		text style "normal"
		text align left top
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}
	label
	{
		area 21 9 72 55
		bam 'GUILS10'
		sequence 2
		frame 0
	}
	button
	{
		area 5 0 530 175
		action
		"
			if(sidebarsGreyed ~= 1) then
				e:GetActiveEngine():OnLeftPanelButtonClick(2)
				local tf = next(textflashes)
				setSelectedQuest(textflashes[tf][5])
			end
		"
	}
	button
	{
		bam GUIOSW
		on esc
		area 480 7 44 44
		sequence 2
		action 
		"
			--end the animation
			local tf = next(textflashes)
			textflashes[tf] = nil
		"
	}
}
menu
{
	name 'zztextflash'
	opacity lua 'zZgetOpacityForInfoBlock(1000)'
	enabled 'zZgetOpacityForInfoBlock(1000) ~= 0'
	align center top
	offset 0 5
	label
	{
		area 0 0 540 180
		mosaic fcflatxt
	}
	label
	{
		area 97 10 378 26
		text lua "zZgetTFString(1)"
		text style "label"
		text align left center
		text point 14
		text color C
	}
	text
	{
		area 97 36 378 26
		text lua "zZgetTFString(2)"
		text style "label"
		text align left center
		text point 14
		text color D
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}

	text
	{
		area 25 78 497 52
		text lua "zZgetTFString(3)"
		text style "normal"
		text align left center
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}
	text
	{
		area 35 132 487 25
		text lua "zZgetTFString(9)"
		text style "normal"
		text align left center
		scrollbar 'GUISCRC'
		scrollbar hide lua "1"
	}
	label
	{
		area 21 9 60 60
		bam lua "zZgetTFString(7)"
		sequence 0
		frame lua "zZgetTFFrame()"
		scaleToClip
	}
	button
	{
		bam GUIOSW
		on esc
		area 480 7 44 44
		sequence 2
		action 
		"
			local tf = next(zztextflashes)
			zztextflashes[tf] = nil
		"
	}
}

`
luaEdit = ""
luaEditDebugDump = 0
luaEditHistory = {}
luaEditMaxHistory = 20
luaEditHistoryIndex = 0
luaEditShowHistoryList = 0
luaEditHistoryListSelected = 0
function updateLuaHistory()
	local i = 2
	local tempTab = {}
	tempTab[1] = luaEdit
	while ( i <= luaEditMaxHistory ) do
		if luaEditHistory[i-1] ~= luaEdit and luaEditHistory[i-1] ~= '' then
			table.insert(tempTab, luaEditHistory[i-1])
		end
		i = i + 1
	end
	luaEditHistory = tempTab
end
function loadLuaHistory()
	local i, m, s = 1, 1, 0
	local tempTab = {}
	while (i <= luaEditMaxHistory ) do
		s = 0
		local ini = Infinity_GetINIString("Lua Edit","String"..i-1, "")
		if ini ~= "" and ini ~= nil then
			for k, v in pairs(tempTab) do
				if v == ini then s = 1; break end
			end
			if s ~= 1 then
				luaEditHistory[m] = ini
				m = m + 1
			end
		end
		tempTab[i] = ini
		i = i + 1
	end
end
function saveLuaHistory()
	local i = 1
	while (i <= luaEditMaxHistory ) do
		Infinity_SetINIValue("Lua Edit","String"..i-1, luaEditHistory[i])
		i = i + 1
	end
end
function luaEditHistoryUp()
	if(luaEditHistoryIndex <= 1) then return end
	luaEditHistoryIndex = luaEditHistoryIndex - 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end
function luaEditHistoryDown()
	if(luaEditHistoryIndex == luaEditMaxHistory) then return end
	if(luaEditHistory[luaEditHistoryIndex + 1] == "") or (luaEditHistory[luaEditHistoryIndex + 1] == nil) then return end
	luaEditHistoryIndex = luaEditHistoryIndex + 1
	luaEdit = luaEditHistory[luaEditHistoryIndex]
end

cheatGoldAmt = 1000000
cheatXpAmt = 500000

`
menu
{
	name 'cheatMenu'
	ignoreEsc	
    onOpen
	"
		%strcheatAreaDisplayList%
		else
			cheatAreaDisplayList = cheatAreas
		end
	"

	label
	{
		area 100 0 809 298
		mosaic 'FCGWBT30'	
	}
	label
	{
		area 136 16 448 222
		fill 111 111 111 64
	}
	list
	{
		column 
		{
			width 20
			label
			{
				area -8 0 -1 -1
				mosaic lua "zZspellBookBkg(rowNumber, cheatTeleportArea, 'fcatrtbm')"
				respectClipping
			}
			label
			{
				area 8 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][1]"
				text style "list"
				text color	'O'
			}
		}
		column 
		{ 
			width 80
			label
			{
				area -8 0 -1 -1
				mosaic lua "zZspellBookBkg(rowNumber, cheatTeleportArea, 'fcatrtbm')"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "cheatAreaDisplayList[rowNumber][2]"
				text style "list"
			}
		}
		area 136 16 448 222
		hidehighlight
		rowheight	22
		table		"cheatAreaDisplayList"
		var		cheatTeleportArea
		scrollbar	'GUISCRC'
	}
	label
	{
		area		%strcheatArea%
		bam			'%strcheatBam%'
		sequence	%strcheatSeq%
		scaleToClip
	}
	button
	{
		area		282 246 140 30
		bam			GUIBUTNS
		sequence	2
		text		"TRAVEL_BUTTON"
		text style	"button"
		action 		"C:MoveToArea(cheatAreaDisplayList[cheatTeleportArea][1])"
	}
	button
	{
		area		605 162 140 30
		bam			GUIBUTNS
		sequence	2
		text			"GODBOW_LABEL"
		text style	"button"
		action		"C:CreateItem('godbow')"
	}
	button
	{
		area		605 204 140 30
		bam			GUIBUTNS
		sequence	2
		text		"GIVE_GOLD_LABEL"
		text style	"button"
		action		"C:AddGold(cheatGoldAmt)"
	}
	edit
	{
		area		751 204 138 30
		var			cheatGoldAmt
		text style	"edit"
		text color	'$'
		text align	left center
		maxlines	1
	}
	button
	{
		area		605 246 140 30
		bam			GUIBUTNS
		sequence	2
		text		"GIVE_XP_LABEL"
		text style	"button"
		action		"C:SetCurrentXP(cheatXpAmt)"
	}
	edit
	{
		area		751 246 138 30
		var			cheatXpAmt
		text style	"edit"
		text color	'$'
		text align	left center
		maxlines	1
	}

	button
	{
		area		751 162 140 30
		bam			GUIBUTNS
		sequence	2
		text		"EXPLORE_LABEL"
		text style	"button"
		action		"C:ExploreArea()"
	}
}
menu
{
	name "luaHistoryMenu"
	offset 0 -55
	align right bottom
	label
	{
		area 0 0 493 298
		mosaic 'FCGWBT25'
	}
	label
	{
		area 30 25 433 244
		fill 111 111 111 64
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area -8 0 -1 -1
				mosaic lua "zZspellBookBkg(rowNumber, luaEditHistoryListSelected, 'fcatrtb0')"
				respectClipping
			}
			label
			{
				area 8 0 -1 -1
				text lua "luaEditHistory[rowNumber]"
				text style	"list"
			}
		}
		area 30 25 433 244
		rowheight	22
		hidehighlight
		var luaEditHistoryListSelected
		table		"luaEditHistory"
		scrollbar	'GUISCRC'
		action
		"
			luaEdit = luaEditHistory[luaEditHistoryListSelected]
		"
		actionDbl
		"
			luaEdit = luaEditHistory[luaEditHistoryListSelected]
			updateLuaHistory()
			saveLuaHistory()
			Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
		"
		actionAlt
		"
			table.remove(luaEditHistory, luaEditHistoryListSelected)
		"
	}
}
menu
{
	name 'cheatConsole'
	align center bottom
	ignoreEsc
	onOpen 
	"
		toolbarTop = 50
		Infinity_PushMenu('WORLD_MESSAGES')
		Infinity_PushMenu('cheatMenu', 0, 0);
		Infinity_FocusTextEdit('luaEditArea'); 
		luaEdit = trim(luaEdit)
		loadLuaHistory()
		luaEditShowHistoryList = 0
	"
	onClose 
	"
		luaEditShowHistoryList = 0
		Infinity_PopMenu('cheatMenu', 0, 0);
		Infinity_PopMenu('luaHistoryMenu', 0, 0);
	"
	label
	{
		area 0 0 809 50
		mosaic 'FCGWBT20'
	}
	button
	{
		area 5 15 26 21
		bam FCBTNIKS
		align center center
		clickable lua "luaEdit ~= '' and luaEdit ~= nil"
		scaleToClip
		action "luaEdit = ''"
	}
	edit
	{
		name				"luaEditArea"
		area				55 8 730 30
		var					luaEdit
		scrollbar			'GUISCRC'
		scrollbar hide		1
		text style			"edit"
		text align			left center
		fill            	112 111 111 64
		text useFontZoom	0
		action
		"
			--if key_pressed is return
			if (key_pressed == 13) then
				updateLuaHistory()
				saveLuaHistory()
				Infinity_LuaConsoleInput(luaEditObjectId,luaEditDebugDump)
				return -1
			end
			if (key_pressed == 27) then
				return 0
			end
			return 1
		"
	}
	button
	{
		area		821 11 22 22
		bam			ROUNDBUT
		toggle		luaEditShowHistoryList
		scaleToClip
		action
		"
			if(luaEditShowHistoryList == 0) then
				Infinity_PopMenu('luaHistoryMenu',0,0)
			else
				Infinity_PushMenu('luaHistoryMenu',0,0)
			end
		"
	}
	button
	{
		enabled "Infinity_TextEditHasFocus()"
		on up
		action
		"
			luaEditHistoryUp()
		"
	}
	button
	{
		enabled "Infinity_TextEditHasFocus()"
		on down
		action
		"
			luaEditHistoryDown()
		"
	}

}
`
cloudLoadState=0
function CheckCloudSaveStatus()
	Infinity_UpdateCloudSaveState()
	if(cloudLoadState == 0) then
		Infinity_PopMenu()
	end
	return GetCloudLoadingText()
end
function GetCloudLoadingText()
	if(cloudLoadState == 1 or cloudLoadState == 0) then
		return t('DOWNLOADING_SAVE_NORMAL')
	end
	if(cloudLoadState == 2) then
		return t('SEARCHING_SAVE_NORMAL')
	end
	return t('CLOUD_STATE_UNDEFINED_NORMAL')
end
`
menu
{
	name 'CloudSaveUpdateMenu'
	align center center
	modal
	label
	{
		area 0 0 657 234
		mosaic 'GUIERR6Z'
	}
	label 
	{
		area 30 20 595 120
		text lua "CheckCloudSaveStatus()"
		text style "label"
		text align center center
	}
	button
	{
		area 		228 170 200 44
		bam 		'GUIBUTNT'
		sequence	0
		text		"SKIP_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			Infinity_PopMenu()
		"	
	}
}
`
messageBoxCurMessage = nil
messageBoxMessages = {}
function initMessageBox(message)
	messageBoxMessages[message] = 1
	if(messageBoxCurMessage ~= nil) then
		--message box already active
		return
	end
	getNextMessage()
	Infinity_PushMenu('LuaMessageBox',0,0)
end

function getNextMessage()
	i = 1
	while ( i <= messageBoxMessageCount ) do
		showMessage = messageBoxMessages[i]
		if ( showMessage ~= nil ) then
			messageBoxCurMessage = i
			return 1
		end
		i = i + 1
	end
	--whole table scanned, all messages have been displayed
	return 0
end
`
menu
{
	name 'LuaMessageBox'
	align center center
	ignoreesc
	modal
	label
	{
		area 0 0 657 234
		mosaic 'GUIERR6Z'
	}
	label
	{
		area 30 20 595 120
		text lua "messages[messageBoxCurMessage]"
		text style	"label"
		text align center center
	}
	button
	{
		area 228 170 200 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style	"button"
		action
		"
			messageBoxMessages[messageBoxCurMessage] = nil
			if(getNextMessage() == 0) then
				messageBoxCurMessage = nil
				Infinity_PopMenu()
			end
		"	
	}
}

`
	partyImport = {}
`
menu
{
	name 'IMPORTPARTY'
	align center center
	label 
	{
		mosaic 'FCGMPCBD'
		area 0 0 1024 768
	}
	label
	{
		area 288 28 450 42
		text "CREATE_PARTY_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		enabled		"game:GetMissionPackInfoTBP()"
		area 		67 582 889 76
		scrollbar	'GUISCRC'
		text style	"normal"
		text 		%strs69563%
	}
	--portraits
	label
	{
		area 90 135 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 94 137 56 86
		bitmap lua "partyImport.character[1].portrait"
		clickable lua "partyImport.character[1].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(0)
		"
	}
	label
	{
		area 90 295 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 94 297 56 86
		bitmap lua "partyImport.character[2].portrait"
		clickable lua "partyImport.character[2].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(1)
		"
	}
	label
	{
		area 90 451 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 94 453 56 86
		bitmap lua "partyImport.character[3].portrait"
		clickable lua "partyImport.character[3].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(2)
		"
	}
	label
	{
		area 544 135 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 548 137 56 86
		bitmap lua "partyImport.character[4].portrait"
		clickable lua "partyImport.character[4].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(3)
		"
	}
	label
	{
		area 544 295 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 548 297 56 86
		bitmap lua "partyImport.character[5].portrait"
		clickable lua "partyImport.character[5].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(4)
		"
	}
	label
	{
		area 544 451 64 90
		bam 'GUIRSP10'
		sequence 0
	}
	button
	{
		area 548 453 56 86
		bitmap lua "partyImport.character[6].portrait"
		clickable lua "partyImport.character[6].name ~= ''"
		action
		"
			createPartyScreen:OnPortraitButtonClick(5)
		"
	}
	button
	{
		area 528 680 200 40
		bam 'GUIBUTNT'
		sequence 1
		text "PLAY_IMPORT_BUTTON"
		text style 'button'
		clickable lua "partyImport.playbuttonclickable"
		action 
		"
			createPartyScreen:OnDoneButtonClick()
		"
	}
	button
	{
		on escape
		area 306 680 200 40
		bam 'GUIBUTNT'
		sequence 0
		text "BACK_BUTTON"
		text style 'button'
		action 
		"
			createPartyScreen:OnBackButtonClick()
		"
	}
	--delete/create buttons
	button
	{
		area 172 132 300 40
		bam 'GUIBUTWT'
		sequence 0
		text lua "partyImport.character[1].createdelete"
		text style "button"
		action
		"
			popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() createPartyScreen:OnCreateDeleteButtonClick(0) end, 'NO_BUTTON')
		"
	}
	button
	{
		area 172 290 300 40
		bam 'GUIBUTWT'
		sequence 2
		text lua "partyImport.character[2].createdelete"
		text style "button"
		action
		"
			popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() createPartyScreen:OnCreateDeleteButtonClick(1) end, 'NO_BUTTON')
		"
	}
	button
	{
		area 172 446 300 40
		bam 'GUIBUTWT'
		sequence 1
		text lua "partyImport.character[3].createdelete"
		text style "button"
		action
		"
			popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() createPartyScreen:OnCreateDeleteButtonClick(2) end, 'NO_BUTTON')
		"
	}
	button
	{
		area 627 132 300 40
		bam 'GUIBUTWT'
		sequence 0
		text lua "partyImport.character[4].createdelete"
		text style "button"
		action
		"
			popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() createPartyScreen:OnCreateDeleteButtonClick(3) end, 'NO_BUTTON')
		"
	}
	button
	{
		area 627 290 300 40
		bam 'GUIBUTWT'
		sequence 2
		text lua "partyImport.character[5].createdelete"
		text style "button"
		action
		"
			popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() createPartyScreen:OnCreateDeleteButtonClick(4) end, 'NO_BUTTON')
		"
	}
	button
	{
		area 627 446 300 40
		bam 'GUIBUTWT'
		sequence 1
		text lua "partyImport.character[6].createdelete"
		text style "button"
		action
		"
			popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() createPartyScreen:OnCreateDeleteButtonClick(5) end, 'NO_BUTTON')
		"
	}
	-- character labels
	label
	{
		area 172 178 300 50
		fill 111 111 111 64
	}
	label
	{
		area 172 178 300 50
		text lua "partyImport.character[1].name"
		text style "title"
	}
	label
	{
		area 172 336 300 50
		fill 111 111 111 64
	}
	label
	{
		area 172 336 300 50
		text lua "partyImport.character[2].name"
		text style "title"
	}
	label
	{
		area 172 492 300 50
		fill 111 111 111 64
	}
	label
	{
		area 172 492 300 50
		text lua "partyImport.character[3].name"
		text style "title"
	}
	label
	{
		area 627 178 300 50
		fill 111 111 111 64
	}
	label
	{
		area 627 178 300 50
		text lua "partyImport.character[4].name"
		text style "title"
	}
	label
	{
		area 627 336 300 50
		fill 111 111 111 64
	}
	label
	{
		area 627 336 300 50
		text lua "partyImport.character[5].name"
		text style "title"
	}
	label
	{
		area 627 492 300 50
		fill 111 111 111 64
	}
	label
	{
		area 627 492 300 50
		text lua "partyImport.character[6].name"
		text style "title"
	}
}
%strINSTALLATION_WARNING%
`
	highlightBG = false
	highlightSOD = false
	highlightBP = false
	logoFrame = 0

	function startThreeBookHighlight(book)
		if book == 1 and highlightBG == true then
			return 1
		elseif book == 2 and highlightSOD == true then
			return 1
		elseif book == 3 and highlightBP == true then
			return 1
		else
			return 0
		end
	end
`
menu
{
	name 'START'
	align left top
	ignoreesc
	onOpen "
		%strINSTALLATION_WARNINGCheck%
		canContinue = startEngine:HasGameToContinue()
		currHighlightCamp = 0
		selectedCampaign = Infinity_GetINIValue('Program Options','Active Campaign',const.START_CAMPAIGN_SOA)
		zzBigLogo = 'BIGLOGO'
		zzBigLogoFrame = startCampaignData[selectedCampaign].bigLogo
		zZsetStartAreaPositions()
		Infinity_PlayMovie('flames','flames')
		e:CheckGUISong()
		local state = startEngine:GetEngineState()
		if lastStartMenu and lastStartMenu ~= 'START' then
			Infinity_PopMenu('START')
			Infinity_PushMenu(lastStartMenu)
			lastStartMenu = nil
		elseif state == 1 then
			Infinity_PopMenu('START')
			Infinity_PushMenu('START_SP')
		elseif state == 2 then
			Infinity_PopMenu('START')
			Infinity_PushMenu('START_MP')
		end
		Infinity_SetBackground('BACKGROUND')
		if selectCmpOnce == 0 then
			zZselectCurrentCampaign(selectedCampaign)
			selectCmpOnce = 1
		end
	"
	onClose "
		local state = startEngine:GetEngineState()
		if state == 1 then
			Infinity_PopMenu('START_SP')
		elseif state == 2 then
			Infinity_PopMenu('START_MP')
		end
	"
	label
	{
		name 'zZstartAreaBkg'
		area 0 0 1280 960
	}
	label
	{
		name 'zzStrSide'
		area 840 -600 390 2160
		mosaic	'FCSTRSDE'
		actionEnter "
			if currHighlightCamp ~= selectedCampaign then
				currHighlightCamp = selectedCampaign
			end
		"
	}
	label
	{
		name	'zzStartBottom'
		area	-1280 770 3840 190
		mosaic 'FCSTRTBT'
	}
	label
	{
		name	'zzStartTop'
		area	-1280 0 3840 50
		mosaic 'FCSTRTTP'
	}
	label
	{
		name 'zZstartBigLogo'
		area 262 210 %strBigLogoSize%
		bam lua "zzBigLogo"
		sequence %strBigLogoSeq%
		frame lua "zzBigLogoFrame"
		align center center
		actionEnter "
			if currHighlightCamp ~= selectedCampaign then
				currHighlightCamp = selectedCampaign
			end
		"
	}
	label
	{
		name 'zZstartTitle'
		area 132 100 605 108
		bam "TITLE"
		sequence 0
		frame lua "startCampaignData[selectedCampaign].title"
		align center center
	}
	label
	{
		name 'zZstartDndLogo'
		area 300 705 270 30
		bam "FCDNDLGO"
		scaleToClip
	}
	label
	{
		name 'zZlblStartVersion'
		area 910 705 249 45
		text lua "stringsAll.zzGameVer .. CBaldurChitin:GetVersionString()"
		text style	"label"
		text point	12
		align center center
	}
	list
	{
		column
		{
			width 20
			%strSTART_MONE%
		}
		column
		{
			width 80
			%strSTART_MTWO%
			label
			{
				area 8 0 -1 -1
				text lua "zZgetCampTitle(rowNumber)"
				text style	'title'
				text align	left center
			}
		}
		name	'zZstartList'
		area	20 790 400 150
		rowheight	50
		hidehighlight
		table		'startCampaignData'
		var			selTblCampaign
		scrollbar	'GUISCRC'
		--scrollbar hide 1
		action
		"
			zZselectCurrentCampaign(selTblCampaign)
		"
		actionEnter
		"
			if mouseoverRow > 0 then
				currHighlightCamp = mouseoverRow
			end
		"
		actionExit
		"
			
		"
	}
	text
	{
		name 'zZstartListDesc'
		enabled "currHighlightCamp ~= 0"
		area 440 790 820 150
		text lua "zZgetCampDescription(currHighlightCamp)"
		text style	'label'
		text align	left center
		fill 112 111 111 20
		scrollbar	'GUISCRC'
	}
	button
	{
		name 'zZbtnStartContinue'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 120 249 45
		pad 10 8 10 8
		text style "button"
		text "CONTINUE_BUTTON"
		clickable lua "canContinue"
		action "startEngine:OnContinueGame()"
	}
	button
	{
		name 'zZbtnStartNewGame'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 175 249 45
		pad 10 8 10 8
		text style "button"
		text "NEW_GAME_BUTTON"
		action 
		"
			Infinity_PopMenu(); 
			startEngine:OnNewGameButtonClick();
		"
	}
	button
	{
		name 'zZbtnStartLoadGame'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 230 249 45
		pad 10 8 10 8
		text style "button"
		text "LOAD_GAME_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnLoadGameButtonClick()"
	}
	button
	{
		name 'zZbtnStartPregenChar'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 285 249 45
		pad 10 8 10 8
		text style "button"
		text "PREGENERATE_BUTTON"
		action "Infinity_PopMenu(); startEngine:OnPreGenerateButtonClick()"
	}
	button
	{
		name 'zZbtnStartTutorialGame'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		enabled "getCampaignTutorialEnabled()"
		area 910 340 249 45
		pad 10 8 10 8
		text style "button"
		text "TUTORIAL_BUTTON"
		action 
		"
			Infinity_PopMenu();
			startEngine:OnTutorialButtonClick();
		"
	}
	button
	{
		name 'zZbtnStartImportGame'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		enabled "getCampaignImportEnabled()"
		area 910 340 249 45
		pad 10 8 10 8
		text style "button"
		text "IMPORT_GAME_BUTTON"
		action 
		"
			Infinity_PopMenu();
			startEngine:OnImportCharacterButtonClick();
		"
	}
	button
	{
		name 'zZbtnStartMultiplayer'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 395 249 45
		pad 10 8 10 8
		text style "button"
		text "MULTIPLAYER_BUTTON"
		action 
		"
			startEngine:OnMultiPlayerButtonClick()
		"
	}
	button
	{
		name 'zZbtnStartCredits'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 505 249 45
		pad 10 8 10 8
		text style "button"
		text "CREDITS_BUTTON"
		action 
		"
			Infinity_PushMenu('CREDITS')
		"
	}
	button
	{
		name 'zZbtnStartQuit'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 560 249 45
		pad 10 8 10 8
		text style "button"
		text "QUIT_GAME_BUTTON"
		enabled "not e:IsTouchUI()"
		action 
		"
			startEngine:OnQuitButtonClick()
		"
	}
	button
	{
		name 'zZbtnStartOptions'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 450 249 45
		pad 10 8 10 8
		text style "button"
		text "OPTIONS_BUTTON"
		action 
		"
			Infinity_TransitionMenu('START_OPTIONS')
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			lastStartMenu = 'START'
		"
	}
	button
	{
		name 'zZbtnStartShop'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 560 249 45
		pad 10 8 10 8
		text style "button"
		text "STRREF_GUI_LOWER_DLC_STORE"
		enabled "e:IsTouchUI()"
		action 
		"
			startEngine:OnDLCImageClick()
		"
	}
}

menu
{
	name 'START_MAIN'
	align center center
	ignoreEsc
	onOpen	"
		canContinue = startEngine:HasGameToContinue()
	"
	label
	{
		area 0 0 1024 768
		mosaic 'START'
	}
	label
	{
		area 112 26 786 202	
		bam 'TITLE'
		sequence 0
		align center center
		frame lua 'logoFrame'
	}
	label
	{
		area 338 192 352 456	
		bam 'BIGLOGO'
		align center center
		frame lua 'logoFrame'
	}
	button
	{
		bam 'GUIOSTCL'
		area 364 662 302 44
		pad 10 8 10 8
		text style "button"
		text "CONTINUE_BUTTON"
		clickable lua "canContinue"
		action "startEngine:OnContinueGame()"
	}
	button
	{
		bam 'STARTMBT'
		sequence 0
		area 112 294 262 74
		pad 10 8 10 8
		text style "button"
		text "SINGLEPLAYER_BUTTON"
		action 
		"
			startEngine:SetEngineState(1)
			Infinity_TransitionMenu('START_SP')
		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 3
		area 649 300 266 74
		pad 10 8 10 8
		text style "button"
		text "MULTIPLAYER_BUTTON"
		action 
		"
			startEngine:OnMultiPlayerButtonClick()
		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 4
		area 682 378 233 84
		pad 10 8 10 8
		text style "button"
		text lua "Infinity_FetchString(74269)"
		enabled "e:IsTouchUI()"
		action 
		"
			startEngine:OnDLCImageClick()
		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 2
		area 116 462 262 76
		pad 10 8 10 8
		text style "button"
		text "OPTIONS_BUTTON"
		action "
			Infinity_TransitionMenu('START_OPTIONS')
			optionsScreen:SetEngineState(1)
			startEngine:OnOptionsButtonClick()
			lastStartMenu = 'START_MAIN'
		"
	}
	button
	{
		area 649 462 260 76
		bam 'STARTMBT'
		sequence 5
		pad 10 8 10 8
		text style "button"
		text "BACK_BUTTON"
		action 
		"
			e:GetObjectGame():SetCampaign('')
			startEngine:SetEngineState(3)
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'START_SP'
	align center center
	ignoreEsc
	onOpen "startEngine:SetEngineState(0); Infinity_TransitionMenu('START')"
	label
	{
		area 0 0 1024 768
	}
}
`

function magePageInfo()
	if bookMode == 0 then -- Regular
		if characters[id].hasSorcererBook then
			return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].mageDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		else
			return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].mageDetails[currentSpellLevel].maxMemorized
		end
	elseif bookMode == 1 then -- Sequencer/Contingency
		return t("SPELLS_LABEL") .. " :" .. #bottomSpells .. "/" .. #bottomSpellsPlaceHolder

	end
	return ""
end

contingencyDescription = 0

function mageBookDescription()
	if mageBookEnabled == true then
		if bookMode == 0 then
			if characters[id].mageSpells[currentSpellLevel][currentBookSpell] then
				return Infinity_FetchString(characters[id].mageSpells[currentSpellLevel][currentBookSpell].description)
			else
				return t('SPELL_MEMORIZATION_HELP')
			end
		elseif bookMode == 1 then
			if contingencyDescription == 0 and currentBookSpell ~= 0 then
				return Infinity_FetchString(bookSpells[currentBookSpell].description)
			else
				lastCurrentBookSpell = 0
				if contingencyDescription == 0 then
					contingencyDescription = mageBookStrings[contingencyResRef].tip
				end
				return Infinity_FetchString(contingencyDescription)
			end
		end
	end
	return ""
end
function mageBookTitle()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].title)
	else
		return t('MAGE_SPELLS_TITLE')
	end
end
function mageBookAction()
	if bookMode == 1 and mageBookStrings[contingencyResRef] then
		return t(mageBookStrings[contingencyResRef].action)
	else
		return t("MAGE_BOOK_LABEL")
	end
end


function makeBlankTable(num)
	local out = {}
	for i = 1,num do
		table.insert(out, {})
	end
	return out
end

function contingencyComplete()
	if showContingency then
		return #bottomSpells == #bottomSpellsPlaceHolder and (currentContingencyCondition or 0) > 0 and (currentContingencyTarget or 0) > 0
	else
		return #bottomSpells == #bottomSpellsPlaceHolder
	end
end

function contingencyDoneButtonText()
	if contingencyComplete() then
		return t("DONE_BUTTON")
	else
		return t("CANCEL_BUTTON")
	end
end

function filterMemorizedMageSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 9)
	for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

function tableInsert(out, v)
	if mageScreen:SpellSwappedInContingency(v.resref) then
		for key,value in pairs(contingencySwapTable) do
			value.castableCount = v.castableCount
			table.insert(out, value)
		end
	else
		table.insert(out, v)
	end
end

function filterContingencyMageSpells()
	local out = {}
	if characters[id].mageSpells ~= nil and characters[id].mageSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].mageSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	if characters[id].priestSpells ~= nil and characters[id].priestSpells[currentSpellLevel] ~= nil then
		for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
			if v.castableCount > 0 and mageScreen:SpellAllowedForContingency(v.level, v.resref) then
				tableInsert(out, v)
			end
		end
	end
	return out
end

function findFirstDifferenceInSpellList(oldList, newList)
	local ret = -1
	local spellIndex = 1

	if oldList ~= nil and newList ~= nil then
		while oldList[spellIndex] ~= nil do
			if newList[spellIndex] == nil then
				ret = spellIndex
				break
			end
			if oldList[spellIndex].icon ~= newList[spellIndex].icon then
				ret = spellIndex
				break
			end
			spellIndex = spellIndex + 1
		end
		if oldList[spellIndex] == nil and newList[spellIndex] ~= nil then
			ret = spellIndex
		end
	end

	return ret
end

showMageMemorizationFlash = false

function refreshMageBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if bookMode == 0 then
		if characters[id].hasMageBook then
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			newBottomSpells = filterMemorizedMageSpells()
			
			if showMageMemorizationFlash == true then
				if toggleMageBook == 0 then
					createMageMemorizationSparkle(0,0,36,36,"memorizedListMage", findFirstDifferenceInSpellList(bottomSpells, newBottomSpells))
				else
					local abca = findFirstDifferenceInSpellList(bottomSpells, newBottomSpells)
					local abcb = math.floor(abca / 6)
					if (abca - abcb * 6) == 0 then abcb = abcb - 1 end
					local abcc = ((abca - abcb * 6) - 1) * (340 / 6)
					createMageMemorizationSparkle(abcc,0,36,36,"memorizedListMageNew", abcb + 1)
				end
				showMageMemorizationFlash = false
			end
			bottomSpells = newBottomSpells
			bottomSpellsPlaceHolder = makeBlankTable(characters[id].mageDetails[currentSpellLevel].maxMemorized) 
		else
			bookSpells = characters[id].mageSpells[currentSpellLevel]
			bottomSpells = {}
			bottomSpellsPlaceHolder = {}
		end
	elseif bookMode == 1 then
		bookSpells = filterContingencyMageSpells()
		bottomSpells = sequencerSpells
		bottomSpellsPlaceHolder = makeBlankTable(contingencyMaxSpells) 
		contingencyDescription = mageBookStrings[contingencyResRef].tip
	end
end

function setMageBookLevel(num)
	lastCurrentBookSpell = 0
	currentBookSpell = 0
	currentSpellLevel = num
	mageScreen:SetSpellLevel(num-1)
	refreshMageBook()
end

currentAnimationID = 1
updateCounterMemorizationSparkles = 1

function updateMemorizationSparkles()
	local sparkleNumber = 1
	updateCounterMemorizationSparkles = updateCounterMemorizationSparkles + 1
	if updateCounterMemorizationSparkles > 2 then
		updateCounterMemorizationSparkles = 1
		for sparkleNumber = 1, #(memorizationFlashes), 1 do
			if memorizationFlashes[sparkleNumber][1] == true then
				memorizationFlashes[sparkleNumber][2] = memorizationFlashes[sparkleNumber][2] + 1
				if memorizationFlashes[sparkleNumber][2] > 7 then
					memorizationFlashes[sparkleNumber][1] = false
					memorizationFlashes[sparkleNumber][2] = 0
					memorizationFlashes[sparkleNumber][3] = true
				end
			end
		end
	end
end

function destroyMemorizationSparkle(instanceId)
	local ret = memorizationFlashes[instanceId][3]
	memorizationFlashes[instanceId][3] = false
	return ret
end

function showMemorizationSparkle(instanceId)
	updateMemorizationSparkles()
	return memorizationFlashes[instanceId][1]
end

function createMageMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_mageMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function findMemorizedUncastable(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			if bottomSpells[index].castable == 0 then
				sparkle = index
				break
			end
		end
	end

	return sparkle
end

function unmemorizingMageSpell(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			sparkle = index
			if bottomSpells[index].castable == 0 then
				break
			end
		end
	end
	
	if toggleMageBook == 0 then
		createMageMemorizationSparkle(0, 0, 36, 36, 'memorizedListMage', sparkle)
	else
		abcb = math.floor(sparkle / 6)
		if (sparkle - abcb * 6) == 0 then abcb = abcb - 1 end
		abcc = ((sparkle - abcb * 6) - 1) * (340 / 6)
		createMageMemorizationSparkle(abcc, 0, 36, 36, 'memorizedListMageNew', abcb + 1)
	end
end

function unmemorizeMageSpell(slot)
	showMageMemorizationFlash = false
	mageScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end

memorizationFlashes = 
{
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false},
	{false, 0, false}
}
`
menu
{
	name 'MAGE'
	align center center
	modal lua "bookMode == 1"
	onopen "
		zzInCharacterRecord = 0
		showMageMemorizationFlash = false
		mgpage = nil
		setMageBookLevel(1)
		zZtoogleMageBookFunc()
		if bookMode == 1 then
			contingencyDescription = mageBookStrings[contingencyResRef].tip
		end
		currentContingencyCondition = 0
		currentContingencyTarget = 0
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
		"
	onclose "
	"
	button
	{
		enabled 	"CurrentlyInGame()"
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}
	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_mageMemorizationSparkle"
	}
	label
	{
		area 0 -2 944 768
		mosaic "FCGUIMGB"
	}
	label
	{
		enabled "toggleMageBook == 0"
		area 59 489 829 248
		mosaic "FCGUIMG0"
	}
	label
	{
		area		282 30 376 46
		text lua	"mageBookAction() .. ' - ^O' .. characters[id].name .. '^-'"
		text style	"title"
		text align	center center
	}
	label
	{
		area 		98 76 744 36
		text lua	"mageBookTitle()"
		text style	"title"
		text color	'O'
		text align	center center
	}
	button
	{
		area		202 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	0
		enabled		"maxMagePage > 0"
		action		"setMageBookLevel(1)"
	}
	button
	{
		area		262 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	1
		enabled		"maxMagePage > 1"
		action		"setMageBookLevel(2)"
	}
	button
	{
		area		322 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	2
		enabled		"maxMagePage > 2"
		action		"setMageBookLevel(3)"
	}
	button
	{
		area		382 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	3
		enabled		"maxMagePage > 3"
		action		"setMageBookLevel(4)"
	}
	button
	{
		area		442 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	4
		enabled		"maxMagePage > 4"
		action		"setMageBookLevel(5)"
	}
	button
	{
		area		502 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	5
		enabled		"maxMagePage > 5"
		action		"setMageBookLevel(6)"
	}
	button
	{
		area		562 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	6
		enabled		"maxMagePage > 6"
		action		"setMageBookLevel(7)"
	}
	button
	{
		area		622 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	7
		enabled		"maxMagePage > 7"
		action		"setMageBookLevel(8)"
	}
	button
	{
		area		682 124 54 54
		bam			FCGPRTC
		highlightgroup	mgpage
		sequence	8
		enabled		"maxMagePage > 8"
		action		"setMageBookLevel(9)"
	}
	list
	{
		column 
		{ 
			width 15
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZspellBookBkg(rowNumber, currentBookSpell, 'FCSBKBKG')"
				respectClipping
			}
			label
			{
				area	0 0 -1 -1
				bam	lua "bookSpells[rowNumber].icon"
				align	center center
			}
		}
		column 
		{ 
			width 85
			label
			{
				area	-51 0 -1 -1
				mosaic	lua "zZspellBookBkg(rowNumber, currentBookSpell, 'FCSBKBKG')"
				respectClipping
			}
			label
			{
				area		0 0 -1 -1
				text lua "Infinity_FetchString(bookSpells[rowNumber].name)"
				text style "normal_parchment"
				text align left center
			}
		}
		area 130 186 338 454
		name 		"bookListMage"
		rowheight	40
		table		"bookSpells"
		var		currentBookSpell
		hidehighlight
		scrollbar	'GUISCRC'
		sound		""
		action		
		"
			contingencyDescription = 0
			if cellNumber == 1 then
				if bookMode == 0 then
					if #bottomSpells < #bottomSpellsPlaceHolder then
						createMageMemorizationSparkle(0, 0, 40, 40, 'bookListMage', -1)
						Infinity_PlaySound('GAM_24')
						showMageMemorizationFlash = true
					end
					mageScreen:MemorizeSpell( bookSpells[currentBookSpell].level, bookSpells[currentBookSpell].index )
				elseif bookMode == 1 and #bottomSpells < #bottomSpellsPlaceHolder then
					mageScreen:SequenceSpell( bookSpells[currentBookSpell].resref, bookSpells[currentBookSpell].masterResref )
				end
			end
			if lastCurrentBookSpell == currentBookSpell and cellNumber == 2 then
				currentBookSpell = 0
				contingencyDescription = mageBookStrings[contingencyResRef].tip
			else
				lastCurrentBookSpell = currentBookSpell
			end
		"
		actionalt
		"
			if cellNumber == 1 and bookMode == 0 and characters[id].hasSorcererBook == false then
				popup2Button(%str63745%, 'REMOVE_BUTTON', function() mageScreen:EraseKnownSpell(bookSpells[currentBookSpell].resref) end)
			end
			if cellNumber == 2 and bookMode == 0 then
				popupDetails(16189, bookSpells[currentBookSpell].name, bookSpells[currentBookSpell].description, bookSpells[currentBookSpell].icon)
			end
		"
	}
	label
	{
		area 130 194 338 208
		rectangle 1
		rectangle opacity 200 
		enabled "showContingency"
	}
	label
	{
		area 136 198 326 30
		enabled "showContingency"
		text "CONDITION_NORMAL"
		text style "normal"
		text color	'$'
		text align	center center
		text shadow	1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZspellBookBkg(rowNumber, currentContingencyCondition, 'FCCONTNG')"
				respectClipping
			}
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyConditions[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}
		area 136 228 326 168
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyConditions"
		var		currentContingencyCondition
		hidehighlight
		scrollbar	'GUISCRC'
		action
		"
			contingencyDescription = contingencyConditions[currentContingencyCondition].desc
		"
	}
	label
	{
		area 492 194 340 208
		rectangle 1
		rectangle opacity 200 
		enabled "showContingency"
	}
	label
	{
		area 496 198 328 30
		enabled "showContingency"
		text "TARGET_NORMAL"
		text style "normal"
		text color	'$'
		text align	center center
		text shadow	1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZspellBookBkg(rowNumber, currentContingencyTarget, 'FCCONTNG')"
				respectClipping
			}
			label
			{
				area		10 0 -1 -1
				text lua "Infinity_FetchString( contingencyTargets[rowNumber].strref)"
				text style "normal"
				text align left center
			}
		}
		area 496 228 328 168
		enabled 	"showContingency"
		rowheight	40
		table		"contingencyTargets"
		var		currentContingencyTarget
		hidehighlight
		scrollbar	'GUISCRC'
		action
		"
			contingencyDescription = contingencyTargets[currentContingencyTarget].desc
		"
	}
	text
	{
		name		"bookDescription"
		area		492 410 340 230
		text lua 	"zZinventorySpellDesc(mageBookDescription())"
		text style	"normal_parchment"
		scrollbar	'GUISCRC'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		area 124 678 708 36
		enabled "(#bottomSpellsPlaceHolder ~= 0 or bookMode == 1) and toggleMageBook == 0"
		rowwidth	36
		table		"bottomSpellsPlaceHolder"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	lua "bottomSpells[rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[rowNumber].castable == 0"
			}
		}
		area 124 678 708 36
		name 		"memorizedListMage"
		enabled 	"#bottomSpells ~= 0 and toggleMageBook == 0"
		rowwidth	36
		table		"bottomSpells"
		sound		""
		var		currentBottomSpell
		action		
		"
			if bookMode == 0 then
				if findMemorizedUncastable(bottomSpells[currentBottomSpell].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizeMageSpell(currentBottomSpell) end, 'CANCEL_BUTTON')
				else
					unmemorizeMageSpell(currentBottomSpell)
				end
			elseif bookMode == 1 then
				mageScreen:UnSequenceSpell( bottomSpells[currentBottomSpell].resref, bottomSpells[currentBottomSpell].masterResref )
				table.remove(sequencerSpells, currentBottomSpell)
				bottomSpells = sequencerSpells
				currentBottomSpell = 0
			end
		"
		actionAlt
		"
			popupDetails(16189, bottomSpells[currentBottomSpell].name, bottomSpells[currentBottomSpell].description, bottomSpells[currentBottomSpell].icon)
		"
	}
	list
	{
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 5] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 4] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 3] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 2] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 1] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		name "zzMagePlaceholder"
		area 492 186 340 218
		enabled "toggleMageBook == 1"
		rowheight 46
		hidehighlight
		table		"zZmakeTable(zZgetTableSize(bottomSpellsPlaceHolder) / 6)"
	}
	list
	{
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 5] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 5].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 5].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 5)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 4] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 4].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 4].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 4)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 3] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 3].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 3].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 3)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 2] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 2].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 2].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 2)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 1] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 1].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 1].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 1)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber)"
			}
		}
		area 492 186 340 218
		name 		"memorizedListMageNew"
		enabled 	"#bottomSpells ~= 0 and toggleMageBook == 1"
		rowheight 46
		hidehighlight
		table		"zZmakeTable(zZgetTableSize(bottomSpells) / 6)"
		sound		""
		var		currentBottomSpell
		action
		"
			local idx = 6 * (currentBottomSpell - 1) + cellNumber
			if bookMode == 0 then
				if findMemorizedUncastable(bottomSpells[idx].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizeMageSpell(idx) end, 'CANCEL_BUTTON')
				else
					unmemorizeMageSpell(idx)
				end
			elseif bookMode == 1 then
				mageScreen:UnSequenceSpell( bottomSpells[idx].resref, bottomSpells[idx].masterResref )
				table.remove(sequencerSpells, idx)
				bottomSpells = sequencerSpells
				currentBottomSpell = 0
			end
		"
		actionAlt
		"
			local idx = 6 * (currentBottomSpell - 1) + cellNumber
			popupDetails(16189, bottomSpells[idx].name, bottomSpells[idx].description, bottomSpells[idx].icon)
		"
	}
	label
	{
		name "zZmagePageInfo"
		area 602 680 230 40
		text lua "zZcolorizeSpellPageInfo(magePageInfo())"
		text style "label"
		mosaic 'FCGBUTMT'
	}
	button
	{
		name "zzContingBtn"
		area 366 680 230 40
		enabled "bookMode == 0 and (#characters[id].contingencySpells > 0 or #characters[id].sequencerSpells > 0)"
		bam GUIBUTMT
		text "CONTINGENCY_BUTTON"
		text style "button"
		action "Infinity_PushMenu('MAGE_CONTINGENCY')"
		
	}
	button
	{
		name "zzMemorizeMageBtn"
		area 130 680 230 40
		bam GUIBUTMT
		enabled "bookMode == 1 or characters[id].hasMageBook"
		clickable lua "#bottomSpells < #bottomSpellsPlaceHolder and currentBookSpell ~= 0"
		text "MEMORIZE_BUTTON"
		text style "button"
		action 
		"
			if bookMode == 0 then
				createMageMemorizationSparkle(0, 0, 40, 40, 'bookListMage', -1)
				showMageMemorizationFlash = true
				Infinity_PlaySound('GAM_24')
				mageScreen:MemorizeSpell( characters[id].mageSpells[currentSpellLevel][currentBookSpell].level, characters[id].mageSpells[currentSpellLevel][currentBookSpell].index )
			elseif bookMode == 1 then
				mageScreen:SequenceSpell( bookSpells[currentBookSpell].resref, bookSpells[currentBookSpell].masterResref )
			end
		"
	}
	button
	{
		name "zzContingDoneBtn"
		area 366 680 230 40
		enabled "bookMode == 1"
		bam GUIBUTMT
		text lua "contingencyDoneButtonText()"
		text style "button"
		action 
		"
			if contingencyComplete() then
				mageScreen:DoneSequencingSpells()
			else
				mageScreen:CancelSequencingSpells()
			end
			e:SelectEngine(worldScreen)
		"
	}
	label
	{
		enabled "zzGlowEye == 1"
		area 	840 18 33 27
		bam		'fcclweye'
		sequence 0
	}
	button
	{
		area		834 12 53 44
		action
		"
			if toggleMageBook == 0 then
				toggleMageBook = 1
			else
				toggleMageBook = 0
			end
			zZtoogleMageBookFunc()
		"
		actionEnter "zzGlowEye = 1"
		actionExit  "zzGlowEye = 0"
	}
	label
	{
		area 0 -2 944 768
		fill        0 0 0 176
		enabled "mageBookEnabled == false"
	}
}
`
function refreshMageContingency()
	preparedSpells = {}
	for k, v in pairs(characters[id].contingencySpells) do
		table.insert(preparedSpells, v)
	end
	for k, v in pairs(characters[id].sequencerSpells) do
		table.insert(preparedSpells, v)
	end

end
`
menu
{
	name 'MAGE_CONTINGENCY'
	align center center
	modal
	onopen
	"
		refreshMageContingency()
		zzInCharacterRecord = 0
	"
	
	label
	{
		area 0 -2 944 768
		mosaic "FCCREDIT"
	}
	label
	{
		area 80 170 790 106
		text "SPELLS_PREPARED_LABEL"
		text style 	"title"
		text color	'D'
		text align center center
	}
	label
	{
		area		282 30 376 42
		text lua	"characters[id].name"
		text style	"title"
		text align	center center
	}
	label
	{
		area 98 80 744 48
		text "CONTINGENCY_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area 274 294 190 36
		text "CONDITION_LABEL"
		text style "label"
		text color	'$'
		text point	14
		text align left center
	}
	label
	{
		area 472 294 200 36
		text "TARGET_LABEL"
		text style "label"
		text color	'$'
		text point	14
		text align left center
	}
	label
	{
		area 678 294 196 36
		text "SPELL_LABEL"
		text style "label"
		text color	'$'
		text point	14
		text align left center
	}
	list
	{
		column
		{
			width 25
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				area	5 0 -1 -1
				text lua "t(mageBookStrings[preparedSpells[rowNumber].resref].title)"
				text style "label"
				text color	'F'
				align	left center
			}
		}
		column
		{
			width 25
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				area	0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].condition)"
				text style "label"
				text color	'A'
				align	left center
			}
		}
		column
		{
			width 25
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				area	0 0 -1 -1
				text lua "Infinity_FetchString(preparedSpells[rowNumber].target)"
				text style "label"
				text color	'A'
				align	left center
			}
		}
		column 
		{ 
			width 5
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				enabled "preparedSpells[rowNumber].spells[1] ~= nil and rowNumber == currentContingencySpell"
				area 0 3 50 50
				mosaic 'FCGTBTZZ'
			}
			label
			{
				enabled "preparedSpells[rowNumber].spells[1] ~= nil"
				area	0 0 -1 -1
				bam	lua "preparedSpells[rowNumber].spells[1].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				enabled "preparedSpells[rowNumber].spells[2] ~= nil and rowNumber == currentContingencySpell"
				area 0 3 50 50
				mosaic 'FCGTBTZZ'
			}
			label
			{
				enabled "preparedSpells[rowNumber].spells[2] ~= nil"
				area	0 0 -1 -1
				bam	lua "preparedSpells[rowNumber].spells[2].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				enabled "preparedSpells[rowNumber].spells[3] ~= nil and rowNumber == currentContingencySpell"
				area 0 3 50 50
				mosaic 'FCGTBTZZ'
			}
			label
			{
				enabled "preparedSpells[rowNumber].spells[3] ~= nil"
				area	0 0 -1 -1
				bam	lua "preparedSpells[rowNumber].spells[3].icon"
				align	center center
			}
		}
		column 
		{ 
			width 5
			label
			{
				area	-5 0 780 56
				mosaic lua "zZspellBookBkg(rowNumber, currentContingencySpell, 'FCCONTN2')"
				respectClipping
			}
			label
			{
				area	0 0 -1 -1
				bam	"GUISTMPC"
				sequence 2
				align	center center
				enabled "preparedSpells[rowNumber].dispellable"
			}
		}
		area 72 336 806 300
		rowheight	56
		table		"preparedSpells"
		var		"currentContingencySpell"
		hidehighlight
		action		"
            if (cellNumber == 7) and preparedSpells[currentContingencySpell].dispellable then
                if Infinity_GetOption(41, 9) == 1 then
                    popup2Button(%str32665%, 'YES_BUTTON', function() mageScreen:OnDispellButtonClick(currentContingencySpell) end, 'NO_BUTTON')
                else
                    mageScreen:OnDispellButtonClick(currentContingencySpell)
                end
            end
		"
		actionAlt
		"
			local ccr = cellNumber - 3
			if ccr >= 1 and ccr <= 3 then
				if preparedSpells[currentContingencySpell].spells[ccr] ~= nil then
					popupDetails(16189, preparedSpells[currentContingencySpell].spells[ccr].name, preparedSpells[currentContingencySpell].spells[ccr].description, preparedSpells[currentContingencySpell].spells[ccr].icon)
				end
			end
		"
	}
	button
	{
		area 366 680 230 40
		bam GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		action "Infinity_PopMenu('MAGE_CONTINGENCY')"
	}
}
menu
{
	name "POPUP_DETAILS"
	align center center
	modal
	label
	{
		area 0 -2 944 768
		mosaic "FCINVITM"
	}
	label
	{
		area 134 82 674 48
		text lua "Infinity_FetchString(PopupDetails.title)"
		text style "title"
		text color 'O'
	}
	label
	{
		area 248 160 448 48
		text lua "Infinity_FetchString(PopupDetails.name)"
		text style "label"
		text color '$'
	}
	text
	{
		area 112 270 724 338
		text lua "zZinventorySpellDesc(Infinity_FetchString(PopupDetails.description))"
		text style "normal_parchment"
		scrollbar 'GUISCRC'
	}
	label
	{
		area 134 161 52 52
		bam lua "PopupDetails.icon"
		align center center
		sequence 0
	}
	button
	{
		area 366 680 230 40
		bam GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		on escape
		action
		"
			Infinity_PopMenu('POPUP_DETAILS')
		"
	}
}
`
function priestPageInfo()
	if characters[id].hasShamanBook then
		return t("SPELLS_CAN_CAST_LABEL") .. ": " .. characters[id].priestDetails[currentSpellLevel].slotsRemaining .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	else
		return t("MEMORIZED_LABEL") .. ": " .. #bottomSpells .. "/" .. characters[id].priestDetails[currentSpellLevel].maxMemorized
	end
end

function priestBookDescription()
	if priestBookEnabled == true then
		if characters[id].priestSpells[currentSpellLevel][currentBookSpell] then
			return Infinity_FetchString(characters[id].priestSpells[currentSpellLevel][currentBookSpell].description)
		else
			return t('SPELL_MEMORIZATION_HELP')
		end
	end
	return ""
end

function filterMemorizedPriestSpells()
	local out = {}
	currentSpellLevel = math.min(currentSpellLevel, 7)
	for k,v in pairs(characters[id].priestSpells[currentSpellLevel]) do
		for i=v.memorizedCount, 1, -1 do
			local spell = deepcopy(v)
			if(i <= v.castableCount) then
				spell.castable = 1
			else
				spell.castable = 0
			end
			table.insert(out, spell)
		end
	end
	return out
end

showPriestMemorizationFlash = false

function refreshPriestBook()
	if currentSpellLevel == nil then
		currentSpellLevel = 1
	end
	if characters[id].hasClericBook then
		newBottomSpells = filterMemorizedPriestSpells()

		if showPriestMemorizationFlash == true then
			if togglePriestBook == 0 then
				createPriestMemorizationSparkle(0,0,36,36,"memorizedListPriest", findFirstDifferenceInSpellList(bottomSpells, newBottomSpells))
			else
				local abca = findFirstDifferenceInSpellList(bottomSpells, newBottomSpells)
				local abcb = math.floor(abca / 6)
				if (abca - abcb * 6) == 0 then abcb = abcb - 1 end
				local abcc = ((abca - abcb * 6) - 1) * (356 / 6)
				createPriestMemorizationSparkle(abcc,0,36,36,"memorizedListPriestNew", abcb + 1)
			end
			
			showPriestMemorizationFlash = false
		end
		bottomSpells = newBottomSpells
		bottomSpellsPlaceHolder = makeBlankTable(characters[id].priestDetails[currentSpellLevel].maxMemorized) 
	else
		bottomSpells = {}
		bottomSpellsPlaceHolder = {}
	end
end

function setPriestBookLevel(num)
	lastCurrentBookSpell = 0
	currentBookSpell = 0
	currentSpellLevel = num
	refreshPriestBook()
end

function createPriestMemorizationSparkle(x,y,w,h, fromList, listIndex)
	Infinity_InstanceAnimation("TEMPLATE_priestMemorizationSparkle","FLASHBR",x,y,w,h,fromList,listIndex)
	memorizationFlashes[currentAnimationID][1] = true
	memorizationFlashes[currentAnimationID][3] = false
	currentAnimationID = currentAnimationID + 1
	if currentAnimationID > #(memorizationFlashes) then
		currentAnimationID = 1
	end
end

function unmemorizingPriestSpell(resref)
	local index = 1
	local sparkle = -1
	for index = 1, #(bottomSpells), 1 do
		if bottomSpells[index].resref == resref then
			sparkle = index
			if bottomSpells[index].castable == 0 then
				break
			end
		end
	end
	if togglePriestBook == 0 then
		createPriestMemorizationSparkle(0, 0, 36, 36, 'memorizedListPriest', sparkle)
	else
		local abcb = math.floor(sparkle / 6)
		if (sparkle - abcb * 6) == 0 then abcb = abcb - 1 end
		local abcc = ((sparkle - abcb * 6) - 1) * (356 / 6)
		createPriestMemorizationSparkle(abcc, 0, 36, 36, 'memorizedListPriestNew', abcb + 1)
	end
end

function unmemorizePriestSpell(slot)
	showPriestMemorizationFlash = false
	priestScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end
`
menu
{
	name 'PRIEST'
	align center center
	onopen 
	"
		zzInCharacterRecord = 0
		zZtooglePriestBookFunc()
		showPriestMemorizationFlash = false
		pushSidebars()
		prpage = nil
		setPriestBookLevel(1)
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
	"
	onclose 
	"
		popSidebars()
	"
	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}
	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_priestMemorizationSparkle"
	}
	label
	{
		enabled "togglePriestBook == 1"
		area 0 -2 944 768
		mosaic "FCGUIPRB"
	}
	label
	{
		enabled "togglePriestBook == 0"
		area 0 -2 944 768
		mosaic "FCGUIPR0"
	}
	label
	{
		area		282 30 376 46
		text lua	"priestName" 
		text style	"title"
	}
	label
	{
		area 		98 76 744 36
		text		"PRIEST_SCROLL_TITLE"
		text style	"title"
		text color	'O'
	}
	button
	{
		area		202 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	0
		enabled		"maxPriestPage > 0"
		action		"setPriestBookLevel(1)"
	}
	button
	{
		area		282 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	1
		enabled		"maxPriestPage > 1"
		action		"setPriestBookLevel(2)"
	}
	button
	{
		area		362 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	2
		enabled		"maxPriestPage > 2"
		action		"setPriestBookLevel(3)"
	}
	button
	{
		area		442 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	3
		enabled		"maxPriestPage > 3"
		action		"setPriestBookLevel(4)"
	}
	button
	{
		area		522 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	4
		enabled		"maxPriestPage > 4"
		action		"setPriestBookLevel(5)"
	}
	button
	{
		area		602 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	5
		enabled		"maxPriestPage > 5"
		action		"setPriestBookLevel(6)"
	}
	button
	{
		area		682 124 54 54
		bam			FCGPRTC
		highlightgroup	prpage
		sequence	6
		enabled		"maxPriestPage > 6"
		action		"setPriestBookLevel(7)"
	}
	list
	{
		column 
		{ 
			width 15
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZspellBookBkg(rowNumber, currentBookSpell, 'FCSBKBKG')"
				respectClipping
			}
			label
			{
				area	0 0 -1 -1
				bam	lua "characters[id].priestSpells[currentSpellLevel][rowNumber].icon"
				align	center center
			}
		}
		column 
		{ 
			width 85
			label
			{
				area	-51 0 -1 -1
				mosaic	lua "zZspellBookBkg(rowNumber, currentBookSpell, 'FCSBKBKG')"
				respectClipping
			}
			label
			{
				area		0 0 -1 -1
				text lua "Infinity_FetchString( characters[id].priestSpells[currentSpellLevel][rowNumber].name)"
				text style "normal_parchment"
				text align left center
			}
		}
		area 110 202 347 435
		name "bookListPriest"
		rowheight	40
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		hidehighlight
		scrollbar	'GUISCRC'
		sound		""
		action		"
			if cellNumber == 1 then
				if #bottomSpells < #bottomSpellsPlaceHolder then
					createPriestMemorizationSparkle(0, 0, 40, 40, 'bookListPriest', -1)
					Infinity_PlaySound('GAM_24')
					showPriestMemorizationFlash = true
				end
				priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )
			end
			if lastCurrentBookSpell == currentBookSpell and cellNumber == 2 then
				currentBookSpell = 0
			else
				lastCurrentBookSpell = currentBookSpell
			end
		"
		actionalt
		"
			if cellNumber == 2 then
				popupDetails(16189, characters[id].priestSpells[currentSpellLevel][currentBookSpell].name, characters[id].priestSpells[currentSpellLevel][currentBookSpell].description, characters[id].priestSpells[currentSpellLevel][currentBookSpell].icon)
			end
		"
	}
	text
	{
		name		"priestBookDrsc"
		area		468 416 356 221
		text lua 	"zZinventorySpellDesc(priestBookDescription())"
		text style	"normal_parchment"
		scrollbar	'GUISCRC'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		area 124 678 708 36
		enabled		"togglePriestBook == 0"
		rowwidth	36
		table		"bottomSpellsPlaceHolder"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	lua "bottomSpells[rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[rowNumber].castable == 0"
			}
		}
		area 124 678 702 36
		name "memorizedListPriest"
		enabled 	"#bottomSpells ~= 0 and togglePriestBook == 0"
		rowwidth	36
		table		"bottomSpells"
		sound		""
		var		currentBottomSpell
		action		
		"
			if bottomSpells[currentBottomSpell] then
				if findMemorizedUncastable(bottomSpells[currentBottomSpell].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizePriestSpell(currentBottomSpell) end, 'CANCEL_BUTTON')
				else
					unmemorizePriestSpell(currentBottomSpell)
				end
			end
		"
		actionAlt
		"
			popupDetails(16189, bottomSpells[currentBottomSpell].name, bottomSpells[currentBottomSpell].description, bottomSpells[currentBottomSpell].icon)
		"
	}
	list
	{
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 5] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 4] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 3] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 2] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber - 1] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpellsPlaceHolder[6 * rowNumber] ~= nil"
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}
		name		"zzPriestPlaceholder"
		area 468 202 356 210
		enabled		"togglePriestBook == 1"
		rowheight	46
		hidehighlight
		table		"zZmakeTable(zZgetTableSize(bottomSpellsPlaceHolder) / 6)"
	}
	list
	{
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 5] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 5].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 5].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 5)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 4] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 4].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 4].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 4)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 3] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 3].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 3].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 3)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 2] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 2].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 2].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 2)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber - 1] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber - 1].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber - 1].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber - 1)"
			}
		}
		column 
		{ 
			width 16
			label
			{
				enabled "bottomSpells[6 * rowNumber] ~= nil"
				area	0 0 -1 -1
				bam	lua "bottomSpells[6 * rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[6 * rowNumber].castable == 0"
				opacity lua "zZgetSpellOpacity(6 * rowNumber)"
			}
		}
		area 468 202 356 210
		name "memorizedListPriestNew"
		enabled 	"#bottomSpells ~= 0 and togglePriestBook == 1"
		rowheight	46
		table		"zZmakeTable(zZgetTableSize(bottomSpells) / 6)"
		sound		""
		hidehighlight
		var		currentBottomSpell
		action		
		"
			local idx = 6 * (currentBottomSpell - 1) + cellNumber
			if bottomSpells[idx] then
				if findMemorizedUncastable(bottomSpells[idx].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizePriestSpell(idx) end, 'CANCEL_BUTTON')
				else
					unmemorizePriestSpell(idx)
				end
			end
		"
		actionAlt
		"
			local idx = 6 * (currentBottomSpell - 1) + cellNumber
			popupDetails(16189, bottomSpells[idx].name, bottomSpells[idx].description, bottomSpells[idx].icon)
		"
	}
	label
	{
		name "zzPriestPageInfo"
		area 602 668 230 40
		text lua "zZcolorizeSpellPageInfo(priestPageInfo())"
		text style "label"
		mosaic 'FCGBUTMT'
	}
	button
	{
		name	"zzMemorizePriestBtn"
		area 130 668 230 40
		bam GUIBUTMT
		enabled "characters[id].hasClericBook"
		clickable lua "#bottomSpells < characters[id].priestDetails[currentSpellLevel].maxMemorized and currentBookSpell ~= 0"
		text "MEMORIZE_LABEL"
		text style "button"
		action 
		"
			createPriestMemorizationSparkle(0, 0, 40, 40, 'bookListPriest', -1)
			Infinity_PlaySound('GAM_24')
			showPriestMemorizationFlash = true
			priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )

		"
	}
	label
	{
		enabled "zzGlowEye == 1"
		area 	840 18 33 27
		bam		'fcclweye'
		sequence 0
	}
	button
	{
		area		834 12 53 44
		action
		"
			if togglePriestBook == 0 then
				togglePriestBook = 1
			else
				togglePriestBook = 0
			end
			zZtooglePriestBookFunc()
		"
		actionEnter "zzGlowEye = 1"
		actionExit  "zzGlowEye = 0"
	}
	label
	{
		area 0 -2 944 768
		fill        0 0 0 176
		enabled "priestBookEnabled == false"
	}
}
`
	versionString = ""
	function canClickSaveLoad()
		return game:IsClient() == false
	end
`
menu
{
	name "ESC_MENU"
	ignoreesc
	align center center
	onOpen "
		%strEscMenu%
		 --tuta
		versionString = CBaldurChitin:GetVersionString()
		pushSidebars()
	"
	onClose "popSidebars()"
	label
	{
		area 0 0 512 651
		mosaic 'FSSTRTOP'
	}
	label
	{
		area 58 6 384 44
		text "OPTIONS_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		%strEscMenuTitle%
		bam 'TITLE'
		sequence 0
		frame lua "startCampaignData[selectedCampaign].title"
		scaleToClip
	}
	label
	{
		area 86 135 334 25
		text lua "stringsAll.zzGameVer .. versionString"
		text style "normal"
		text align center center
	}
	button
	{
		area 132 180 249 45
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		pad 10 8 10 8
		text style "button"
		text 		"GAMEPLAY_BUTTON"
		text style	"button"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )
		"
	}
	button
	{
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 132 235 249 45
		pad 10 8 10 8
		text style "button"
		text 		"GRAPHICS_BUTTON"
		text style	"button"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GRAPHICS' )
		"
	}
	button
	{
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 132 290 249 45
		pad 10 8 10 8
		text style "button"
		text 		"SOUND_BUTTON"
		text style	"button"
		action
		"
			Infinity_PushMenu( 'OPTIONS_SOUND' )
		"
	}
	button
	{
		area 132 372 249 45
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		text "RETURN_GAME_BUTTON"
		text style "button"
		action
		"
			e:SelectEngine( worldScreen );
		"
	}
	button
	{
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 132 530 249 45
		pad 10 8 10 8
		text style "button"
		text "LOAD_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			popup2Button(19531, 'LOAD_BUTTON', function() optionsScreen:LoadGame() end)
		"
	}
	button
	{
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 132 427 249 45
		pad 10 8 10 8
		text style "button"
		text "QUIT_GAME_BUTTON"
		action
		"
			if e:IsTouchUI() then
				popup3Button(16456,
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			else
				popup4Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'QUIT_BUTTON', function() Infinity_ShutdownGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			end
		"
	}
	button
	{
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 132 583 249 45
		pad 10 8 10 8
		text style "button"
		text "SAVE_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			optionsScreen:SaveGame(0)
		"
	}
}

`
OptionsButtons = 
{
	{text = "CREDITS_BUTTON", menu = "CREDITS", sequence = 0},
	{text = "GAMEPLAY_BUTTON", menu = "OPTIONS_GAMEPLAY", sequence = 0}, 
	{text = "GRAPHICS_BUTTON", menu = "OPTIONS_GRAPHICS", sequence = 1}, 
	{text = "LANGUAGE_BUTTON", menu = "OPTIONS_LANGUAGE", sequence = 0}, 
	{text = "MOVIES_BUTTON", menu = "", sequence = 2}, 
	{text = "SOUND_BUTTON", menu = "OPTIONS_SOUND", sequence = 1}, 
}
`
menu
{
	name 'START_OPTIONS'
	align left top
	ignoreEsc
	label
	{
		name 'zZstartAreaBkgOpt'
		area 0 0 1280 960
	}
	label
	{
		area 0 0 0 0
		text lua "zZupdateGraphicOptFunc()"
	}
	label
	{
		name 'zzStrSideOpt'
		area 840 -600 390 2160
		mosaic	'FCSTRSDE'
	}
	label
	{
		name	'zzStartBottomOpt'
		area	-1280 770 3840 190
		mosaic 'FCSTRTBT'
	}
	label
	{
		name	'zzStartTopOpt'
		area	-1280 0 3840 50
		mosaic 'FCSTRTTP'
	}
	label
	{
		name 'zZstartTitleOpt'
		area 132 100 605 108
		bam 'TITLE'
		sequence 0
		align center center
		frame lua "startCampaignData[selectedCampaign].title"
	}
	label
	{
		name 'zZstartBigLogoOpt'
		area 262 210 %strBigLogoSize%
		bam lua "zzBigLogo"
		sequence 0
		frame lua "zzBigLogoFrame"
		align center center
	}
	label
	{
		name 'zZstartDndLogoOpt'
		area 300 705 270 30
		bam "FCDNDLGO"
		scaleToClip
	}
	label
	{
		name 'zZlblStartVersionOpt'
		area 910 705 249 45
		text lua "stringsAll.zzGameVer .. CBaldurChitin:GetVersionString()"
		text style	"label"
		text point	12
		align center center
	}

	button
	{
		name 'zZstartSoundOpt'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 340 249 45
		pad 10 8 10 8
		text style "button"
		text "SOUND_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_SOUND' )"
	}
	button
	{
		name 'zZstartGraphicOpt'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 285 249 45
		pad 10 8 10 8
		text style "button"
		text "GRAPHICS_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_GRAPHICS' )"
	}
	button
	{
		name 'zZstartLangOpt'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 395 249 45
		pad 10 8 10 8
		text style "button"
		text "LANGUAGE_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_LANGUAGE' )"
	}
	button
	{
		name 'zZstartMoviesOpt'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 450 249 45
		pad 10 8 10 8
		text style "button"
		text "MOVIES_BUTTON"
		action "e:SelectEngine(moviesScreen)"
	}
	button
	{
		name 'zZstartGameplayOpt'
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		area 910 230 249 45
		pad 10 8 10 8
		text style "button"
		text "GAMEPLAY_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )"
	}
	button
	{
		name 'zZstartBackOpt'
		area 910 505 249 45
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		pad 10 8 10 8
		text style "button"
		text "BACK_BUTTON"
		action
		"
			Infinity_PopMenu()
			e:SelectEngine(startEngine)
		"
	}
	button
	{
		enabled "zZNPCallEnabled == 1"
		name 'zZshowNPCList'
		on escape
		area 910 580 249 45
		bam 'STARTBUT'
		sequence lua "startCampaignData[selectedCampaign].button"
		pad 10 8 10 8
		text style "button"
		text "FC_NPCALL_BUTTON"
		action
		"
			Infinity_PushMenu('FC_NPC_LIST')
		"
	}
}
`
mapnoteSettings = {}
showNotes = 1
function showNote(instanceId)
	if(mapScreen:IsNoteVisible(mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
	and mapnoteSettings[instanceId].screenCoord.x >= 0
	and mapnoteSettings[instanceId].screenCoord.y >= 0) then
		return showNotes
	else
		return false
	end
end
notesAlpha = 0
function getAndIncrementNotesAlpha()
	if(notesAlpha < .99) then
		notesAlpha = notesAlpha + 0.075
	end
	if(notesAlpha > 1) then
		notesAlpha = 1
	end
	return notesAlpha
end
`
menu
{
	name 'AREA_MAP_TITLE'
	align center top
	opacity lua "notesAlpha"
	ignoreEsc
	onOpen
	"
		zzInCharacterRecord = 0
		zZmapTitle = 0
	"
	label
	{
		name "AREA_MAP_BACKGROUND"
		area 0 10 320 30
		rectangle 0
		rectangle opacity 80
	}
	label
	{
		area 0 10 320 30
		name "AREA_MAP_TITLE"
		text lua "Infinity_FetchString(%str103241%)"
		text style title
		text color	'$'
		actionEnter "zZmapTitle = 1"
	}
	label
	{
		enabled		"zZmapTitle == 1"
		area		-10 40 340 80
		actionEnter "zZmapTitle = 1"
		actionExit "zZmapTitle = 0"
	}
	button
	{
		enabled		"zZmapTitle == 1"
		area		0 47 66 46
		bam			"GUILS10"
		sequence	0
		tooltip		lua	"Infinity_FetchString(%str16313%)"
		action		"e:GetActiveEngine():OnLeftPanelButtonClick(0)"
	}
	label
	{
		area 0 8 0 0
		action "mapScreen:ToggleDisplayExploredMap()"
		text "WORLDMAP_HIGHLIGHT_LABEL"
		text style "label"
		text align left center
	}
	button
	{
		enabled		"zZmapTitle == 1"
		area		84 47 66 46
		tooltip		lua "t('WORLDMAP_HIGHLIGHT_LABEL')"
		bam		"GUILS10"
		sequence 	11
		frame		lua "mapScreen:DisplayExploredMap() and 2 or 0"
		action "mapScreen:ToggleDisplayExploredMap()"
	}

	label
	{
		area 10 8 0 0
		toggle showNotes
		text "WORLD_MAP_NOTES_LABEL"
		text style "label"
		text align left center
	}
	button
	{
		enabled		"zZmapTitle == 1"
		area 168 47 66 46
		tooltip		lua "t('WORLD_MAP_NOTES_LABEL')"
		bam		"GUILS10"
		sequence	2
		frame		lua "showNotes == 1 and 2 or 0"
		action		"zZshowMapNotes()"
	}
	button
	{
		enabled		"zZmapTitle == 1"
		area 254 47 66 44
		tooltip		lua "zZworldMapTitle()"
		bam		"GUILS10"
		sequence 1
		text style "button"
		action
		"
			worldMapScreen:StartWorldMap(0)
			e:SelectEngine(worldMapScreen)
		"
	}
}
`
	areaMapHover = -1
	function showAreaMapNoteTooltip(id)
		if id == areaMapHover then
			return true
		else
			return false
		end
	end
`
menu
{
	name 'AREA_MAP'
	align left top
	ignoreesc
	onOpen
	"
		zzInCharacterRecord = 0
		pushSidebars()
		Infinity_PushMenu('AREA_MAP_TITLE')
		notesAlpha = 0
	"
	onClose "popSidebars(); Infinity_PopMenu('AREA_MAP_TITLE');"
	opacity lua "getAndIncrementNotesAlpha()"
	template
	{
		button
		{
			enabled "showNote(instanceId)"
			area 0 0 45 42
			bam "FLAG1"
			sequence lua "mapnoteSettings[instanceId].sequence"
			tooltip force lua "showAreaMapNoteTooltip(instanceId)"
			tooltip force top
			tooltip lua "Infinity_FetchString(mapnoteSettings[instanceId].text)"
			tooltip position 3
			actionAlt
			"
				mapScreen:OnUserNoteClick(instanceId, mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
				Infinity_PushMenu('NOTE_ADD',0,0)
			"
			actionEnter
			"
				areaMapHover = instanceId
			"
			actionExit
			"
				areaMapHover = -1
			"
		}
		name "TEMPLATE_mapnote"
	}
}
`
	colorChoice = nil
`
menu
{
	name 'NOTE_ADD'
	align center center
	onOpen 
	"
		if colorChoice == nil then
			colorChoice = Infinity_FindUIItemByName('BUTTON_mapNoteColor_' .. mapScreen:GetColorChoice())
		end
	"
	onClose
	"
		colorChoice = nil
	"
	modal
	label
	{
		area 0 0 900 234
		mosaic GUIERR7Z
	}
	label
	{
		area	 32 24 836 50
		rectangle	0
	}
	edit
	{
		name 		"mapNoteEditArea"
		area		40 32 818 34
		var			mapNoteEdit
		scrollbar	'GUISCRC'
		text style	"edit"
		text align	center center
	}
	button
	{
		area 350 168 200 40
		bam GUIBUTNT
		text style "button"
		text "DONE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDoneButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 590 168 200 40
		bam GUIBUTNT
		text style "button"
		text "CANCEL_BUTTON"
		action
		"
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	button
	{
		area 110 168 200 40
		bam GUIBUTNT
		text style "button"
		text "DELETE_BUTTON"
		action
		"
			mapScreen:OnUserNoteDeleteButtonClick()
			Infinity_PopMenu('NOTE_ADD',0,0)
		"
	}
	
	button
	{
		name "BUTTON_mapNoteColor_0"
		area 236 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 0
		action
		"
			mapScreen:OnColorChoice(0)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_1"
		area 312 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 1
		action
		"
			mapScreen:OnColorChoice(1)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_2"
		area 388 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 2
		action
		"
			mapScreen:OnColorChoice(2)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_3"
		area 466 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 3
		action
		"
			mapScreen:OnColorChoice(3)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_4"
		area 542 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 4
		action
		"
			mapScreen:OnColorChoice(4)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_5"
		area 620 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 5
		action
		"
			mapScreen:OnColorChoice(5)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_6"
		area 698 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 6
		action
		"
			mapScreen:OnColorChoice(6)
		"
	}
	button
	{
		name "BUTTON_mapNoteColor_7"
		area 162 85 45 42
		bam "FLAG1"
		highlightgroup colorChoice
		sequence 7
		action
		"
			mapScreen:OnColorChoice(7)
		"
	}
}
menu
{
	name "WORLD_MAP"
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
		zzCenterCurrLocTooltip = 0
		if not worldMapScreen:IsTravelButtonVisible() then
			CheckPauseWMapBegin()
		end
	"
	onClose
	"
		if not worldMapScreen:IsTravelButtonVisible() then
			CheckPauseWMapEnd()
		end
	"
	label
	{
		area 0 0 1024 768
		mosaic FCGMAPWB
	}
	label
	{
		area 286 4 454 44
		text "WORLD_MAP_TITLE"
		text style "title"
		text color	'O'
	}
	button
	{
		area 102 22 66 58
		bam "MAPBUT"
		action
		"
			worldMapScreen:OnCancelButtonClick()
		"
	}
	map
	{
		area 13 110 1000 649
		worldmap
		action
		"
			worldMapScreen:OnMapMouseDown(eventXCoord,eventYCoord)
			if zZoneClickTravel ~= 0 then
				worldMapScreen:TravelToSelected()
			end
		"
		actionDbl
		"
			worldMapScreen:TravelToSelected()
		"
		actionDrag
		"
			worldMapScreen:OnMapMouseMove(eventXCoord,eventYCoord)
		"
		actionAlt
		"
			if zZwMapExitRClick ~= 0 then
				worldMapScreen:OnCancelButtonClick()
			end
		"
	}
	label
	{
		enabled		"zzCenterCurrLocTooltip == 1"
		area		770 80 205 45
		rectangle	5
	}
	label
	{
		enabled		"zzCenterCurrLocTooltip == 1"
		area		785 85 175 35
		text lua	"stringsAll.zzCurrLoc"
		text style	'normal_parchment'
		text align	center center
	}
	button
	{
		area 836 22 70 58
		action "worldMapScreen:CenterMarker()"
		actionEnter
		"
			if zzCenterCurrLocTooltip == 0 then zzCenterCurrLocTooltip = 1 end
		"
		actionExit "zzCenterCurrLocTooltip = 2"
	}
	button
	{
		area 802 710 205 44
		enabled "worldMapScreen:IsTravelButtonVisible() and zZoneClickTravel == 0"
		bam GUIBUTNT
		text "TRAVEL_BUTTON"
		text style "button"
		clickable lua "worldMapScreen:IsTravelButtonClickable()"
		action "
			worldMapScreen:TravelToSelected()
		"	
	}
}
`

chapterBackground = ""

text_CHAPTERSCROLL = ""
text_CHAPTERSCROLL_timeStart = 0
text_CHAPTERSCROLL_auto = 1
function UpdateChapterScroll(top, height, contentHeight)
	if(text_CHAPTERSCROLL_auto == 0) then
		--defer to default scrolling
		return nil
	end
	local dT = Infinity_GetClockTicks() - text_CHAPTERSCROLL_timeStart
	local newTop = (dT * -0.006) + height
	if(newTop + contentHeight + height < height) then
		return top
	end
	return newTop
end
function setChapterBackground(id) --SoD_EET chapters screen
	chapterBackground = chapterBackgrounds[id]
end
`
menu
{
	name 'CHAPTER'
	align center center
	ignoreEsc
	
	label
	{
		area 0 0 1024 768
		mosaic lua "chapterBackground" --SoD_EET
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 96 470 832 224
		text lua "zZscriptDescColorize(text_CHAPTERSCROLL)"
		text style normal
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 524 706 230 40
		bam GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 286 706 230 40
		bam GUIBUTMT
		text "REPLAY_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
`
epilogueImage = "GUIOSTUR"
`
menu
{
	name 'EPILOGUE' --SoD_EET
	align center center
	ignoreEsc
	onOpen
	"
		Infinity_PlayMovie('fcepilog','fcepilog')
	"
	label
	{
		area 0 0 1024 768
		mosaic "FCNPCCHP"
	}
	movie
	{
		name "fcepilog"
		area 164 59 71 60
		loop
	}
	label
	{
		area 788 64 71 50
		bam 'FCAR6200'
		greyscale lua "zZgetEpilogueThrone()"
	}
	text
	{
		area 286 32 450 36
		text style "title"
		text lua "%strMAIN_GAME_LABEL%"
		text color	'O'
	}
	text
	{
		area 286 81 450 44
		text style "title"
		text "%strEXPANSION_BG2_LABEL%"
		text color	'$'
	}
	label
	{
		area 120 228 224 344
		rectangle 0
	}
	label
	{
		area 127 235 210 330
		bitmap lua "epilogueImage"
	}
	label
	{
		area 120 146 224 74
		text lua "zZgetEpilogueName(epilogueImage)"
		text style 'title'
		text color	'$'
		text shadow	1
	}
	text
	{
		name "text_CHAPTERSCROLL_item"
		area 422 150 532 498
		text lua "zZscriptDescColorize(text_CHAPTERSCROLL)"
		text style normal
		scrollbar 'GUISCRC'
		scrollbar func 'UpdateChapterScroll'
		scrollbar hide lua 'text_CHAPTERSCROLL_auto == 1'
		action
		"
			text_CHAPTERSCROLL_auto = 0
		"
	}
	button
	{
		area 520 680 234 40
		bam GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsDoneButtonClickable()"
		action
		"
			chapterScreen:OnDoneButtonClick()
		"
	}
	button
	{
		area 274 680 234 40
		bam GUIBUTMT
		text "REPLAY_BUTTON"
		text style "button"
		clickable lua "chapterScreen:IsReplayButtonClickable()"
		action
		"
			chapterScreen:OnReplayButtonClick()
		"
	}
}
menu
{
	name 'CHAPTER_WAITING_FOR_PROVIDER'
	modal
	align center center

	label
	{
		area 0 0 465 500
		mosaic FCGUIERR
	}
	label
	{
		area 124 134 224 112
		text "WAITING_FOR_OTHER_PLAYERS"
		text style	"label"
	}
}
`
store = {}
storeGroupItemsVar = 0
storeItemsVar = 0
function getStoreSlotHighlight(highlight)
	if(highlight == 0) then 
		return 0
	else
		return 2 
	end
end
function storeSplitStack(count)
	storeScreen:SelectStoreItem(storeItemsVar-1, true);
	storeScreen:SetStoreItemCount(storeItemsVar-1, count);
end
function groupSplitStack(count)
	storeScreen:SelectGroupItem(storeGroupItemsVar-1, true);
	storeScreen:SetGroupItemCount(storeGroupItemsVar-1, count);
end
function checkContainerText(normalStr, containerStr)
	if(storeScreen:IsContainer()) then
		return t(containerStr)
	else
		return t(normalStr)
	end
end
function getStoreItemCount(row)
	local count = store.storeItems[rowNumber].item.count
	if(count ~= 0xFFFF)  then 
		return count
	else
		-- maxword, infinite count.
		return nil
	end
end
`
menu
{
	name 'STORE_BUYSELL'
	align center center
	offset 0 -72
	onOpen
	"
		zzInCharacterRecord = 0
		
		storeScreen:UpdateBuySellPanel()
		zZstoreSearchString = ''
		zZgroupSearchString = ''
		zzItemType = 'All'
		zZshowItemTypeFilter = 0
		zzGroupItemType = 'All'
		zZshowGroupItemTypeFilter = 0
		if zZshowCharEquipment ~= 0 then zZshowCharEquipment = 0 end
	"
	onClose
	"
		zZstoreSearchString = ''
		zZgroupSearchString = ''
		zzItemType = 'All'
		zzGroupItemType = 'All'
		zZshowGroupItemTypeFilter = 0
		zZshowCharEquipment = 0
	"
	ignoreEsc
	label
	{
		area   0 -2 944 625
		mosaic fcstorea
	}
	label
	{
		area   59 142 836 472
		mosaic fcstora0
	}
	label
	{
		area 246 28 454 44
		text lua "checkContainerText('BUY_SELL_TITLE','CONTAINER_TITLE')"
		text style "title"
		text color	'O'
	}
	label
	{
		area 266 80 410 42
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text color	'$'
		text point 16
	}
	label
	{
		area 732 144 108 38
		enabled "not storeScreen:IsContainer()"
		text lua "game:GetPartyGold()"
		text style "gold"
		align right center
	}
	label
	{
		area 196 522 146 36
		enabled "not storeScreen:IsContainer()"
		text "COST_LABEL"
		text style "label"
		align right center
		text color	'O'
	}
	label
	{
		area 350 522 108 36
		enabled "not storeScreen:IsContainer()"
		text lua "storeScreen:GetStoreCost()"
		text style "normal"
		align right center
		text color	'$'
	}
	label
	{
		area 604 522 146 36
		enabled "not storeScreen:IsContainer()"
		text "PRICE_LABEL"
		text style "label"
		align right center
		text color	'O'
	}
	label
	{
		area 760 522 108 36
		enabled "not storeScreen:IsContainer()"
		text lua "storeScreen:GetGroupCost()"
		text style "normal"
		align right center
		text color	'$'
	}
	label
	{
		area 96 144 349 38
		text lua "checkContainerText('STORE_LABEL',Infinity_FetchString(storeScreen:GetStoreName()))"
		text style "label"
		align left center
		text color	'O'
	}
	edit
	{
		area 78 488 160 25
		var "zZstoreSearchString"
		placeholder "..."
		text style "edit"
		maxlines 1
		align left center
		fill 111 111 111 64
	}
	button
	{
		area 242 490 26 21
		bam FCBTNIKS
		align center center
		clickable lua "zZstoreSearchString ~= ''"
		scaleToClip
		action "zZstoreSearchString = ''"
	}
	button
	{
		area 278 490 150 21
		text lua "' ' .. zZgetItemTypeLabel(zzItemType)"
		text style "label"
		align left center
		fill 111 111 111 64
		action
		"
			zZgenerateAvailableItenType(store.storeItems)
			zZshowItemTypeFilter = 1
		"
	}
	edit
	{
		area 486 488 160 25
		enabled "zZshowCharEquipment ~= 1"
		var "zZgroupSearchString"
		placeholder "..."
		text style "edit"
		maxlines 1
		align left center
		fill 111 111 111 64
	}
	button
	{
		area 650 490 26 21
		enabled "zZshowCharEquipment ~= 1"
		bam FCBTNIKS
		align center center
		clickable lua "zZgroupSearchString ~= ''"
		scaleToClip
		action "zZgroupSearchString = ''"
	}
	button
	{
		area 682 490 150 21
		enabled "zZshowCharEquipment ~= 1"
		text lua "' ' .. zZgetItemTypeLabel(zzGroupItemType)"
		text style "label"
		align left center
		fill 111 111 111 64
		action
		"
			zZgenerateAvailableItenType(store.groupItems)
			zZshowGroupItemTypeFilter = 1
		"
	}
	button
	{
		enabled "storeScreen:IsContainer()"
		area 434 488 26 26
		bam ROUNDBUT
		tooltip lua "stringsAll.zzContSelAll"
		scaleToClip
		action
		"
			local items, doSelect = zzBuySellSelectAll(store.storeItems)
			zzItemType = 'All'
			zZstoreSearchString = ''
			for _, k in ipairs(items) do
				storeScreen:SelectStoreItem(k, doSelect)
				if doSelect then
					local maxCount = store.storeItems[k + 1].maxCount
					if maxCount > 1 then
						storeScreen:SetStoreItemCount(k, maxCount)
					end
					if not storeScreen:IsBuyItemButtonClickable() then
						storeScreen:SelectStoreItem(k, false)
						break
					end
				end
			end
		"
	}
	button
	{
		area 838 488 26 26
		enabled "zZshowCharEquipment ~= 1"
		bam ROUNDBUT
		tooltip lua "stringsAll.zzContSelAll"
		scaleToClip
		action
		"
			local items, doSelect = zzBuySellSelectAll(store.groupItems)
			zzGroupItemType = 'All'
			zZgroupSearchString = ''
			for _, k in ipairs(items) do
				storeScreen:SelectGroupItem(k, doSelect)
				if doSelect then
					local v = store.groupItems[k + 1]
					local count = v.item.count
					local stock = v.numInStock or 0
					if count > 1 then
						storeScreen:SetGroupItemCount(k, count)
					elseif stock > 1 then
						storeScreen:SetGroupItemCount(k, stock)
					end
					if not storeScreen:IsSellItemButtonClickable() then
						storeScreen:SelectGroupItem(k, false)
						break
					end
				end
			end
		"
	}
	button
	{
		enabled "not storeScreen:IsContainer()"
		area 434 488 26 26
		bam ROUNDBUT
		tooltip lua "stringsAll.zzContDeselect"
		scaleToClip
		action
		"
			for i = 1 , #store.storeItems, 1 do
				storeScreen:SelectStoreItem(i - 1, false)
			end
		"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 2 0 64 60
				bam STONSLOT
				frame lua "getStoreSlotHighlight(zZstoreTbl(store.storeItems)[rowNumber][1].highlight)"
				icon lua "zZstoreTbl(store.storeItems)[rowNumber][1].item.icon"
				tint lua "zZstoreTbl(store.storeItems)[rowNumber][1].item.tint"
				usages lua "zZstoreTbl(store.storeItems)[rowNumber][1].amountSelected" --how many selected
				count lua "zZstoreTbl(store.storeItems)[rowNumber][1].item.stackSize" --How many to a stack
				align center center
			}
			label
			{
				enabled "zZchecItemInCreInventory(zZstoreTbl(store.storeItems)[rowNumber][1].item.res, store.groupItems)"
				area 8 5 14 14
				glow lua "1"
				bam FCFLAGIT
				sequence 0
			}
			label
			{
				enabled "zZshowCharEquipment == 1 and zZchecItemInCreEquip(zZstoreTbl(store.storeItems)[rowNumber][1].item.res, zZsCharEquipment)"
				area 8 5 14 14
				bam FCFLAGIT
				sequence 1
			}
			label
			{
				area 80 0 250 60
				text lua "zZstoreTextColor(zZstoreTbl(store.storeItems)[rowNumber][1].label)"
				text style "normal"
				text align left center
				text color 'O'
				glow lua "rowNumber == storeItemsVar"
			}
			label
			{
				area 300 0 91 60
				enabled "not storeScreen:IsContainer()"
				text lua "zZstoreTbl(store.storeItems)[rowNumber][1].value"
				text style "gold"
			}
			label
			{
				enabled "(zZstoreTbl(store.storeItems)[rowNumber].valid == 0 and zZstoreTbl(store.storeItems)[rowNumber][1].highlight == 0) or (zZstoreTbl(store.storeItems)[rowNumber][1].value > game:GetPartyGold())"
				area 0 0 436 60
				rectangle 1
				rectangle opacity 150
			}
		}
		area 78 186 380 302
		hidehighlight
		rowheight	60
		table		"zZstoreTbl(store.storeItems)"
		var			"storeItemsVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		action
		"
			local idx = zZgetIdx(zZstoreTbl(store.storeItems), storeItemsVar)
			if store.storeItems[idx].clickable == 1 and ( store.storeItems[idx].value <= game:GetPartyGold() or storeScreen:IsStealEnabled() or store.storeItems[idx].highlight == 1 ) then 
				if not storeScreen:IsCloseBagButtonClickable() or store.storeItems[idx].valid == 1 then
					local highlight = true
					if(store.storeItems[idx].highlight == 1) then highlight = false end
					if storeScreen:IsStealEnabled() and highlight == true and zZmultiSteal == 0 then
						local numhighlight = 0
						for i = 1 , #store.storeItems, 1 do
							if i ~= idx and store.storeItems[i].highlight == 1 then
								if store.storeItems[idx].value > game:GetPartyGold() then
									if store.storeItems[i].value > game:GetPartyGold() then
										storeScreen:SelectStoreItem( i - 1,  false)
									else
										numhighlight = numhighlight + 1
									end
								else
									if store.storeItems[i].value > game:GetPartyGold() then
										storeScreen:SelectStoreItem( i - 1,  false)
									end
								end
							end
						end
						if numhighlight > 0 then highlight = false end
					end
					storeScreen:SelectStoreItem( idx - 1,  highlight)
				end
			end
		"
		actionalt
		"
			local idx = zZgetIdx(zZstoreTbl(store.storeItems), storeItemsVar)
			showItemDescription(store.storeItems[idx].item, 1)
		"
		actionDbl
		"
			local idx = zZgetIdx(zZstoreTbl(store.storeItems), storeItemsVar)
			if store.storeItems[idx].clickable == 1 then
				if not storeScreen:IsCloseBagButtonClickable() or store.storeItems[idx].valid == 1 then
					local maxCount = store.storeItems[idx].maxCount
					if(maxCount > 1) then
						popupRequester(maxCount, zZstoreSplitStack, false)
					end
				end
			end
		"
	}
	label
	{
		area 506 144 214 38
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "label"
		align left center
		text color	'O'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 2 0 64 60
				bam STONSLOT
				frame lua "getStoreSlotHighlight(zZsorterGItm(store.groupItems)[rowNumber][1].highlight)"
				tint lua "zZsorterGItm(store.groupItems)[rowNumber][1].item.tint"
				icon lua "zZsorterGItm(store.groupItems)[rowNumber][1].item.icon"
				count lua "zZsorterGItm(store.groupItems)[rowNumber][1].count"
				usages lua "zZsorterGItm(store.groupItems)[rowNumber][1].item.usages"
				align center center
			}
			label
			{
				area 80 0 200 60
				text lua "zZstoreTextColor(zZsorterGItm(store.groupItems)[rowNumber][1].label)"
				text style "normal"
				text align left center
				text color	'O'
				glow lua "rowNumber == storeGroupItemsVar"
			}
			label
			{
				area 300 0 62 60
				enabled "not storeScreen:IsContainer()"
				text lua "zZsorterGItm(store.groupItems)[rowNumber][1].value"
				text style "gold"
			}
			label
			{
				--#21242 We don't grey out bags, even though they're not selectable, because we can open them.
				enabled "zZsorterGItm(store.groupItems)[rowNumber][1].valid == 0  and zZsorterGItm(store.groupItems)[rowNumber][1].item.isBag ~= 1"
				area 0 0 436 60
				rectangle 1
				rectangle opacity 150
			}
		}
		area 486 186 380 302
		enabled "not storeScreen:IsCloseBagButtonClickable() and zZshowCharEquipment ~= 1"
		hidehighlight
		rowheight	60
		table		"zZsorterGItm(store.groupItems)"
		var			"storeGroupItemsVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		action
		"
			local idx = zZgetIdx(zZsorterGItm(store.groupItems), storeGroupItemsVar)
			if store.groupItems[idx].valid ~= 0 then
				local selected = true
				if(store.groupItems[idx].highlight == 1) then selected = false end
				storeScreen:SelectGroupItem(idx - 1,  selected)
			end
		"
		actionalt
		"
			local idx = zZgetIdx(zZsorterGItm(store.groupItems), storeGroupItemsVar)
			showItemDescription(store.groupItems[idx].item, 1)
		"
		actionDbl
		"
			local idx = zZgetIdx(zZsorterGItm(store.groupItems), storeGroupItemsVar)
			if(store.groupItems[idx].item.isBag == 1) then
				showItemDescription(store.groupItems[idx].item, 1)
				itemDescLeftButtonAction()
			else
				if store.groupItems[idx].valid ~= 0 then
					local count = store.groupItems[idx].item.count
					local stock = store.groupItems[idx].numInStock or 0
					if(count > 1) then
						popupRequester(count, zZgroupSplitStack, true)
					elseif stock > 1 then
						popupRequester(stock, zZgroupSplitStack, true)
					end	
				end
			end
		"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 2 0 64 60
				bam STONSLOT
				frame lua "getStoreSlotHighlight(zZsorterGItm(store.groupItems)[rowNumber][1].highlight)"
				tint lua "zZsorterGItm(store.groupItems)[rowNumber][1].item.tint"
				icon lua "zZsorterGItm(store.groupItems)[rowNumber][1].item.icon"
				count lua "zZsorterGItm(store.groupItems)[rowNumber][1].item.count"
				usages lua "zZsorterGItm(store.groupItems)[rowNumber][1].count"
				align center center
			}
			label
			{
				area 80 0 200 60
				text lua "zZstoreTextColor(zZsorterGItm(store.groupItems)[rowNumber][1].label)"
				text style "normal"
				text color 'O'
				text align left center
				glow lua "rowNumber == storeGroupItemsVar"
			}
			label
			{
				area 300 0 62 60
				enabled "not storeScreen:IsContainer()"
				text lua "zZsorterGItm(store.groupItems)[rowNumber][1].value"
				text style "gold"
			}
			label
			{
				enabled "zZsorterGItm(store.groupItems)[rowNumber][1].valid == 0"
				area 0 0 436 60
				rectangle 1
				rectangle opacity 150
			}
		}
		area 486 190 380 298
		enabled "storeScreen:IsCloseBagButtonClickable() and zZshowCharEquipment ~= 1"
		hidehighlight
		rowheight	60
		table		"zZsorterGItm(store.groupItems)"
		var			"storeGroupItemsVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		action
		"
			local idx = zZgetIdx(zZsorterGItm(store.groupItems), storeGroupItemsVar)
			if store.groupItems[idx].valid ~= 0 then
				local selected = true
				if(store.groupItems[idx].highlight == 1) then selected = false end
				storeScreen:SelectGroupItem(idx - 1,  selected)
			end
		"
		actionalt
		"
			local idx = zZgetIdx(zZsorterGItm(store.groupItems), storeGroupItemsVar)
			showItemDescription(store.groupItems[idx].item, 1)
		"
		actionDbl
		"
			local idx = zZgetIdx(zZsorterGItm(store.groupItems), storeGroupItemsVar)
			if store.groupItems[idx].valid ~= 0 then
				local count = store.groupItems[idx].item.count
				local stock = store.groupItems[idx].numInStock
				if(count > 1) then
					popupRequester(count, zZgroupSplitStack, true)
				elseif stock > 1 then
					popupRequester(stock, zZgroupSplitStack, true)
				end	
			end
		"
	}
	label
	{
		enabled "zZshowCharEquipment == 1"
		area 0 0 0 0
		text lua "zZsCharEquipmentCheck()"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 2 0 64 60
				bam STONSLOT
				frame 0
				tint lua "zZsCharEquipment[rowNumber][1].item.tint"
				icon lua "zZsCharEquipment[rowNumber][1].item.icon"
				count lua "zZsCharEquipment[rowNumber][1].item.count"
				align center center
			}
			label
			{
				area 80 0 300 60
				text lua "zZsCharEquipment[rowNumber][1].item.name .. ' (^B' .. Infinity_FetchString(zZsCharEquipment[rowNumber][2]) .. zZsCharEquipment[rowNumber][3] .. '^-)'"
				text style "normal"
				text color 'O'
				text align left center
				glow lua "rowNumber == zZsCharEquipmentVar"
			}
		}
		area 486 190 380 304
		enabled "zZshowCharEquipment == 1"
		hidehighlight
		rowheight	60
		table		"zZsCharEquipment"
		var			"zZsCharEquipmentVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		actionalt
		"
			showItemDescription(zZsCharEquipment[zZsCharEquipmentVar][1].item, 1)
		"
	}
	button
	{
		area 550 527 26 26
		bam ROUNDBUT
		tooltip lua "t('INVENTORY_LABEL')"
		frame lua "zZsCharEquipmentFrame()"
		scaleToClip
		action
		"
			if zZshowCharEquipment == 1 then
				zZshowCharEquipment = 0
				zZtempStoreEquipment = -1
				zZsCharEquipment = {}
			else
				zZshowCharEquipment = 1
				zZsCharEquipmentCreate()
			end 
		"
	}
	button
	{
		area 160 566 201 40
		bam GUIBUTNT
		text lua "checkContainerText('BUY_BUTTON', 'TO_BACKPACK_BUTTON')"
		text style "button"
		clickable lua "storeScreen:IsBuyItemButtonClickable() and zZgetCostEnabled(storeScreen:IsContainer(), storeScreen:GetStoreCost(), game:GetPartyGold())"
		action
		"
			storeScreen:OnBuyItemButtonClick()
		"
	}
	button
	{
		area 580 566 201 40
		bam GUIBUTNT
		text lua "checkContainerText('SELL_BUTTON','TO_CONTAINER_BUTTON')"
		text style "button"
		clickable lua "storeScreen:IsSellItemButtonClickable()"
		action
		"
			storeScreen:OnSellItemButtonClick()
		"
	}
	button
	{
		area 370 566 201 40
		enabled "(not storeScreen:IsContainer()) and storeScreen:IsStealEnabled()"
		bam GUIBUTNT
		text "STEAL_BUTTON"
		text style "button"
		clickable lua "zZcanMuttiSteal(storeScreen:IsStealItemButtonClickable())"
		action
		"
			if zZmultiSteal == 0 then
				storeScreen:OnStealItemButtonClick()
			else
				local toSteal = {}
				for k, v in pairs(store.storeItems) do
					if v.highlight == 1 then
						table.insert(toSteal, v.item.name)
						for i = 2, v.amountSelected do
							table.insert(toSteal, v.item.name)
						end
						storeScreen:SelectStoreItem(k - 1, false)
					end
				end
				for _, name in pairs(toSteal) do
					local steal = 0
					for k, v in pairs(store.storeItems) do
						if v.highlight == 1 then steal = 0 break end
						if v.item.name == name then steal = k end
					end
					if steal == 0 then break end
					storeScreen:SelectStoreItem(steal - 1, true)
					storeScreen:OnStealItemButtonClick()
				end
			end
		"
	}
	button
	{
		area 370 566 201 40
		enabled "storeScreen:IsCloseBagButtonClickable()"
		bam GUIBUTNT
		text "CLOSE_CONTAINER_BUTTON"
		text style "button"
		action
		"
			storeScreen:OnCloseBagButtonClick()
		"
	}
	button
	{
		area 78 522 68 90
		encumbrance
	}
	button
	{
		enabled "zZshowItemTypeFilter ~= 0"
		area 238 190 220 330
		rectangle 0
		rectangle opacity 220
		actionEnter ""
		actionExit "zZshowItemTypeFilter = 0"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				enabled  "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				fill 112 111 111 65
			}
			label
			{
				enabled "zzItemTypeList[rowNumber][3] ~= 0"
				area 5 0 -1 -1
				text lua "zZitemTypeFilterColor(zzItemTypeList[rowNumber][2])"
				text style "label"
				text align left center
			}
		}
		enabled "zZshowItemTypeFilter ~= 0"
		area 248 200 200 310
		hidehighlight
		rowheight	dynamic
		table		"zzItemTypeList"
		var			"storeItemsType"
		scrollbar 'GUISCRC'
		action "zzItemType = zzItemTypeList[storeItemsType][1]; zZshowItemTypeFilter = 0"
		actionEnter ""
		actionExit "zZshowItemTypeFilter = 0"
	}
	button
	{
		enabled "zZshowGroupItemTypeFilter ~= 0"
		area 646 190 220 330
		rectangle 0
		rectangle opacity 220
		actionEnter ""
		actionExit "zZshowGroupItemTypeFilter = 0"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				enabled  "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				fill 112 111 111 65
			}
			label
			{
				enabled "zzItemTypeList[rowNumber][3] ~= 0"
				area 5 0 -1 -1
				text lua "zZitemTypeFilterColor(zzItemTypeList[rowNumber][2])"
				text style "label"
				text align left center
			}
		}
		enabled "zZshowGroupItemTypeFilter ~= 0"
		area 656 200 200 310
		hidehighlight
		rowheight	dynamic
		table		"zzItemTypeList"
		var			"storeItemsType"
		scrollbar 'GUISCRC'
		action "zzGroupItemType = zzItemTypeList[storeItemsType][1]; zZshowGroupItemTypeFilter = 0"
		actionEnter ""
		actionExit "zZshowGroupItemTypeFilter = 0"
	}
	label
	{
		enabled "storeScreen:IsSpriteOrderable() == false"
		area 59 186 829 330
		mosaic fcstora1
	}
}
`
	identifyItemsVar = 0
`
menu
{
	name 'STORE_IDENTIFY'
	align center center
	offset 0 -72
	onOpen
	"
		zzInCharacterRecord = 0
		storeScreen:UpdateIdentifyPanel()
		store.identifyText = ''
		zZvalidIdent = {}
		zZcurrItm = -1
	"
	onClose
	"
		zZvalidIdent = {}
	"
	ignoreEsc
	label
	{
		area   0 -2 944 625
		mosaic fcstorea
	}
	label
	{
		area   59 142 829 476
		mosaic fcstora2
	}
	label
	{
		area 246 28 454 44
		text "IDENTIFY_TITLE"
		text style "title"
		text color 'O'
	}
	label
	{
		area 266 80 410 42
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text color '$'
		text point 16
	}
	label
	{
		area 506 144 214 38
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "label"
		align left center
		text color	'O'
	}
	label
	{
		area 732 144 108 38
		text lua "game:GetPartyGold()"
		text style "gold"
		text align right center
	}
	label
	{
		area 96 144 250 38
		text lua "t('COST_LABEL') .. '^B:^-'"
		text style "label"
		text color 'O'
		text align right center
	}
	label
	{
		area 350 144 110 38
		text lua "storeScreen:GetIdentifyCost()"
		text style "gold"
		text align right center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 5 0 64 60
				bam STONSLOT
				frame lua "getStoreSlotHighlight(zZfilter(store.identifyItems)[rowNumber].highlight)"
				icon lua "zZfilter(store.identifyItems)[rowNumber].item.icon"
				tint lua "zZfilter(store.identifyItems)[rowNumber].item.tint"
				align center center
			}
			label
			{
				area 80 0 204 60
				text lua "zZstoreTextColor(zZfilter(store.identifyItems)[rowNumber].label)"
				text style "normal"
				text color 'O'
				text align left center
				glow lua "rowNumber == identifyItemsVar"
			}
			label
			{
				enabled "zZfilter(store.identifyItems)[rowNumber].valid == 0"
				area 0 0 400 60
				rectangle 1
				rectangle opacity 150
			}
		}
		area 78 186 380 364
		hidehighlight
		rowheight	60
		table		"zZfilter(store.identifyItems)"
		var			"identifyItemsVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		action
		"
			local highlight = true
			local idx = zZgetIdxID(store.identifyItems, identifyItemsVar)
			zZcurrItm = idx
			if(store.identifyItems[idx].highlight == 1) then highlight = false end
			if(highlight == true and store.identifyItems[idx].valid == 0) then return end
			storeScreen:SelectIdentifyItem( idx - 1,  highlight)
		"
	}
	button
	{
		area  164 566 200 40
		bam GUIBUTNT
		text "IDENTIFY_BUTTON"
		text style "button"
		clickable lua "storeScreen:IsIdentifyItemButtonClickable()"
		action
		"
			storeScreen:OnIdentifyItemButtonClick()
		"
	}
	text
	{
		area 494 204 376 394
		text lua "zZgetIdentifyDescStr(store.identifyText)"
		text style "normal_parchment"
		scrollbar 'GUISCRC'
	}
}
`
function getDonationFrame()
	if(store.hasDonated ~= nil and store.hasDonated == 1) then
		return 1
	else
		return 0
	end
end
storeDonateAmountEdit = 0 --no longer used in ui, but the engine needs it.
function changeDonationAmount(amount)
	if (amt == nil) then
		amt = 0
	end
	amt = amt + amount

	if (amt > 0) then
		storeDonateAmountEdit = tostring(amt)
	else
		storeDonateAmountEdit = '0'
	end
end	
`
menu
{
	name 'STORE_DONATE'
	align center center
	ignoreEsc
	offset 0 -72
	onOpen 
	"
		zzInCharacterRecord = 0
		storeScreen:UpdateDonatePanel()
		store.donateText = ''
		zZamountDelta = 1
		zZshowAmountDelta = 0
		zZdonateAmountTable = {}
		zZcreateDonateAmountTable()
	"
	onClose
	"
		zZamountDelta = 1
		zZshowAmountDelta = 0
		zZdonateAmountTable = {}
	"
	label
	{
		area   0 -2 944 625
		mosaic fcstorea
	}
	label
	{
		area   59 142 829 476
		mosaic fcstora3
	}
	label
	{
		area 246 28 454 44
		text "DONATE_TITLE"
		text style "title"
		text color 'O'
	}
	label
	{
		area 266 80 410 42
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text color '$'
		text point 16
	}
	label
	{
		area 104 206 311 267
		bam "ZZDONATE"
		frame lua "getDonationFrame()"
	}
	label
	{
		area 92 474 346 38
		text "ENTER_DONATION_LABEL"
		text style "label"
		text color 'O'
	}
	edit
	{
		name		"storeDonateAmountEditArea"
		area		158 510 122 36
		var			storeDonateAmountEdit
		text style	"edit"
		text color '$'
		text align center center
		maxlines	1
		fill            111 111 111 64
		action
		"
			-- only permit numbers as letters.
			if(tonumber(letter_pressed) ~= nil or not letter_pressed) then
				return 1
			else
				return 0
			end
		"
	}
	button
	{
		area		372 510 90 36
		text lua "zZamountDelta .. ' ' .. stringsAll.zzGP"
		text style	"edit"
		text color '$'
		text align center center
		fill            111 111 111 64
		action
		"
			zZcheckDonateAmountTable(game:GetPartyGold())
			zZshowAmountDelta = 1
		"
	}
	button
	{
		bam GUIOSW
		area 284 508 44 44
		sequence 0
		clickable lua "tonumber(storeDonateAmountEdit) < game:GetPartyGold()"
		action
		"
			changeDonationAmount(zZamountDelta)
			if amt > game:GetPartyGold()
				storeDonateAmountEdit = game:GetPartyGold()
				amt = storeDonateAmountEdit
			end
		"
		actionHold
		"
			changeDonationAmount(zZamountDelta)
			if amt > game:GetPartyGold() then
				storeDonateAmountEdit = game:GetPartyGold()
				amt = storeDonateAmountEdit
			end
		"
	}
	button
	{
		bam GUIOSW
		area 324 508 44 44
		sequence 1
		clickable lua "tonumber(storeDonateAmountEdit) > 0"
		action
		"
			changeDonationAmount(-zZamountDelta)
			if amt < 0 then
				storeDonateAmountEdit = 0
				amt = storeDonateAmountEdit
			end
		"
		actionHold
		"
			changeDonationAmount(-zZamountDelta)
			if amt < 0 then
				storeDonateAmountEdit = 0
				amt = storeDonateAmountEdit
			end
		"
	}
	button
	{
		area 164 566 200 40
		bam GUIBUTNT
		text "DONATE_BUTTON"
		text style "button"
		clickable lua "storeScreen:IsDonateButtonClickable()"
		action
		"
			storeScreen:OnDonateButtonClick()
		"
	}
	label
	{
		area 104 144 352 38
		text  lua "t('DONATE_TITLE') .. ' ' .. stringsAll.zzIn .. '^B:  ' .. Infinity_FetchString(storeScreen:GetStoreName()) .. '^-'"
		text style "label"
		align left center
		text color	'O'
	}
	label
	{
		area 506 144 214 38
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "label"
		align left center
		text color	'O'
	}
	label
	{
		area 732 144 108 38
		text lua "game:GetPartyGold()"
		text style "gold"
		align right center
	}
	text
	{
		area 494 204 376 394
		text lua "zZscriptDescColorize(store.donateText)"
		text style "normal_parchment"
		scrollbar 'GUISCRC'
	}
	button
	{
		enabled "zZshowAmountDelta ~= 0"
		area 242 376 220 184
		rectangle 0
		rectangle opacity 220
		actionEnter ""
		actionExit "zZshowAmountDelta = 0"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				enabled  "rowNumber == mouseoverRow"
				area 0 0 -1 -1
				fill 112 111 111 65
			}
			label
			{
				enabled "zZdonateAmountTable[rowNumber][3] ~= 0"
				area 5 0 -1 -1
				text lua "zZdonateAmountTable[rowNumber][1]"
				text style "label"
				text align left center
			}
		}
		enabled "zZshowAmountDelta ~= 0"
		area 252 386 200 164
		hidehighlight
		rowheight	dynamic
		table		"zZdonateAmountTable"
		var			"storeDonateAmt"
		scrollbar 'GUISCRC'
		action "zZamountDelta = zZdonateAmountTable[storeDonateAmt][2]; zZshowAmountDelta = 0"
		actionEnter ""
		actionExit "zZshowAmountDelta = 0"
	}
}
`
	function storeRest()
		storeScreen:RestParty()
	end
`
menu
{
	name 'STORE_ROOMS'
	align center center
	offset 0 -72
	onOpen 
	"
		zzInCharacterRecord = 0
		selectedRoom = nil
		storeScreen:SetRoomType(0)
		storeScreen:UpdateRentRoomPanel()
		store.roomText = Infinity_FetchString(storeScreen:GetStoreName()) .. ' (' .. t('ROOMS_TITLE') .. ')'
		zZroomImg = 'INNROOMS'
		if Infinity_GetScriptVarInt('PARTY_IN_ICEWIND_DALE') == 1 then
			zZroomImg = 'INNROOMW'
		end 
	"
	onClose
	"
		zZroomImg = 'INNROOMS'
	"
	ignoreEsc
	label
	{
		area   0 -2 944 625
		mosaic fcstorea
	}
	label
	{
		area   59 142 829 476
		mosaic fcstora4
	}
	label
	{
		area 246 28 454 44
		text "ROOMS_TITLE"
		text style "title"
		text color 'O'
	}
	label
	{
		area 266 80 410 42
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text color '$'
		text point 16
	}
	label
	{
		area 732 144 108 38
		text lua "game:GetPartyGold()"
		text style "gold"
		align right center
	}
	label
	{
		name "zzRoomFrame"
		area 349 379 259 222
		mosaic fcstora5
		glow lua "1"
		enabled "storeScreen:GetRoomType() ~= nil and (storeScreen:GetRoomType() > 0 and storeScreen:GetRoomType() < 5)"
	}
	button
	{
		area 93 162 245 158
		bam lua "zZroomImg"
		sequence 0
		clickable lua "storeScreen:IsRoomTypeClickable(1)"
		action
		"
			storeScreen:SetRoomType(1)
			Infinity_SetArea('zzRoomFrame', 86, 154, nil, nil)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_peasant')
		"
	}
	button
	{
		name "BUTTON_room_peasant"
		area 100 328 230 40
		bam GUIBUTMT
		text "PEASANT_BUTTON"
		text style "button"
		glow lua "storeScreen:GetRoomType() == 1"
		clickable lua "storeScreen:IsRoomTypeClickable(1)"
		action
		"
			storeScreen:SetRoomType(1)
			Infinity_SetArea('zzRoomFrame', 86, 154, nil, nil)
		"
	}
	
	button
	{
		area 356 162 245 158
		bam lua "zZroomImg"
		sequence 1
		clickable lua "storeScreen:IsRoomTypeClickable(2)"
		action
		"
			storeScreen:SetRoomType(2)
			Infinity_SetArea('zzRoomFrame', 349, 154, nil, nil)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_merchant')
		"
	}
	button
	{
		name "BUTTON_room_merchant"
		area 364 328 230 40
		bam GUIBUTMT
		text "MERCHANT_BUTTON"
		text style "button"
		glow lua "storeScreen:GetRoomType() == 2"
		clickable lua "storeScreen:IsRoomTypeClickable(2)"
		action
		"
			storeScreen:SetRoomType(2)
			Infinity_SetArea('zzRoomFrame', 349, 154, nil, nil)
		"
	}
	
	button
	{
		area 93 387 245 158
		bam lua "zZroomImg"
		sequence 2
		clickable lua "storeScreen:IsRoomTypeClickable(3)"
		frame 0
		action
		"
			storeScreen:SetRoomType(3)
			Infinity_SetArea('zzRoomFrame', 86, 379, nil, nil)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_noble')
		"
	}
	button
	{
		name "BUTTON_room_noble"
		area 100 553 230 40
		bam GUIBUTMT
		text "NOBLE_BUTTON"
		text style "button"
		glow lua "storeScreen:GetRoomType() == 3"
		clickable lua "storeScreen:IsRoomTypeClickable(3)"
		action
		"
			storeScreen:SetRoomType(3)
			Infinity_SetArea('zzRoomFrame', 86, 379, nil, nil)
		"
	}
	
	button
	{
		area 356 387 245 158
		bam lua "zZroomImg"
		sequence 3
		clickable lua "storeScreen:IsRoomTypeClickable(4)"
		action
		"
			storeScreen:SetRoomType(4)
			Infinity_SetArea('zzRoomFrame', 349, 379, nil, nil)
			selectedRoom = Infinity_FindUIItemByName('BUTTON_room_royal')
		"
	}
	button
	{
		name "BUTTON_room_royal"
		area 364 553 230 40
		bam GUIBUTMT
		text "ROYAL_BUTTON"
		text style "button"
		glow lua "storeScreen:GetRoomType() == 4"
		clickable lua "storeScreen:IsRoomTypeClickable(4)"
		action
		"
			storeScreen:SetRoomType(4)
			Infinity_SetArea('zzRoomFrame', 349, 379, nil, nil)
		"
	}
	label
	{
		area 668 504 200 40
		rectangle 0
		rectangle opacity 80
	}
	label
	{
		area 668 504 70 40
		text lua "t('COST_LABEL') .. '^B:^-'"
		text style "label"
		text color 'O'
	}
	text
	{
		area 660 200 212 268
		text lua "zZscriptDescColorize(store.roomText)"
		text style "normal_parchment"
		action "
			storeScreen:SetRoomType(0)
			store.roomText = Infinity_FetchString(storeScreen:GetStoreName()) .. ' (' .. t('ROOMS_TITLE') .. ')'
		"
	}
	label
	{
		area 748 504 104 40
		text lua "storeScreen:GetRoomCost()"
		text style "gold"
		text align right center
	}
	button
	{
		area 668 557 200 40
		bam GUIBUTNT
		text "RENT_BUTTON"
		text style "button"
		clickable lua	"game:GetPartyGold() >= storeScreen:GetRoomCost() and storeScreen:GetRoomType() >= 1 and storeScreen:GetRoomType() <= 4"
		action
		"
			storeScreen:OnRentRoomButtonClick()
		"
	}
}
menu
{
	name 'STORE_HEALING'
	align center center
	offset 0 -72
	onOpen
	"
		zzInCharacterRecord = 0
		storeScreen:UpdateBuySpellPanel()
		zZgetHealChar = Infinity_GetSelectedCharacterName()
	"
	ignoreEsc
	label
	{
		area 0 0 -1 -1
		text lua "zZcheckHealHighlight()"
	}
	label
	{ 
		area   0 -2 944 625
		mosaic fcstorea
	}
	label
	{
		area   59 142 829 476
		mosaic fcstora2
	}
	label
	{
		area 246 28 454 44
		text "HEALING_TITLE"
		text style "title"
		text color 'O'
	}
	label
	{
		area 266 80 410 42
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text color '$'
		text point 16
	}
	label
	{
		area 506 144 214 38
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "label"
		align left center
		text color	'O'
	}
	label
	{
		area 732 144 108 38
		text lua "game:GetPartyGold()"
		text style "gold"
		text align right center
	}
	label
	{
		area 96 144 250 38
		text lua "t('COST_LABEL') .. '^B:^-'"
		text style "label"
		text color 'O'
		text align right center
	}
	label
	{
		area 350 144 110 38
		text lua "storeScreen:GetSpellCost()"
		text style "gold"
		text align right center
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 2 0 64 60
				bam STONSLOT
				frame lua "getStoreSlotHighlight(store.healingSpells[rowNumber].highlight)"
				icon lua "store.healingSpells[rowNumber].icon"
				tint lua "store.healingSpells[rowNumber].tint"
				align center center
			}
			label
			{
				area 80 0 250 60
				text lua "zZstoreTextColor(Infinity_FetchString(store.healingSpells[rowNumber].name))"
				text style "normal"
				text color 'O'
				text align left center
				glow lua "rowNumber == healingSpellsVar"
			}
			label
			{
				area 300 0 91 60
				text style "gold"
				text align center center
				text lua "store.healingSpells[rowNumber].value"
			}
			label
			{
				enabled "store.healingSpells[rowNumber].valid == 0 or store.healingSpells[rowNumber].value > game:GetPartyGold()"
				area 0 0 436 60
				rectangle 1
				rectangle opacity 150
			}
		}
		area 78 186 380 364
		hidehighlight
		rowheight	60
		table		"store.healingSpells"
		var			"healingSpellsVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		action
		"
			local highlight = true
			if(store.healingSpells[healingSpellsVar].highlight == 1) then highlight = false end
			if store.healingSpells[healingSpellsVar].value > game:GetPartyGold() then highlight = false end
			if(highlight == true and store.healingSpells[healingSpellsVar].valid == 0) then return end
			storeScreen:SelectSpellItem( healingSpellsVar - 1,  highlight)
		"
		actionAlt
		"
			local spell = store.healingSpells[healingSpellsVar]
			popupDetails(16189, spell.name, spell.description,spell.icon)
		"
	}
	button
	{
		area 164 566 200 40
		bam GUIBUTNT
		text "BUY_BUTTON"
		text style "button"
		clickable lua "zzIsHealingSpellsButtonClickable(store.healingSpells)"
		action
		"
			storeScreen:OnBuySpellButtonClick()
		"
	}
	text
	{
		area 494 204 376 394
		text lua "zZscriptDescColorize(store.spellText)"
		text style "normal_parchment"
		scrollbar 'GUISCRC'
	}
}
menu
{
	name 'STORE_DRINKS'
	align center center
	offset 0 -72
	ignoreEsc
	onOpen 
	"
		zzInCharacterRecord = 0
		storeScreen:UpdateBuyDrinksPanel()
		store.drinkText = ''
		zZdrinksRandomValue = {}
		zZsetDrinksRandomValue()
	"
	label
	{
		area   0 -2 944 625
		mosaic fcstorea
	}
	label
	{
		area   59 142 829 476
		mosaic fcstora2
	}
	label
	{
		area 246 28 454 44
		text "DRINKS_TITLE"
		text style "title"
		text color 'O'
	}
	label
	{
		area 266 80 410 42
		text lua "Infinity_FetchString(storeScreen:GetStoreName())"
		text style "label"
		text color '$'
		text point 16
	}
	label
	{
		area 506 144 214 38
		text  lua "Infinity_GetSelectedCharacterName()"
		text style "label"
		align left center
		text color	'O'
	}
	label
	{
		area 732 144 108 38
		text lua "game:GetPartyGold()"
		text style "gold"
		text align right center
	}
	label
	{
		area 140 144 202 35
		text "DRINK_LABEL"
		text style "label"
		text color 'O'
	}
	label
	{
		area 347 144 111 35
		text "COST_LABEL"
		text style "label"
		text align center center
		text color 'O'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area 2 0 64 60
				bam STONSLOT
				sequence lua "math.fmod(zZdrinksRandomValue[rowNumber] + 1, 4)"
				frame lua "zZgetDrinkFrame(rowNumber, storeDrinksVar)"
				align center center
			}
			label
			{
				area  13 8 45 45
				bam fccupdrk
				frame lua "zZdrinksRandomValue[rowNumber]"
				glow lua "rowNumber == storeDrinksVar"
				greyscale lua "store.drinks[rowNumber].value > game:GetPartyGold()"
				scaleToClip
			}
			label
			{
				area 75 0 215 60
				text lua "zZscriptDescColorize(store.drinks[rowNumber].name)"
				text style "normal"
				text color 'O'
				text align left center
				glow lua "rowNumber == storeDrinksVar"
			}
			label
			{
				area 300 0 64 60
				text lua "store.drinks[rowNumber].value"
				text style "gold"
				text align center center
			}
			label
			{
				enabled "store.drinks[rowNumber].value > game:GetPartyGold()"
				area 0 0 400 60
				rectangle 1
				rectangle opacity 150
			}
		}
		area 78 186 380 364
		hidehighlight
		rowheight	60
		table		"store.drinks"
		var			"storeDrinksVar"
		rowbackground	 FCUISTB2
		scrollbar 'GUISCRC'
		action
		"
			if store.drinks[storeDrinksVar].value > game:GetPartyGold() then
				storeDrinksVar = 0
			end
		"
	}
	button
	{
		area 164 566 200 40
		bam GUIBUTNT
		text "BUY_BUTTON"
		text style "button"
		clickable lua "storeDrinksVar ~= nil and storeDrinksVar ~= 0"
		action
		"
			storeScreen:OnBuyDrinkButtonClick(storeDrinksVar - 1)
			if store.drinks[storeDrinksVar].value > game:GetPartyGold() then
				storeDrinksVar = 0
			end
		"
	}
	label
	{
		area 506 208 127 93
		bam lua "store.qualityIcon"
	}
	label
	{
		area 627 204 155 93
		text "RUMORS_LABEL"
		text style "label_parchment"
		text color 'Y'
	}
	text
	{
		area 494 286 376 312
		text lua "zZscriptDescColorize(store.drinkText)"
		text style "normal_parchment"
		scrollbar 'GUISCRC'
	}
}
`
	storePanelButtonHighlightGroup = nil
	function setStoreMainPanel(buttonId)
		local oldMenu  = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(oldMenu)
		storeCurMenuId = storeScreen:GetPanelButtonPanelId(buttonId)
		Infinity_PushMenu(storeScreen:GetMenuName(storeCurMenuId))
	end
	function getBuySellTooltip()
		if(storeScreen:IsContainer()) then
			return t('TRANSFER_ITEMS_TOOLTIP')
		else
			return Infinity_FetchString(storeScreen:GetPanelButtonToolTip(0))
		end
	end
`
menu
{
	name 'STORE_CHOOSER'
	align center center
	onOpen
	"
		zzInCharacterRecord = 0
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PushMenu(menuName)
		pushSidebars()
		local buttonId = storeScreen:GetPanelButtonId(storeCurMenuId)
		storePanelButtonHighlightGroup = Infinity_FindUIItemByName('BUTTON_storechooser_' .. buttonId)
	"
	onClose 
	"
		local menuName = storeScreen:GetMenuName(storeCurMenuId)
		Infinity_PopMenu(menuName)
		popSidebars()
	"
	ignoreEsc
	label
	{
		area 0 622 944 143
		mosaic fcstoreb
	}
	label
	{
		area 108 645 80 70
		bam lua "store.icon"
	}
	button
	{
		area 580 658 200 40
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		action
		"
			storeScreen:OnMainDoneButtonClick()
		"
	}
	button
	{
		name 'BUTTON_storechooser_0'
		area 188 645 62 64
		enabled "storeScreen:GetPanelButtonEnabled(0)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(0)"
		tooltip lua "getBuySellTooltip()"
		action
		"
			setStoreMainPanel(0)
		"
	}
	button
	{
		name 'BUTTON_storechooser_1'
		area 258 645 62 64
		enabled "storeScreen:GetPanelButtonEnabled(1)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(1)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(1))"
		action
		"
			setStoreMainPanel(1)
		"
	}
	button
	{
		name 'BUTTON_storechooser_2'
		area 328 645 62 64
		enabled "storeScreen:GetPanelButtonEnabled(2)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(2)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(2))"
		action
		"
			setStoreMainPanel(2)
		"
	}
	button
	{
		name 'BUTTON_storechooser_3'
		area 398 645 62 64
		enabled "storeScreen:GetPanelButtonEnabled(3)"
		bam GUISTBBC
		highlightgroup storePanelButtonHighlightGroup
		sequence lua "storeScreen:GetPanelButtonSequence(3)"
		tooltip lua "Infinity_FetchString(storeScreen:GetPanelButtonToolTip(3))"
		action
		"
			setStoreMainPanel(3)
		"
	}
}
`
	function worldDeathLoadClickable()
		if(e:IsMultiplayer() and not e:IsHosting()) then
			return false
		end
		return not worldScreen:GetHardPaused()
	end
	function worldDeathQuitClickable()
		return not worldScreen:GetHardPaused()
	end
	function worldDeathText()
		if(e:IsMultiplayer()) then
			if(e:IsHosting()) then
				return Infinity_FetchString(19377)
			else
				return Infinity_FetchString(11331)
			end
		else
			if(worldDeathStr == nil) then
				return Infinity_FetchString(16498)
			else
				return Infinity_FetchString(worldDeathStr)
			end
		end
	end
	function worldDeathQuitText()
		if(e:IsMultiplayer()) then
			return t('LOGOUT_BUTTON')
		else
			return t('QUIT_BUTTON')
		end
	end
	groundItemsButtonToggle = 0
	highlightButtonToggle = 0
	worldChatEdit = ""
`
menu
{
	name "WORLD_DEATH"
	align center center
	ignoreEsc
	modal
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z
	}
	label
	{
		area 29 21 580 126
		text lua "worldDeathText()"
		text style	"label"
		text align center center
	}
	button
	{
		area 79 170 230 40
		bam GUIBUTMT
		text "LOAD_BUTTON"
		text style	"button"
		clickable lua "worldDeathLoadClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathLoad()
		"
	}
	button
	{
		area 343 170 230 40
		bam GUIBUTMT
		text style	"button"
		text lua "worldDeathQuitText()"
		clickable lua "worldDeathQuitClickable()"
		action 
		"
			Infinity_PopMenu()
			worldScreen:OnDeathQuit()
		"
	}
}
`
	actionBarTooltip = {}
`
menu
{
	name "WORLD_ACTIONBAR"
	align center bottom
	onOpen 
	"
		zzInCharacterRecord = 0
		toolbarTop = 50
		Infinity_PushMenu('WORLD_MESSAGES')
		if zZrestartAchievem == 0 then
			Infinity_PushMenu('SHOW_ACHIVEMENTS')
			zZrestartAchievem = 1
		end
		if(groundItemsButtonToggle == 1) then
			worldScreen:StartGroundItems()
			bubbAutolootOptionsActive = 1
		end
		worldScreen:SetHighlightEnabled(highlightButtonToggle == 1)
	"
	onClose 
	"
		Infinity_PopMenu('WORLD_QUICKLOOT');
		Infinity_PopMenu('WORLD_MESSAGES');
	"
	ignoreEsc
	label
	{
		area 0 0 746 57
		mosaic GZWBTP10
	}
	button
	{
		area 8 17 22 22
		bam ROUNDBUT
		tooltip lua "stringsAll.pickupLootOpt"
		scaleToClip
		clickable lua "bubbAutolootOptionsActive == 1"
		action
		"
			Infinity_PushMenu('BUBB_AUTOLOOT_OPTIONS')
		"
	}
	button
	{
		area 40 17 22 22
		bam ROUNDBUT
		tooltip lua "Infinity_FetchString(%str99897%)"
		frame lua "zZnewQuickLootOrigFrame()"
		scaleToClip
		action
		"
			if(groundItemsButtonToggle == 0) then
				worldScreen:StartGroundItems()
				groundItemsButtonToggle = 1
				bubbAutolootOptionsActive = 1
			else
				worldScreen:StopGroundItems()
				groundItemsButtonToggle = 0
				bubbAutolootOptionsActive = 0
			end
		"
		actionAlt
		"
			if(groundItemsButtonToggle == 0) then
				worldScreen:StartGroundItems()
				groundItemsButtonToggle = 1
			else
				worldScreen:StopGroundItems()
				groundItemsButtonToggle = 0
			end
		"
	}
	button
	{
		area 68 1 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		action "buttonArray:OnLButtonPressed(0)"
		actionAlt "buttonArray:OnRButtonPressed(0)"
	}
	button
	{
		area 122 1 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		action "buttonArray:OnLButtonPressed(1)"
		actionAlt "buttonArray:OnRButtonPressed(1)"
	}
	button
	{
		area 177 1 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		action "buttonArray:OnLButtonPressed(2)"
		actionAlt "buttonArray:OnRButtonPressed(2)"
	}
	button
	{
		area 231 1 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		action "buttonArray:OnLButtonPressed(3)"
		actionAlt "buttonArray:OnRButtonPressed(3)"
	}
	button
	{
		area 299 1 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		action "buttonArray:OnLButtonPressed(4)"
		actionAlt "buttonArray:OnRButtonPressed(4)"
	}
	button
	{
		area 353 1 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		action "buttonArray:OnLButtonPressed(5)"
		actionAlt "buttonArray:OnRButtonPressed(5)"
	}
	button
	{
		area 407 1 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		action "buttonArray:OnLButtonPressed(6)"
		actionAlt "buttonArray:OnRButtonPressed(6)"
	}
	button
	{
		area 461 1 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		action "buttonArray:OnLButtonPressed(7)"
		actionAlt "buttonArray:OnRButtonPressed(7)"
	}
	
	button
	{
		area 528 1 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		action "buttonArray:OnLButtonPressed(8)"
		actionAlt "buttonArray:OnRButtonPressed(8)"
	}
	button
	{
		area 582 1 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		action "buttonArray:OnLButtonPressed(9)"
		actionAlt "buttonArray:OnRButtonPressed(9)"
	}
	button
	{
		area 636 1 52 52
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		action "buttonArray:OnLButtonPressed(10)"
		actionAlt "buttonArray:OnRButtonPressed(10)"
	}
	button
	{
		area 689 1 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		action "buttonArray:OnLButtonPressed(11)"
		actionAlt "buttonArray:OnRButtonPressed(11)"
	}
}
`
	loot = 
	{
		containerItems = {},
		groupItems = {},
		groundItems = {}
	}
	function getContainerItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopContainerItem()
		if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.containerItems[idxScrolled].item[property]
	end
	function getGroupItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopGroupItem()
		if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.groupItems[idxScrolled].item[property]
	end
	function scrollContainerItems()
		if scrollDirection > 0 then
			if worldScreen:ContainerScrollEnabled(-1) then
				worldScreen:OnContainerScroll(-1)
			end
		elseif scrollDirection < 0 then
			if worldScreen:ContainerScrollEnabled(1) then
				worldScreen:OnContainerScroll(1)
			end
		end
	end
	function scrollGroupItems()
		if scrollDirection > 0 then
			if worldScreen:GroupScrollEnabled(-1) then
				worldScreen:OnGroupScroll(-1)
			end
		elseif scrollDirection < 0 then
			if worldScreen:GroupScrollEnabled(1) then
				worldScreen:OnGroupScroll(1)
			end
		end
	end
	function showContainerItemDescription(index)
		local idxScrolled = index + worldScreen:GetTopContainerItem()
		if(loot.containerItems[idxScrolled] == nil or loot.containerItems[idxScrolled].item == nil) then
			return nil
		end
		Infinity_GetContainerItemDescription(idxScrolled)
		showItemDescription(loot.containerItems[idxScrolled].item, 2)
	end
	function showGroupItemDescription(index)
		local idxScrolled = index + worldScreen:GetTopGroupItem()
		if(loot.groupItems[idxScrolled] == nil or loot.groupItems[idxScrolled].item == nil) then
			return nil
		end
		Infinity_GetGroupItemDescription(idxScrolled)
		showItemDescription(loot.groupItems[idxScrolled].item, 2)
	end
`
menu
{
	name "WORLD_CONTAINER"
	align center bottom
	offset -24 0
	ignoreesc
	label
	{
		area 0 0 653 130
		mosaic GZPWMSG0
	}
	label
	{
		area 16 10 83 100
		bam lua "loot.containerIcon"
	}
	button
	{
		area 104 2 209 116
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 108 8 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(0,'name')"
		tint lua	"getContainerItemProperty(0,'tint')"
		icon lua	"getContainerItemProperty(0,'icon')"
		count lua	"getContainerItemProperty(0,'count')"
		usages lua	"getContainerItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(0)"
		actionAlt	"showContainerItemDescription(0)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 162 8 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(1,'name')"
		tint lua	"getContainerItemProperty(1,'tint')"
		icon lua	"getContainerItemProperty(1,'icon')"
		count lua	"getContainerItemProperty(1,'count')"
		usages lua	"getContainerItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(1)"
		actionAlt	"showContainerItemDescription(1)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 216 8 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(2,'name')"
		tint lua	"getContainerItemProperty(2,'tint')"
		icon lua	"getContainerItemProperty(2,'icon')"
		count lua	"getContainerItemProperty(2,'count')"
		usages lua	"getContainerItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(2)"
		actionAlt	"showContainerItemDescription(2)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 108 62 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(3,'name')"
		tint lua	"getContainerItemProperty(3,'tint')"
		icon lua	"getContainerItemProperty(3,'icon')"
		count lua	"getContainerItemProperty(3,'count')"
		usages lua	"getContainerItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(3)"
		actionAlt	"showContainerItemDescription(3)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 162 62 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(4,'name')"
		tint lua	"getContainerItemProperty(4,'tint')"
		icon lua	"getContainerItemProperty(4,'icon')"
		count lua	"getContainerItemProperty(4,'count')"
		usages lua	"getContainerItemProperty(4,'usages')"
		action		"worldScreen:OnContainerButtonClick(4)"
		actionAlt	"showContainerItemDescription(4)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 216 62 52 52
		bam STONSLOT
		tooltip lua	"getContainerItemProperty(5,'name')"
		tint lua	"getContainerItemProperty(5,'tint')"
		icon lua	"getContainerItemProperty(5,'icon')"
		count lua	"getContainerItemProperty(5,'count')"
		usages lua	"getContainerItemProperty(5,'usages')"
		action		"worldScreen:OnContainerButtonClick(5)"
		actionAlt	"showContainerItemDescription(5)"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 268 8 44 44
		enabled "worldScreen:ContainerScrollEnabled(-1)"
		bam guisv10
		sequence 0
		action
		"
			worldScreen:OnContainerScroll(-1)
		"
		actionScroll "scrollContainerItems()"
	}
	button
	{
		area 268 70 44 44
		enabled "worldScreen:ContainerScrollEnabled(1)"
		bam guisv10
		sequence 1
		action
		"
			worldScreen:OnContainerScroll(1)
		"
		actionScroll "scrollContainerItems()"
	}
	label
	{
		area 313 12 68 100
		encumbrance
	}
	button
	{
		area 406 2 162 116
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 411 8 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(0,'name')"
		tint lua	"getGroupItemProperty(0,'tint')"
		icon lua	"getGroupItemProperty(0,'icon')"
		count lua	"getGroupItemProperty(0,'count')"
		usages lua	"getGroupItemProperty(0,'usages')"
		action		"worldScreen:OnContainerButtonClick(10)"
		actionAlt	"showGroupItemDescription(0)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 465 8 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(1,'name')"
		tint lua	"getGroupItemProperty(1,'tint')"
		icon lua	"getGroupItemProperty(1,'icon')"
		count lua	"getGroupItemProperty(1,'count')"
		usages lua	"getGroupItemProperty(1,'usages')"
		action		"worldScreen:OnContainerButtonClick(11)"
		actionAlt	"showGroupItemDescription(1)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 411 62 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(2,'name')"
		tint lua	"getGroupItemProperty(2,'tint')"
		icon lua	"getGroupItemProperty(2,'icon')"
		count lua	"getGroupItemProperty(2,'count')"
		usages lua	"getGroupItemProperty(2,'usages')"
		action		"worldScreen:OnContainerButtonClick(12)"
		actionAlt	"showGroupItemDescription(2)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 465 62 52 52
		bam STONSLOT
		tooltip lua	"getGroupItemProperty(3,'name')"
		tint lua	"getGroupItemProperty(3,'tint')"
		icon lua	"getGroupItemProperty(3,'icon')"
		count lua	"getGroupItemProperty(3,'count')"
		usages lua	"getGroupItemProperty(3,'usages')"
		action		"worldScreen:OnContainerButtonClick(13)"
		actionAlt	"showGroupItemDescription(3)"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 517 8 44 44
		enabled "worldScreen:GroupScrollEnabled(-1)"
		bam guisv10
		sequence 0
		action
		"
			worldScreen:OnGroupScroll(-1)
		"
		actionScroll "scrollGroupItems()"
	}
	button
	{
		area 517 70 44 44
		enabled "worldScreen:GroupScrollEnabled(1)"
		bam guisv10
		sequence 1
		action
		"
			worldScreen:OnGroupScroll(1)
		"
		actionScroll "scrollGroupItems()"
	}
	label
	{
		area 568 20 78 50
		bam GUIGOLD
	}
	label
	{
		area 575 76 71 28
		text lua "game:GetPartyGold()"
		text style "gold"
	}
	button
	{
		area  45 87 22 22
		bam "ROUNDBUT"
		scaleToClip
		action
		"
			worldScreen:TakeAllFromContainer()
		"
	}
}
`
	function getSlotContainerId(index)
		local idxScrolled = index + worldScreen:GetTopGroundItem()
		if(loot.groundItems[idxScrolled] == nil) then
			return nil
		end
		return loot.groundItems[idxScrolled].containerId
	end
	function getGroundItemProperty(index, property)
		local idxScrolled = index + worldScreen:GetTopGroundItem()
		if(loot.groundItems[idxScrolled] == nil or loot.groundItems[idxScrolled].item == nil) then
			return nil
		end
		return loot.groundItems[idxScrolled].item[property]
	end
	
	function groundItemClick(slotId)
		local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
			if(slot and slot.item) then
				worldScreen:OnGroundButtonClick(slot.slotId, slot.containerId, slot.item.res)
		end
	end
	
	function showGroundItemDescription(slotId)
		local slot = loot.groundItems[slotId + worldScreen:GetTopGroundItem()]
			if(slot and slot.item) then
				Infinity_GetGroundItemDescription(slotId + worldScreen:GetTopGroundItem(), slot.slotId, slot.containerId)
				showItemDescription(slot.item, 2)
		end
	end
	zZinvQuickLoot = 0
`
menu
{
	name 'WORLD_QUICKLOOT'
	align center bottom
	ignoreEsc
	onOpen
	"
		Infinity_SetOffset('WORLD_QUICKLOOT',0, -toolbarTop)
	"
	button
	{
		name "zZlootArrowLeft"
		area 2 4 40 57
		bam GUIBTACT
		frame 44
		enabled "(worldScreen:GroundScrollEnabled(-1) or worldScreen:GroundScrollEnabled(1)) and zZinvQuickLoot == 0"
		action
		"
			worldScreen:OnGroundScroll(-1)
		"
	}
	button
	{
		name "zZlootArrowRight"
		area 610 4 40 57
		bam GUIBTACT
		frame 42
		enabled "(worldScreen:GroundScrollEnabled(-1) or worldScreen:GroundScrollEnabled(1)) and zZinvQuickLoot == 0"
		action
		"
			worldScreen:OnGroundScroll(1)
		"
	}
	button
	{
		enabled "bubbAutolootOptionsOnToggle == 1 and zZinvQuickLoot == 0"
		area 655 9 44 44
		bam GUIBTACT
		frame 18
		tooltip lua "stringsAll.pickupLoot"
		scaleToClip
		action
		"
			pickupLoot()
		"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton00"
		area 46 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(0,'name')"
		tint lua	"getGroundItemProperty(0,'tint')"
		icon lua	"getGroundItemProperty(0,'icon')"
		count lua	"getGroundItemProperty(0,'count')"
		usages lua	"getGroundItemProperty(0,'usages')"
		action "groundItemClick(0)"
		actionAlt "showGroundItemDescription(0)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(0,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton01"
		area 102 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(1,'name')"
		tint lua	"getGroundItemProperty(1,'tint')"
		icon lua	"getGroundItemProperty(1,'icon')"
		count lua	"getGroundItemProperty(1,'count')"
		usages lua	"getGroundItemProperty(1,'usages')"
		action "groundItemClick(1)"
		actionAlt "showGroundItemDescription(1)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(1,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton02"
		area 158 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(2,'name')"
		tint lua	"getGroundItemProperty(2,'tint')"
		icon lua	"getGroundItemProperty(2,'icon')"
		count lua	"getGroundItemProperty(2,'count')"
		usages lua	"getGroundItemProperty(2,'usages')"
		action "groundItemClick(2)"
		actionAlt "showGroundItemDescription(2)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(2,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton03"
		area 214 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(3,'name')"
		tint lua	"getGroundItemProperty(3,'tint')"
		icon lua	"getGroundItemProperty(3,'icon')"
		count lua	"getGroundItemProperty(3,'count')"
		usages lua	"getGroundItemProperty(3,'usages')"
		action "groundItemClick(3)"
		actionAlt "showGroundItemDescription(3)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(3,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton04"
		area 270 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(4,'name')"
		tint lua	"getGroundItemProperty(4,'tint')"
		icon lua	"getGroundItemProperty(4,'icon')"
		count lua	"getGroundItemProperty(4,'count')"
		usages lua	"getGroundItemProperty(4,'usages')"
		action "groundItemClick(4)"
		actionAlt "showGroundItemDescription(4)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(4,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton05"
		area 326 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(5,'name')"
		tint lua	"getGroundItemProperty(5,'tint')"
		icon lua	"getGroundItemProperty(5,'icon')"
		count lua	"getGroundItemProperty(5,'count')"
		usages lua	"getGroundItemProperty(5,'usages')"
		action "groundItemClick(5)"
		actionAlt "showGroundItemDescription(5)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(5,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton06"
		area 383 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(6,'name')"
		tint lua	"getGroundItemProperty(6,'tint')"
		icon lua	"getGroundItemProperty(6,'icon')"
		count lua	"getGroundItemProperty(6,'count')"
		usages lua	"getGroundItemProperty(6,'usages')"
		action "groundItemClick(6)"
		actionAlt "showGroundItemDescription(6)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(6,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton07"
		area 439 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(7,'name')"
		tint lua	"getGroundItemProperty(7,'tint')"
		icon lua	"getGroundItemProperty(7,'icon')"
		count lua	"getGroundItemProperty(7,'count')"
		usages lua	"getGroundItemProperty(7,'usages')"
		action "groundItemClick(7)"
		actionAlt "showGroundItemDescription(7)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(7,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton08"
		area 495 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(8,'name')"
		tint lua	"getGroundItemProperty(8,'tint')"
		icon lua	"getGroundItemProperty(8,'icon')"
		count lua	"getGroundItemProperty(8,'count')"
		usages lua	"getGroundItemProperty(8,'usages')"
		action "groundItemClick(8)"
		actionAlt "showGroundItemDescription(8)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(8,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		enabled	"zZinvQuickLoot == 0"
		name "zZlootButton09"
		area 551 5 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(9,'name')"
		tint lua	"getGroundItemProperty(9,'tint')"
		icon lua	"getGroundItemProperty(9,'icon')"
		count lua	"getGroundItemProperty(9,'count')"
		usages lua	"getGroundItemProperty(9,'usages')"
		action "groundItemClick(9)"
		actionAlt "showGroundItemDescription(9)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(9,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
}
menu
{
	name 'WORLD_QUICKLOOT_EX'
	align center center
	ignoreEsc
	onOpen
	"
		
	"
	onClose
	"
		zZinvQuickLoot = 0
	"
	label
	{
		area 0 0 614 52
	}
	button
	{
		area 574 0 40 52
		bam GUIPRC
		sequence 2
		scaleToClip
		action
		"
			worldScreen:OnGroundScroll(1)
		"
	}
	button
	{
		area 0 0 40 52
		bam GUIPRC
		sequence 3
		scaleToClip
		action
		"
			worldScreen:OnGroundScroll(-1)
		"
	}
	button
	{
		area 42 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(0,'name')"
		tint lua	"getGroundItemProperty(0,'tint')"
		icon lua	"getGroundItemProperty(0,'icon')"
		count lua	"getGroundItemProperty(0,'count')"
		usages lua	"getGroundItemProperty(0,'usages')"
		action "groundItemClick(0); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(0)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(0,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 95 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(1,'name')"
		tint lua	"getGroundItemProperty(1,'tint')"
		icon lua	"getGroundItemProperty(1,'icon')"
		count lua	"getGroundItemProperty(1,'count')"
		usages lua	"getGroundItemProperty(1,'usages')"
		action "groundItemClick(1); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(1)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(1,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 148 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(2,'name')"
		tint lua	"getGroundItemProperty(2,'tint')"
		icon lua	"getGroundItemProperty(2,'icon')"
		count lua	"getGroundItemProperty(2,'count')"
		usages lua	"getGroundItemProperty(2,'usages')"
		action "groundItemClick(2); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(2)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(2,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 201 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(3,'name')"
		tint lua	"getGroundItemProperty(3,'tint')"
		icon lua	"getGroundItemProperty(3,'icon')"
		count lua	"getGroundItemProperty(3,'count')"
		usages lua	"getGroundItemProperty(3,'usages')"
		action "groundItemClick(3); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(3)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(3,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 254 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(4,'name')"
		tint lua	"getGroundItemProperty(4,'tint')"
		icon lua	"getGroundItemProperty(4,'icon')"
		count lua	"getGroundItemProperty(4,'count')"
		usages lua	"getGroundItemProperty(4,'usages')"
		action "groundItemClick(4); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(4)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(4,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 307 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(5,'name')"
		tint lua	"getGroundItemProperty(5,'tint')"
		icon lua	"getGroundItemProperty(5,'icon')"
		count lua	"getGroundItemProperty(5,'count')"
		usages lua	"getGroundItemProperty(5,'usages')"
		action "groundItemClick(5); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(5)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(5,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 360 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(6,'name')"
		tint lua	"getGroundItemProperty(6,'tint')"
		icon lua	"getGroundItemProperty(6,'icon')"
		count lua	"getGroundItemProperty(6,'count')"
		usages lua	"getGroundItemProperty(6,'usages')"
		action "groundItemClick(6); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(6)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(6,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 413 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(7,'name')"
		tint lua	"getGroundItemProperty(7,'tint')"
		icon lua	"getGroundItemProperty(7,'icon')"
		count lua	"getGroundItemProperty(7,'count')"
		usages lua	"getGroundItemProperty(7,'usages')"
		action "groundItemClick(7); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(7)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(7,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 466 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(8,'name')"
		tint lua	"getGroundItemProperty(8,'tint')"
		icon lua	"getGroundItemProperty(8,'icon')"
		count lua	"getGroundItemProperty(8,'count')"
		usages lua	"getGroundItemProperty(8,'usages')"
		action "groundItemClick(8); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(8)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(8,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
	button
	{
		area 519 0 52 52
		bam STONSLOT
		tooltip lua	"getGroundItemProperty(9,'name')"
		tint lua	"getGroundItemProperty(9,'tint')"
		icon lua	"getGroundItemProperty(9,'icon')"
		count lua	"getGroundItemProperty(9,'count')"
		usages lua	"getGroundItemProperty(9,'usages')"
		action "groundItemClick(9); if zZinvQuickLoot == 2 then invAll.updateHighlight = 1 end"
		actionAlt "showGroundItemDescription(9)"
		actionEnter "mouseOverQuicklootContainer = getSlotContainerId(9,'containerId')"
		actionExit "mouseOverQuicklootContainer = nil"
	}
}
menu
{
	name 'WORLD_PICKPARTY'
	modal
	align center bottom
	ignoreEsc
	label
	{
		area 0 0 845 160
		mosaic  GZWPKPC0
	}
	label
	{
		area 14 11 431 32
		text "REMOVE_MEMBERS_LABEL"
		text style "label"
		text color	'O'
		align left center
	}
	label
	{
		area 13 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(0) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(0) ~= nil and worldScreen:GetPickPartyPortrait(0) ~= ''"
	}
	label
	{
		area 87 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(1) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(1) ~= nil and worldScreen:GetPickPartyPortrait(1) ~= ''"
	}
	label
	{
		area 161 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(2) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(2) ~= nil and worldScreen:GetPickPartyPortrait(2) ~= ''"
	}
	label
	{
		area 235 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(3) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(3) ~= nil and worldScreen:GetPickPartyPortrait(3) ~= ''"
	}
	label
	{
		area 309 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(4) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(4) ~= nil and worldScreen:GetPickPartyPortrait(4) ~= ''"
	}
	label
	{
		area 383 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(5) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(5) ~= nil and worldScreen:GetPickPartyPortrait(5) ~= ''"
	}
	label
	{
		area 457 38 74 108
		mosaic 'FCREMPTY'
		glow lua "worldScreen:GetPickPartyCharacterId(6) == worldScreen:GetPickPartyRemoveCharacterId()"
		enabled "worldScreen:GetPickPartyPortrait(6) ~= nil and worldScreen:GetPickPartyPortrait(6) ~= ''"
	}
	button
	{
		area 19 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(0)"
		glow lua "worldScreen:GetPickPartyCharacterId(0) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(0)
		"
	}
	button
	{
		area 93 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(1)"
		glow lua "worldScreen:GetPickPartyCharacterId(1) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(1)
		"
	}
	button
	{
		area 167 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(2)"
		glow lua "worldScreen:GetPickPartyCharacterId(2) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(2)
		"
	}
	button
	{
		area 241 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(3)"
		glow lua "worldScreen:GetPickPartyCharacterId(3) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(3)
		"
	}
	button
	{
		area 315 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(4)"
		glow lua "worldScreen:GetPickPartyCharacterId(4) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(4)
		"
	}
	button
	{
		area 389 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(5)"
		glow lua "worldScreen:GetPickPartyCharacterId(5) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(5)
		"
	}
	button
	{
		area 463 47 61 91
		bitmap lua "worldScreen:GetPickPartyPortrait(6)"
		glow lua "worldScreen:GetPickPartyCharacterId(6) == worldScreen:GetPickPartyRemoveCharacterId()"
		action
		"
			worldScreen:OnPickPartyPortraitButtonClick(6)
		"
	}
	label
	{
		area 647 11 191 32
		text lua "zZgetCharOverflowCnt(game:GetCharacterOverflowCount())"
		text style "normal"
		text color	'$'
		align center center
	}
	button
	{
		area 638 54 200 40
		bam guibutnt
		text "REMOVE_BUTTON"
		text style "button"
		clickable lua "worldScreen:IsPickPartyRemoveButtonClickable()"
		action
		"
			popup2Button(17518, 'REMOVE_BUTTON', function() worldScreen:RemoveCharacterFromParty() end)
		"
	}
	button
	{
		area 638 101 200 40
		bam guibutnt
		text "DONE_BUTTON"
		text style "button"
		clickable lua "worldScreen:IsPickPartyDoneButtonClickable()"
		on esc
		action
		"
			worldScreen:OnPickPartyDoneButtonClick()
		"
	}
}
`
currentSave = 0
function getSaveBackground(row)
	if(row == currentSave) then
		return "FCGLOADC"
	else
		return "FCGLOADB"
	end
end
function getLoadMenuTitle()
	if (gameSaves.isImporting~=1) then
		return t('LOAD_TITLE')
	end
	return t('IMPORT_TITLE')
end
`
menu
{
	name 'LOAD'
	align center top
	ignoreEsc
	onOpen
	"
		zZsetLoadObjectPosition()
		currentSave = nil
	"
	label
	{
		area	0 0 860 2000
		mosaic	'FCLOADFN'
	}
	button
	{
		area	7 0 846 120
		mosaic	'FCLOADTP'
		sound	""
		action 
		"
			currentSave = nil
		"
	}
	label
	{
		name	'zzLoadBottom'
		area	7 800 846 160
		mosaic	'FCLOADBT'
	}
	label
	{
		area 200 10 446 38
		text lua "getLoadMenuTitle() .. zzGetLoadNumSaves(gameSaves)"
		text style "title"
		text color	'O'
	}
	label
	{
		area 174 64 505 38
		text lua "zZgetLoadMenuTitle()"
		text style "title"
		text color	'$'
	}
	list
	{
		column 
		{ 
			width	100
			label
			{
				enabled		"zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber)"
				area 		0 0 846 -1
				mosaic lua  'getSaveBackground(rowNumber)'
				respectClipping 
				align		center center
			}
			button
			{
				enabled		"zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasScreenShot"
				area		10 5 60 60
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	0 8 152 113
				align		center center
			}

			label
			{
				enabled		"zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber)"
				area	450 22 360 28
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "label"
				text color	'O'
				align	left center
			}
	
			label
			{
				enabled		"zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber)"
				area	450 90 360 28
				text	lua "gameSaves.files[rowNumber].chapter .. ' ^D' .. gameSaves.files[rowNumber].time .. '^-'" 
				text style "label"
				text color	'$'
				align	left center			
			}
			label
			{
				enabled		"zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber)"
				area	170 10 260 46
				text	lua "gameSaves.files[rowNumber].sName"
				text style "label"
				text color	'F'
				text point 18
				align	center center
			}
			button
			{
				enabled		 "zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait0"
				area	184 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait1"
				area	226 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait2"
				area	267 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait3"
				area	308 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait4"
				area	350 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncLoadFilterName(rowNumber) and zzFuncLoadFilterSaveName(rowNumber) and zzFuncLoadFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait5"
				area	391 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	1 1 27 44
				align	center center
			}
		}
		actionDbl
		"
			Infinity_PlaySound('GAM_09')
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
			Infinity_PushMenu('SHOW_ACHIVEMENTS')
			zZrestartAchievem = 0
		"
		
		name	'zzLoadArea'
		area 7 120 846 680
		rowheight	dynamic
		hidehighlight
		table		"gameSaves.files"
		var		currentSave
		scrollbar	'GUISCRC'
	}
	edit
	{
		name	'zzLoadFilterSaveName'
		area	47 822 228 30
		var		zzLFilterSaveName
		placeholder	'FC_FILTER_SAVE_NAME'
		text style	'edit'
		maxlines	1
		align	center center
	}
	edit
	{
		name	'zzLoadFilterName'
		area	309 822 228 30
		var		zzLFilterName
		placeholder	'FC_FILTER_NAME'
		text style	'edit'
		maxlines	1
		align	center center
	}
	edit
	{
		name	'zzLoadFilterChapter'
		area	571 822 228 30
		var		zzLFilterChapter
		placeholder	'FC_FILTER_CHAPTER'
		text style	'edit'
		maxlines	1
		align	center center
	}
	button
	{
		name	'zzLoadBtnLoad'
		area		594 892 200 44
		bam		GUIBUTNT
		clickable	lua	"currentSave"		
		text		"LOAD_BUTTON"
		text style	"button"
		action
		"
			loadScreen:LoadGame(gameSaves.files[currentSave].fileName)
			Infinity_PushMenu('SHOW_ACHIVEMENTS')
			zZrestartAchievem = 0
		"
	}
	button
	{
		name	'zzLoadBtnDel'
		enabled		"gameSaves.isImporting ~= 1"
		area		326 892 200 44
		bam		GUIBUTNT
		clickable	lua	"currentSave"		
		text		"DELETE_BUTTON"
		text style	"button"
		action
		"
			popup2Button(15305, 'DELETE_BUTTON', function() loadScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		name	'zzLoadBtnBack'
		area		64 892 200 44
		bam		GUIBUTNT
		text		"BACK_BUTTON"
		text style	"button"
		on escape
		action
		"
			loadScreen:OnMainCancelButtonClick()
		"
	}
}
`
	function compareSaves(s1,s2)
		--return true if s1 comes before s2
		--show the most recent saves first
		return s1.fileTime > s2.fileTime
	end
	function sortSaves()
		table.sort(gameSaves.files,compareSaves)
	end
`
menu
{
	name 'SAVE'
	align center top
	ignoreEsc
	onOpen
	"
		zZsetSaveObjectPosition()
		currentSave = nil
	"
	label
	{
		area	0 0 860 2000
		mosaic	'FCLOADFN'
	}
	button
	{
		area	7 0 846 120
		mosaic	'FCLOADTP'
		sound	""
		action 
		"
			currentSave = nil
		"
	}
	label
	{
		name	'zzSaveBottom'
		area	7 800 846 160
		mosaic	'FCLOADBT'
	}
	label
	{
		area 200 10 446 38
		text lua "t('SAVE_TITLE') .. zzGetLoadNumSaves(gameSaves)"
		text style "title"
		text color	'O'
	}
	label
	{
		area 174 64 505 38
		text lua "zZgetSaveMenuTitle()"
		text style "title"
		text color	'$'
	}
	list
	{
		column 
		{ 
			width	100
			label
			{
				enabled		"zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber)"
				area 		0 0 846 -1
				mosaic lua  'getSaveBackground(rowNumber)'
				respectClipping 
				align		center center
			}
			button
			{
				enabled		"zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasScreenShot"
				area		10 5 60 60
				bitmap res 	"gameSaves.files[rowNumber].screenshot"
				bitmap area	0 8 152 113
				align		center center
			}

			label
			{
				enabled		"zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber)"
				area	450 22 360 28
				text	lua "gameSaves.files[rowNumber].slotName"
				text style "label"
				text color	'O'
				align	left center
			}
			label
			{
				enabled		"zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber)"
				area	450 90 360 28
				text	lua "gameSaves.files[rowNumber].chapter .. ' ^D' .. gameSaves.files[rowNumber].time .. '^-'"
				text style "label"
				text color	'$'
				align	left top			
			}
			label
			{
				enabled		"zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber)"
				area	170 10 260 46
				text	lua "gameSaves.files[rowNumber].sName"
				text style "label"
				text color	'F'
				text point 18
				align	center center
			}
			button
			{
				enabled		 "zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait0"
				area	184 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait0"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait1"
				area	226 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait1"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait2"
				area	267 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait2"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait3"
				area	308 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait3"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait4"
				area	350 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait4"
				bitmap area	1 1 27 44
				align	center center
			}
			button
			{
				enabled		 "zzFuncSaveFilterName(rowNumber) and zzFuncSaveFilterSaveName(rowNumber) and zzFuncSaveFilterChapter(rowNumber) and gameSaves.files[rowNumber].hasPortrait5"
				area	391 84 29 47
				bitmap res "gameSaves.files[rowNumber].portrait5"
				bitmap area	1 1 27 44
				align	center center
			}
		}
		actionDbl
		"
			Infinity_PlaySound('GAM_09')
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
		name	'zzSaveArea'
		area 7 120 846 680
		rowheight	dynamic
		table		"gameSaves.files"
		hidehighlight
		var		currentSave
		scrollbar	'GUISCRC'
	}
	edit
	{
		name	'zzSaveFilterSaveName'
		area	47 822 228 30
		var		zzSFilterSaveName
		placeholder	'FC_FILTER_SAVE_NAME'
		text style	'edit'
		maxlines	1
		align	center center
	}
	edit
	{
		name	'zzSaveFilterName'
		area	309 822 228 30
		var		zzSFilterName
		placeholder	'FC_FILTER_NAME'
		text style	'edit'
		maxlines	1
		align	center center
	}
	edit
	{
		name	'zzSaveFilterChapter'
		area	571 822 228 30
		var		zzSFilterChapter
		placeholder	'FC_FILTER_CHAPTER'
		text style	'edit'
		maxlines	1
		align	center center
	}
	button
	{
		name	'zzSaveBtnSave'
		clickable	lua "currentSave ~= 0 and currentSave ~= nil"
		area	436 892 200 44
		bam		GUIBUTNT
		text		'SAVE_BUTTON'
		text style	"button"
		action
		"
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}
	button
	{
		name	'zzSaveBtnSaveNew'
		area	646 892 200 44
		bam		GUIBUTNT
		text		'NEW_SAVE_LABEL'
		text style	"button"
		action
		"
			currentSave = 0
			Infinity_PushMenu( 'SAVE_NEWSAVE' );
		"
	}
	button
	{
		name	'zzSaveBtnDel'
		area		224 892 200 44
		bam			GUIBUTNT
		clickable	lua	"currentSave"		
		text		"DELETE_BUTTON"
		text style	"button"
		action
		"
			popup2Button(15305, 'DELETE_BUTTON', function() saveScreen:DeleteGame(gameSaves.files[currentSave].slotIndex) end)
		"
	}
	button
	{
		name	'zzSaveBtnBack'
		area		12 892 200 44
		bam			GUIBUTNT
		text		"BACK_BUTTON"
		text style	"button"
		action
		"
			saveScreen:OnMainCancelButtonClick()
		"
	}
}
`
	newSaveName = ''
	function completeSave()
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(#gameSaves.files, newSaveName)
	end
	function completeOverwrite()
		Infinity_PopMenu('SAVE_NEWSAVE')
		saveScreen:SaveGame(gameSaves.files[currentSave].slotIndex,newSaveName)
	end

`
menu
{
	name 'SAVE_NEWSAVE'
	align center center
	modal
	onOpen
	"
		bitmapbools = 
		{
			hasScreenShot = 0,
			hasPortrait0 = 0,
			hasPortrait1 = 0,
			hasPortrait2 = 0,
			hasPortrait3 = 0,
			hasPortrait4 = 0,
			hasPortrait5 = 0,
		}
		newSaveName = ''
		if currentSave ~= 0 then
			newSaveName = gameSaves.files[currentSave].slotName
			bitmapbools = 
			{
				hasScreenShot = gameSaves.files[currentSave].hasScreenShot,
				hasPortrait0 = gameSaves.files[currentSave].hasPortrait0,
				hasPortrait1 = gameSaves.files[currentSave].hasPortrait1,
				hasPortrait2 = gameSaves.files[currentSave].hasPortrait2,
				hasPortrait3 = gameSaves.files[currentSave].hasPortrait3,
				hasPortrait4 = gameSaves.files[currentSave].hasPortrait4,
				hasPortrait5 = gameSaves.files[currentSave].hasPortrait5,
			}
		else
			newSaveName = gameSaves.currentGameInfo.chapter
		end
		Infinity_FocusTextEdit('newSaveNameArea')
	"
	label
	{
		area	0 0 786 341
		mosaic	FCGUISAV
	}
	label
	{
		area	42 20 300 30
		text	"ENTER_SAVE_LABEL"
		text style "label"
		text align left center
		text color	'O'
	}
	edit
	{
		name        "newSaveNameArea"
		area		246 66 466 32
		var			newSaveName	
		text style	"edit"
		text align	left center
		text color	'D'
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				if(currentSave ~= 0) then
					completeOverwrite()
				else
					completeSave()
				end
				Infinity_FocusTextEdit('')
				return -1
			end
			return 1
		"
	}
	label
	{
		area	252 110 424 34
		text	lua "gameSaves.currentGameInfo.chapter .. ' ^D' .. gameSaves.currentGameInfo.time .. '^-'"
		text style "label"
		text align left center
		text color	'$'
	}
	button
	{
		enabled		 "bitmapbools.hasScreenShot"
		area	64 70 160 138
		bitmap res "gameSaves.files[currentSave].screenshot"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait0"
		area	338 164 30 48
		bitmap res "gameSaves.files[currentSave].portrait0"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait1"
		area	402 164 30 48
		bitmap res "gameSaves.files[currentSave].portrait1"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait2"
		area	462 164 30 48
		bitmap res "gameSaves.files[currentSave].portrait2"	
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait3"
		area	524 164 30 48
		bitmap res "gameSaves.files[currentSave].portrait3"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait4"
		area	592 164 30 48
		bitmap res "gameSaves.files[currentSave].portrait4"
		align	center center
	}
	button
	{
		enabled		 "bitmapbools.hasPortrait5"
		area	654 164 30 48
		bitmap res "gameSaves.files[currentSave].portrait5"
		align	center center
	}
	button
	{
		area	528 254 200 40
		bam		GUIBUTNT
		text	"SAVE_BUTTON"
		text style "button"
		action
		"
			completeSave()
		"
	}
	button
	{
		enabled	currentSave
		area	528 254 200 40
		bam		GUIBUTNT
		text	"OVERWRITE_BUTTON"
		text style "button"
		action
		"
			completeOverwrite()
		"
	}
	button
	{
		on escape
		area	228 254 200 40
		bam		GUIBUTNTs
		text	"CANCEL_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu('SAVE_NEWSAVE')			
		"
	}
}
`
worldMessageBoxText = ""
worldMessageBoxLines = 0
worldMessageBoxClickedOnce = 0
worldMessageBoxClickedOnceX = 0
worldMessageBoxClickedOnceXY = 0
function dragMessagesY(newY)
	setMessagesY(newY)
	worldMessageBoxClickedOnce = 1
end
function dragMessagesX(newX)
	setMessagesX(newX)
	worldMessageBoxClickedOnceX = 1
end
function dragMessagesXY(newX, newY)
	setMessagesX(newX)
	setMessagesY(newY)
	worldMessageBoxClickedOnceXY = 1
end
function clampMessageBoxHeight(hNew, hOld)
	if(hNew <= 94) then
		--lower bound on height, sliced rects can't get too small and we don't want to make the message box invisible.
		return hOld - 94
	end
	if(hNew >= 500) then
		--also don't go too high because it looks bad.
		return hOld - 500
	end
	return hOld - hNew
end
function setMessagesY(newY)
	local x,y,w,hOld = Infinity_GetArea('messagesRect')
	h = hOld - newY
	newY = clampMessageBoxHeight(h,hOld)
	
	adjustItemGroup({"messagesHandleY","messagesHandleXY"},0,newY,0,0)
	adjustItemGroup({"messagesRect","messagesRect0","worldMessageBox","messagesRectB","messagesRectC","messagesHandleX"},0,newY,0,-newY)
	
	toolbarTop = toolbarTop - newY
	Infinity_SetOffset('WORLD_QUICKLOOT',0, -toolbarTop)
	
	chatboxScrollToBottom = 1
	worldMessageBoxTop = y + newY
end
function clampMessageBoxWidth(wNew, wOld)
  	local screenWidth, screenHeight = Infinity_GetScreenSize()
	if(wNew <= 863) then
		return wOld - 863
	end
	local az = 863 + 650
	if(wNew >= az) then
		return wOld - az
	end
	local ay = screenWidth - 160
	if(wNew >= ay) then
		return wOld - ay
	end
	return wOld - wNew
end
function setMessagesX(newX)
	local x,y,wOld,h = Infinity_GetArea('messagesRect')
	w = wOld - newX * 2
	newX = -clampMessageBoxWidth(w,wOld) / 2
	
	adjustItemGroup({"messagesHandleX","messagesHandleXY","messagesRectB","messagesRectBottomB"},newX,0,0,0)
	adjustItemGroup({"messagesRect","messagesRectBottom","messagesRect0","worldMessageBox","messagesRectC","messagesRectBottomC","messagesHandleY"},-newX,0,newX*2,0)
	
	chatboxScrollToBottom = 1
end
 
`
menu
{
	name 'WORLD_MESSAGES'
	align center bottom
	ignoreEsc
	onOpen
	"
		zzInCharacterRecord = 0
		Infinity_SetOffset('WORLD_MESSAGES', 0, -toolbarTop)
		local x,y,w,h = Infinity_GetArea('messagesRect')
		toolbarTop = toolbarTop + h
		setMessagesY(worldMessageBoxTop - y)	
	"
	onClose
	"
		local x,y,w,h = Infinity_GetArea('messagesRect')
		toolbarTop = toolbarTop - h
	"
	label
	{
		name 'messagesRect0'
		area -19 -32 893 198
		mosaic 'FCMSGBT0'
	}
	label
	{
		name 'messagesRect'
		area -23 -38 909 204
		mosaic 'FCMSGTPA'
	}
	label
	{
		name 'messagesRectC'
		area   770 -38 100 204
		mosaic 'FCMSGTPC'
		respectClipping
	}
	label
	{
		name 'messagesRectB'
		area  816 -38 63 204
		mosaic 'FCMSGTPB'
	}
	label
	{
		name 'messagesRectBottom'
		area -23 127 909 43
		mosaic 'FCMSGBTA'
	}
	label
	{
		name 'messagesRectBottomC'
		area 770 127 100 43
		mosaic 'FCMSGBTC'
	}
	label
	{
		name 'messagesRectBottomB'
		area 816 127 63 43
		mosaic 'FCMSGBTB'
	}
	button
	{
		area 28 152 0 0
		on pageup
		action
		"
			dragMessagesY(-20)
		"
	}
	button
	{
	 	area 28 152 0 0
		on pagedown
		action
		"
			dragMessagesY(20)
		"
	}
	--button
	--{
	--	area 28 152 0 0
	--	on pageup
	--	action
	--	"
	--		dragMessagesX(-20)
	--	"
	--}
	--button
	--{
	-- 	area 28 152 0 0
	--	on pagedown
	--	action
	--	"
	--		dragMessagesX(20)
	--	"
	--}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				text lua "combatLog[rowNumber]"
				text style "gamelog"
			}
		}
		name "worldMessageBox"
		area 15 -9 842 154
		rowheight dynamic
		table "combatLog"
		hidehighlight
		scrollbar	'GUISCRC'
		scrollbar func "chatboxScroll"
		scrollbar skipReset
	}
	handle
	{
		name 'messagesHandleY'
		area 14 -37 835 22
		pulse lua "worldMessageBoxClickedOnce == 0"
		actionDrag
		"
			dragMessagesY(motionY)
		"
	}
	handle
	{
		name 'messagesHandleX'
		area 857 -15 22 156
		pulse lua "worldMessageBoxClickedOnceX == 0"
		actionDrag
		"
			dragMessagesX(-motionX)
		"
	}
	handle
	{
		name 'messagesHandleXY'
		area 842 -37 37 22
		pulse lua "worldMessageBoxClickedOnceXY == 0"
		actionDrag
		"
			dragMessagesXY(-motionX, motionY)
		"
	}
}
`
	worldNPCDialogText = ""
	worldPlayerDialogChoices = {}
	glowTest = nil
	startingDialogHeight = 0

	function dialogEntryGreyed()
		return not worldScreen:GetInControlOfDialog()
	end

	function getDesiredDialogHeight()
		--get npc area
		local npcX,npcY,npcW,npcH = Infinity_GetArea('worldNPCDialog')
		
		--get dialog choices height
		local choicesHeight = Infinity_GetListHeight('worldPlayerDialogChoicesList')

		return (20 + choicesHeight + npcH + 20)
	end

	function getCurrentDialogHeight()
		local x,y,w,contentHeight = Infinity_GetArea('worldDialogBackground')
		
		if(showWorldMessages == 1) then
			--Don't include the height of the message log (and its offset) if its active
			local xM,yM,wM,hM = Infinity_GetArea('worldDialogMessageBox')
			local xD,yD,wD,hD = Infinity_GetArea('worldDialogMessageDivider')
			contentHeight = contentHeight - (yD - y)
		end

		return contentHeight
	end

	function resizeDialog()
		buildResponsesList()
		--fit the npc text area to the text height.
		Infinity_ScaleToText("worldNPCDialog")
		
		--get npc area
		local npcX,npcY,npcW,npcH = Infinity_GetArea('worldNPCDialog')
		
		if(npcH > 250) then
			--limit the npc text height to 250
			npcH = 250
			Infinity_SetArea('worldNPCDialog',nil,nil,nil,npcH)
		end	
		
		--Get available height to work in
		local contentHeight = getCurrentDialogHeight()

		local desiredHeight = getDesiredDialogHeight()
		
		--make enough room for the choices and dialog
		if(contentHeight < desiredHeight and contentHeight ~= 500) then
			resizeDialogContent(contentHeight - desiredHeight)
		else

			local xD,yD,wD,hD = Infinity_GetArea('worldDialogMessageDivider')
			
			--resize the choices list based on the dialog height
			 cH = contentHeight - npcH - (npcY - yD) - 32
			 cY = npcY + npcH + 16
			
			if cH > 50 then
				--set the new list area.
				Infinity_SetArea('worldPlayerDialogChoicesList',nil,cY,nil,cH)
			else
				local heightDifference = 50 - cH
				cY = cY - heightDifference
				cH = cH + heightDifference
				Infinity_SetArea('worldPlayerDialogChoicesList',nil,cY,nil,cH)

				npcH = npcH - heightDifference
				Infinity_SetArea('worldNPCDialog',nil,nil,nil,npcH)
			end
		end
		
	end
	function resizeDialogContent(newY)
		local x,y,w,hOld = Infinity_GetArea('worldDialogBackground')
		local h = hOld - newY
		
		local contentHeight = getCurrentDialogHeight() - newY
		
		if(contentHeight <= 150) then
			--lower bound on height, should leave plenty of room for portrait.
			-- also don't push our toolbar top out of view.
			return
		end
		if(contentHeight >= 500) then
			-- upper bound as well because too high looks bad.
			newY = hOld - 500
			h = 500
		end
		
		y = y + newY
		Infinity_SetArea('worldDialogBackground',x,y,w,h)
		
		adjustItemGroup({'dialogHandleY', 'worldNPCDialog', 'worldDialogShowMessagesButton', 'worldDialogPortraitArea','worldDialogMessageBox','worldDialogMessageDivider'},0,newY,0,0)
		
		toolbarTop = toolbarTop - newY
		
		resizeDialog()
	end
	function dragDialogMessagesY(newY)
		local x,y,w,hOld = Infinity_GetArea('worldDialogMessageBox')
		local h = hOld - newY
		newY = clampMessageBoxHeight(h,hOld)
		
		--different behavior if the message log is visible.
		adjustItemGroup({'dialogHandleY','worldDialogShowMessagesButton'},0,newY,0,0)
		adjustItemGroup({'worldDialogBackground','worldDialogMessageBox'},0,newY,0,-newY)
		toolbarTop = toolbarTop - newY
		return
	end
	function showMessagesButtonFrame()
		if(showWorldMessages == 1) then return 1 else return 0 end
	end
	function toggleDialogShowMessages()
		if(showWorldMessages == 1) then showWorldMessages = 0 else showWorldMessages = 1 end
		
		local xM,yM,wM,hM = Infinity_GetArea('worldDialogMessageBox')
		local xD,yD,wD,hD = Infinity_GetArea('worldDialogMessageDivider')
		local xB,yB,wB,hB = Infinity_GetArea('worldDialogBackground')
		
		local bgAdjust
		if(showWorldMessages == 1) then
			Infinity_SetArea('worldDialogMessageBox',nil,yB - hM - hD + 8,nil,nil)
			Infinity_SetArea('worldDialogMessageDivider',nil,yB,nil,nil)
		
			bgAdjust = hM + 16 + hD
		else
			bgAdjust = -hM - 16 - hD
		end
		
		adjustItemGroup({'worldDialogBackground'},0,-bgAdjust,0,bgAdjust)
		adjustItemGroup({'dialogHandleY','worldDialogShowMessagesButton'}, 0, -bgAdjust, 0, 0)
		toolbarTop = toolbarTop - bgAdjust
	end
	function getDialogEntryText(row)
		local text = worldPlayerDialogChoices[row].text
		if (row == worldPlayerDialogSelection) then
			--Color the text white when selected
			text = string.gsub(text, "%^0xff212eff", "^0xFFFFFFFF")
		end
		return text
	end
`
menu
{
	name 'WORLD_DIALOG'
	offset 0 -57
	align center bottom
	ignoreEsc
	onOpen
	"	
		zzInCharacterRecord = 0
		Infinity_PopMenu('ITEM_DESCRIPTION')
		local x,y,w,h = Infinity_GetArea('worldDialogBackground')
		toolbarTop = toolbarTop + h
		Infinity_PushMenu('WORLD_DIALOG_CONFIRM')
		if(isTouchActionbar() and not dialogViewMode) then
			Infinity_PushMenu('WORLD_DIALOG_LEFT')
			Infinity_PushMenu('WORLD_DIALOG_RIGHT')
		end
		greySidebars()
	"
	onClose
	"
		local x,y,w,h = Infinity_GetArea('worldDialogBackground')
		toolbarTop = toolbarTop - h
		resizeDialogContent(h - 253)
		Infinity_PopMenu('WORLD_DIALOG_CONFIRM')
		Infinity_PopMenu('WORLD_DIALOG_LEFT')
		Infinity_PopMenu('WORLD_DIALOG_RIGHT')
		ungreySidebars()
	"
	label
	{
		area 0 0 -1 -1
		text lua "zZdialogTextSize()"
	}
	label
	{
		name "worldDialogBackground"
		area 0 0 863 253
		mosaic 'FCMSGTOP'
	}
	label
	{
		area 0 220 863 43
		mosaic 'FCMSGBTM'
	}
	button
	{
		enabled "showWorldMessages"
		area 28 152 0 0
		on pageup
		action
		"
			local x,y,w,h = Infinity_GetArea('worldDialogBackground')
			dragDialogMessagesY(-20)
		"
	}
	button
	{
		enabled "showWorldMessages"
	 	area 28 152 0 0
		on pagedown
		action
		"
			local x,y,w,h = Infinity_GetArea('worldDialogBackground')
			dragDialogMessagesY(20)
		"
	}
	label
	{
		enabled "worldNPCDialogPortrait ~= 'NONE' and worldNPCDialogPortrait ~= ''"
		name "worldDialogPortraitArea"
		area  32 32 102 160
		bitmap lua "worldNPCDialogPortrait"
	}
	label
	{
		enabled "worldNPCDialogPortrait ~= 'NONE' and worldNPCDialogPortrait ~= ''"
		name "worldDialogFrameFCArea"
		area 22 22 122 182
		mosaic "FCGUIFRM"
	}
	text
	{
		name "worldNPCDialog"
		area 40 22 804 17
		text lua "worldNPCDialogText"
		text style "gamelog"
		scrollbar	'GUISCRC'
	}
	text
	{
		name "worldDialogMessageBox"
		enabled "showWorldMessages"
		area  29 -128 806 124
		text lua "worldMessageBoxText"
		text style "gamelog"
		scrollbar	'GUISCRC'
		scrollbar func "chatboxScroll"
	}
	handle
	{
		enabled "showWorldMessages"
		name "dialogHandleY"
		area  0 0 863 32
		actionDrag
		"
			dragDialogMessagesY(motionY)
		"
	}
	text
	{
		name "worldDialogShowMessagesButton"
		area  764 8 62 31
		tooltip lua "t('LOG_HISTORY_TOOLTIP')"
		bam "CHATHIST"
		frame lua "showMessagesButtonFrame()"
		action 
		"
			toggleDialogShowMessages()
		"
	}
	text
	{
		name "worldDialogMessageDivider"
		enabled "showWorldMessages"
		area 33 0 800 8
		mosaic "DLGDIVIZ"
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				enabled "dialogEntryGreyed()"
				rectangle 1
				rectangle opacity 100
			}
			text
			{
				area 0 0 -1 -1
				text lua "getDialogEntryText(rowNumber)"
				text style "gamelog"
			}
		}
		name "worldPlayerDialogChoicesList"
		area  50 55 794 182
		rowheight dynamic
		hidehighlight
		table "worldPlayerDialogChoices"
		var "worldPlayerDialogSelection"
		scrollbar	'GUISCRC'
		actionEnter
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			glowTest = mouseoverRow
			worldPlayerDialogSelection = mouseoverRow
		"
		actionExit
		"
			if(gameOptions.m_bConfirmDialog == true) then return end
			glowTest = nil
			worldPlayerDialogSelection = 0
		"
		action
		"
			--In confirm mode, just highlight the choice.
			if((gameOptions.m_bConfirmDialog == true) or (worldPlayerDialogSelection <= 0)) then return end
			worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
		"
	}
}
`
function getDialogButtonEnabled()
	if(gameOptions.m_bConfirmDialog == true) then
		return true
	else
		return (#worldPlayerDialogChoices == 0)
	end
end

function getDialogButtonClickable()
	if(gameOptions.m_bConfirmDialog == true) then
		return (#worldPlayerDialogChoices == 0) or (worldPlayerDialogSelection and worldPlayerDialogSelection > 0) --no choices, or we've selected a choice.
	else
		return true
	end
end
`
menu
{
	name 'WORLD_DIALOG_CONFIRM'
	align center bottom
	ignoreEsc
	button
	{
		area  0 -30 300 40
		bam GUIBUTWT
		text lua "dialogButtonText"
		enabled "getDialogButtonEnabled()"
		clickable lua "getDialogButtonClickable()"		
		text style "button"
		action 
		"
			if(gameOptions.m_bConfirmDialog == true and (#worldPlayerDialogChoices > 0)) then
				-- if confirm dialog and choices available.
				worldScreen:OnDialogReplyClick(worldPlayerDialogChoices[worldPlayerDialogSelection].marker)
				worldPlayerDialogSelection = 0
			else
				-- no choices, just step.
				worldScreen:StepDialog()
			end
		"
	}
}
menu
{
	name 'CHARACTER_SELECT'
	align center center
	onopen "selectedCharacter = 0"
	ignoreesc
	label
	{
		mosaic FCCREDIT
		area 0 -2 944 768
	}
	label
	{
		area 104 76 738 52
		text "IMPORT_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	list
	{
		column
		{
			width 8
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZgetCharImportPng(rowNumber, selectedCharacter)"
				respectClipping
			}
			label
			{
				area 5 5 64 93
				mosaic FCREMPTO
			}
			label
			{
				area 10 8 54 84
				bitmap lua "character_select[rowNumber].portrait"
			}
		}
		column
		{
			width 92
			label
			{
				area	-65 0 -1 -1
				mosaic	lua "zZgetCharImportPng(rowNumber, selectedCharacter)"
				respectClipping
			}
			label
			{
				area 20 4 -1 -1
				text lua "zZcolorizeCharImport(character_select[rowNumber].name) .. '\n' .. zZscriptDescColorize(character_select[rowNumber].desc)" 
				text style "label"
				text align left top
			}
		}
		area 76 158 800 486
		rowheight 100
		table "character_select"
		var selectedCharacter
		scrollbar GUISCRC
		hidehighlight
		action
		"
			Infinity_OnCharacterImportItemSelect(selectedCharacter - 1)
		"
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action 
		"
			createCharScreen:OnCancelButtonClick()
			Infinity_PopMenu('CHARACTER_SELECT')
		"
	}
	button
	{
		area 374 676 201 44
		bam GUIBUTNT
		text "ACCEPT_BUTTON"
		text style "button"
		clickable 0
	}	
	button
	{
		area 587 676 200 44
		text "DONE_BUTTON" 
		text style "button"
		bam GUIBUTNT
		clickable lua "selectedCharacter ~= 0"
		action 
		"
			createCharScreen:OnDoneButtonClick() 
			Infinity_PopMenu('CHARACTER_SELECT')
		"
	}
}
`
chargen = {
	races = {},
	kits = {},
}
function chargenAcceptOrExport()
	if createCharScreen:GetEngineState() == 4 then
		return t("EXPORT_BUTTON")
	else
		return t("ACCEPT_BUTTON")

	end
end
`
menu
{
	name 'CHARGEN'
	align center center
	ignoreesc
	onOpen "randomCharacter = 0"
	label
	{
		area  0 -2 944 768
		mosaic 'GUICGBZ'
	}
	label
	{
		area 110 82 724 44
		text "CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	text
	{
		area 416 444 464 200
		text lua "zzGenerateChargenInformation(chargen.information)"
		scrollbar 'GUISCRC'
		text style "normal"
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}

	button
	{
		area 64 212 340 32
		bam GUIBUTWS
		sequence 0
		clickable lua "createCharScreen:GetCurrentStep() == 0"
		glow lua "createCharScreen:GetCurrentStep() == 0"
		text "GENDER_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 64 246 340 32
		bam GUIBUTWS
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 3"
		glow lua "createCharScreen:GetCurrentStep() == 3"
		text "RACE_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 64 278 340 32
		bam GUIBUTWS
		sequence 2
		clickable lua "createCharScreen:GetCurrentStep() == 4"
		glow lua "createCharScreen:GetCurrentStep() == 4"
		text "CLASS_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 64 312 340 32
		bam GUIBUTWS
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 7"
		glow lua "createCharScreen:GetCurrentStep() == 7"
		text "ALIGNMENT_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 64 346 340 32
		bam GUIBUTWS
		sequence 0
		clickable lua "createCharScreen:GetCurrentStep() == 8"
		glow lua "createCharScreen:GetCurrentStep() == 8"
		text "ABILITIES_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 64 380 340 32
		bam GUIBUTWS
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 9"
		glow lua "createCharScreen:GetCurrentStep() == 9"
		text "SKILLS_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 64 414 340 32
		bam GUIBUTWS
		sequence 2
		clickable lua "createCharScreen:GetCurrentStep() == 15"
		glow lua "createCharScreen:GetCurrentStep() == 15"
		text "APPEARANCE_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}
	button
	{
		area 64 448 340 32
		bam GUIBUTWS
		sequence 1
		clickable lua "createCharScreen:GetCurrentStep() == 17"
		glow lua "createCharScreen:GetCurrentStep() == 17"
		text "NAME_BUTTON"
		text style "button"
		action "createCharScreen:OnMenuButtonClick()"
	}

	button
	{
		area 64 543 340 32
		text "IMPORT_BUTTON"
		text style "button"
		bam GUIBUTWS
		clickable lua "Infinity_GetCurrentScreenName() == 'CHARGEN'"
		action
		"
			createCharScreen:OnImportCharacterButtonClick()
			randomCharacter = 0
		"
	}
	button
	{
		area 64 577 340 32
		text "BIOGRAPHY_BUTTON"
		text style "button"
		bam GUIBUTWS
		clickable lua "createCharScreen:GetCurrentStep() >= 17"
		action "createCharScreen:OnBiographyButtonClick()"
	}
	button
	{
		enabled "createCharScreen:GetCurrentStep() ~= 15"
		area 64 611 340 32
		text "FC_RANDOM_CHAR"
		text style "button"
		bam GUIBUTWS
		clickable lua "createCharScreen:GetCurrentStep() == 0"
		action "randChar()"
	}
	button
	{
		enabled "randomCharacter == 1 and createCharScreen:GetCurrentStep() == 15"
		area 64 611 340 32
		text "FC_RANDOM_CHAR"
		text style "button"
		bam GUIBUTWS
		action "
			randomCharacter = 0
			for i=1, 5, 1 do
				createCharScreen:OnMainBackButtonClick()
			end
			randomCharacter = 1
			randChar()
		"
	}
	button
	{
		on escape
		area 161 676 197 44
		text "BACK_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable lua "createCharScreen:IsMainBackButtonClickable()"
		action
		"
			createCharScreen:OnMainBackButtonClick()
			randomCharacter = 0
		"
	}
	button
	{
		on escape
		area  161 676 197 44
		text "CANCEL_BUTTON"
		text style "button"
		bam  GUIBUTNT
		enabled "not createCharScreen:IsMainBackButtonClickable()"
		action "createCharScreen:OnMainCancelButtonClick()"
	}
	button
	{
		area 374 676 201 44
		text lua "chargenAcceptOrExport()"
		text style "button"
		bam GUIBUTNT
		clickable lua "createCharScreen:IsChargenComplete()"
		action "createCharScreen:AcceptCharacter(-1)"
	}
	button
	{
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable lua "createCharScreen:IsAdvancedButtonClickable() == true"
		action "createCharScreen:OnAdvancedButtonClick()"
	}
}
`
createCharGenderHelp = %str17236%
`
menu
{
	name 'CHARGEN_GENDER'
	align center center
	ignoreesc
	onOpen "toggleMale = 0; toggleFemale = 0"
	label
	{
		area  0 -2 944 768
		mosaic 'GUICGBZ'
	}
	label
	{
		area 110 82 724 44
		text "CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}
	label
	{
		area 70 140 335 65
		text "GENDER_TITLE"
		text style "title"
		text color	'$'
	}
	label
	{
		area 416 444 464 200
		text lua "zZscriptDescColorize(Infinity_FetchString(createCharGenderHelp))"
		text style "normal"
	}
	button
	{
		area 94 310 131 116
		bam GUIGEND1
		sequence 0
		toggle toggleMale
		scaleToClip
		action "toggleFemale = 0; createCharScreen:OnGenderSelectButtonClick(1)"
	}
	button
	{
		area 238 310 131 116
		bam GUIGEND1
		sequence 1
		toggle toggleFemale
		scaleToClip
		action "toggleMale = 0; createCharScreen:OnGenderSelectButtonClick(2)"
	}
	button
	{
		on escape
		area 161 676 197 44
		text "BACK_BUTTON"
		text style "button"
		bam GUIBUTNT
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable false
	}		
}
`
zzPortraitTable = {}
`
menu
{
	name 'CHARGEN_PORTRAIT'
	align center center
	ignoreesc
	onOpen
	"
		zzPortraitTable = {}
		zZsortPortraitType = 0
		zZfiltPortraitType = 2
		zZcurrPortFiltText = ''
		zZcheckChargenPortrait = ''
		zzCreatePortraitsTable()
		currentChargenPort = 1
		zzGetCurrentPortrait()
	"
	onClose
	"
		zzPortraitTable = {}
		zzCangePortrait = 0
	"
	label
	{
		area  0 -2 944 768
		mosaic 'FCZZPORT'
	}
	label
	{
		enabled		"zzCangePortrait ~= 0"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area 110 82 724 44
		text lua "zZchangePortraitTitle()"
		text style "title"
		text color	'O'
	}
	label
	{
		area 70 140 335 65
		text "APPEARANCE_TITLE"
		text style "title"
		text color	'$'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "createCharScreen:GetCurrentPortrait()"
	}
	label
	{
		area		420 442 210 28
		text lua	'stringsAll.zZportSort'
		text style	'label'
		text color	'O'
		text align	left center
	}
	list
	{
		column
		{
			width 14
			label
			{
				area 3 1 22 22
				bam	'ROUNDBUT'
				frame lua 'zZgetPortSortFrame(rowNumber)'
				scaleToClip
			}
		}
		column
		{
			width 86
			label
			{
				area		5 0 -1 -1
				text lua	"zZportSortTable[rowNumber][2]"
				text style	'label'
				text align	left center
			}
		}
		rowheight 26
		area 420 475 210 104
		table "zZportSortTable"
		var zZcurrPortSort
		hidehighlight
		action
		"
			zZsortPortraitType = zZportSortTable[zZcurrPortSort][3]
			zZsortPortraits()
			zzGetCurrentPortrait()
		"
	}
	label
	{
		area		650 442 210 28
		text lua	'stringsAll.zZportFilt'
		text style	'label'
		text color	'O'
		text align	left center
	}
	list
	{
		column
		{
			width 14
			label
			{
				area 3 1 22 22
				bam	'ROUNDBUT'
				frame lua 'zZgetPortFiltFrame(rowNumber)'
				scaleToClip
			}
		}
		column
		{
			width 86
			label
			{
				area		5 0 -1 -1
				text lua	"zZportFiltTable[rowNumber][2]"
				text style	'label'
				text align	left center
			}
		}
		rowheight 26
		area 650 475 210 78
		table "zZportFiltTable"
		var zZcurrPortFilt
		hidehighlight
		action
		"
			zZfiltPortraitType = zZportFiltTable[zZcurrPortFilt][3]
			if zZfiltPortraitType == 2 then
				Infinity_FocusTextEdit('zZcurrPortFiltEdit')
			else
				zZcurrPortFiltText = ''
			end
			zzGetCurrentPortrait()
		"
	}
	label
		{
			area 420 600 440 40
			text lua	"zZgetPortraitString(currentChargenPort)"
			text align	center center
			text color	'B'
			text point	12
		}
	label
	{
		enabled		'zZfiltPortraitType == 2'
		area		650 555 180 30
		text lua	'zZcheckChargenPortraitFunc()'
		fill		112 111 111 65
	}
	edit
	{
		name		'zZcurrPortFiltEdit'
		area		653 557 174 26
		var			zZcurrPortFiltText
		placeholder	'...'
		text style	"edit"
		text align	center center
		maxlines	1
	}
	button
	{
		area 834 558 26 21
		bam FCBTNIKS
		align center center
		clickable lua "zZfiltPortraitType == 2 and zZcurrPortFiltText ~= ''"
		scaleToClip
		action "zZcurrPortFiltText = ''"
	}
	label
	{
		enabled		'zZfiltPortraitType ~= 2'
		area		650 555 180 30
		fill		112 111 111 65
	}
	list
	{
		column
		{
			width 11
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area 0 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenPort)"
				respectClipping
			}
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area		2 1 34 50
				bam 		'GUIRSP20'
				sequence 	0
				frame		1
				scaleToClip
			}
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area 3 3 29 45
				bitmap lua "zzPortraitTable[rowNumber][2]"
				text align	center center
			}
		}
		column
		{
			width 9
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area -36 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenPort)"
				respectClipping
			}
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area 0 0 -1 51
			}
		}
		column
		{
			width 80
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area -66 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenPort)"
				respectClipping
			}
			label
			{
				enabled		"zZgetPortFiltEnablled(rowNumber)"
				area 0 0 -1 -1
				text lua	"zZgetPortraitString(rowNumber)"
				text align	left center
				text color	'B'
				text point	12
			}
		}
		action
		"
			zzGetCurrentPortrait()
		"
		rowheight dynamic
		area 70 216 330 428
		table "zzPortraitTable"
		var currentChargenPort
		scrollbar	'GUISCRC'
		hidehighlight
	}
	button
	{
		on escape
		enabled		"zzCangePortrait == 0"
		area 161 676 197 44
		text "BACK_BUTTON"
		text style "button"
		bam GUIBUTNT
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		enabled		"zzCangePortrait == 0"
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		enabled		"zzCangePortrait == 0"
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable false
	}
	button
	{
		on escape
		enabled		"zzCangePortrait ~= 0"
		bam 'GUIBUTMT'
		sequence 0
		area 232 676 230 44
		text "CANCEL_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		enabled		"zzCangePortrait ~= 0"
		bam 'GUIBUTMT'
		sequence 0
		area  482 676 230 44
		text "DONE_BUTTON"
		text style "button"
		action 	"Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
}
`
function raceOrGeneralHelp()
	race = chargen.races[currentChargenRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17237)
	end
end
`
menu
{
	name 'CHARGEN_RACE'
	align center center
	ignoreesc
	onopen "currentChargenRace = nil"
	label
	{
		area  0 -2 944 768
		mosaic 'FCZZPORT'
	}
	label
	{
		area 110 82 724 44
		text "CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}
	label
	{
		area 70 140 335 65
		text "RACE_TITLE"
		text style "title"
		text color	'$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetRaceCassMosaic(rowNumber, currentChargenRace)"
				respectClipping
			}
			label
			{
				area 5 15 12 12
				bam lua "zZgetChargenGuiPfc(rowNumber, currentChargenRace)"
				scaleToClip 
			}
			label
			{
				area 0 0 340 44
				text lua "zZsetScriptNameTableTextOther(Infinity_FetchString(chargen.races[rowNumber].name), rowNumber, currentChargenRace)"
				text style "list"
				pad 8 0 0 0
			}
		}
		action "
			if chargen.races[currentChargenRace] then
				createCharScreen:OnRaceSelectButtonClick(chargen.races[currentChargenRace].id)
			end
			"
		rowheight 44
		area 70 216 330 428
		table "chargen.races"
		var currentChargenRace
		scrollbar	'GUISCRC'
		hidehighlight
	}
	text
	{
		area 416 444 464 200
		text lua "zZscriptDescColorize(raceOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable false
	}
}
`
function classOrGeneralHelp()
	class = chargen.class[currentChargenClass]
	if class then
		return Infinity_FetchString(class.desc)
	else
		--only bit that may need to change for dual class! :)
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_CLASS'
	align center center
	ignoreesc
	onopen "currentChargenClass = nil;  currentChargenKit = nil"
	label
	{
		area  0 -2 944 768
		mosaic 'FCZZPORT'
	}
	label
	{
		enabled		"zZdualClass ~= 0"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area 110 82 724 44
		text lua "zZgetDualClassTitle()"
		text style "title"
		text color	'O'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}
	label
	{
		area 70 140 335 65
		text "CLASS_TITLE"
		text style "title"
		text color	'$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetRaceCassMosaic(rowNumber, currentChargenClass)"
				respectClipping
			}
			label
			{
				area 5 15 12 12
				bam lua "zZgetChargenGuiPfc(rowNumber, currentChargenClass)"
				scaleToClip 
			}
			label
			{
				area 0 0 340 44
				text lua "zZsetScriptNameTableTextOther(Infinity_FetchString(chargen.class[rowNumber].name), rowNumber, currentChargenClass)"
				text style "list"
				pad 8 0 0 0
			}
		}
		action "
			if chargen.class[currentChargenClass] then
				createCharScreen:OnClassSelectButtonClick(chargen.class[currentChargenClass].id)
			end
			"
		rowheight 44
		area 70 216 330 428
		table "chargen.class"
		var currentChargenClass
		scrollbar 'GUISCRC'
		hidehighlight
	}
	text
	{
		area 416 444 464 200
		text lua "zZscriptDescColorize(classOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		clickable lua "createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_CLASS"
		action "createCharScreen:OnCancelButtonClick(); Infinity_PopMenu('CHARGEN_CLASS');"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick(); Infinity_PopMenu('CHARGEN_CLASS'); "
	}
	button
	{
		area 587 676 200 44
		text lua "zZdualClassCreatePartyButton()"
		text style "button"
		bam GUIBUTNT
		clickable false
	}
}
`
function kitOrGeneralHelp()
	kit = chargen.kit[currentChargenKit]
	if kit then
		return Infinity_FetchString(kit.desc)
	else
		return Infinity_FetchString(17242)
	end
end
`
menu
{
	name 'CHARGEN_KIT'
	align center center
	ignoreesc
	label
	{
		area  0 -2 944 768
		mosaic 'FCZZPORT'
	}
	label
	{
		area 110 82 724 44
		text "CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}
	label
	{
		area 70 140 335 65
		text "CLASS_KIT_TITLE"
		text style "title"
		text color	'$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetRaceCassMosaic(rowNumber, currentChargenKit)"
				respectClipping
			}
			label
			{
				area 5 15 12 12
				bam lua "zZgetChargenGuiPfc(rowNumber, currentChargenKit)"
				scaleToClip 
			}
			label
			{
				area 0 0 340 44
				text lua "zZsetScriptNameTableTextOther(Infinity_FetchString(chargen.kit[rowNumber].name), rowNumber, currentChargenKit)"
				text style "list"
				pad 8 0 0 0
			}
		}
		action "
			if chargen.kit[currentChargenKit] then
				createCharScreen:OnKitSelectButtonClick(chargen.kit[currentChargenKit].id)
			end
			"
			
		rowheight 44
		area 70 216 330 428
		table "chargen.kit"
		var currentChargenKit
		scrollbar	'GUISCRC'
		hidehighlight
	}
	text
	{
		area 416 444 464 200
		text lua "zZscriptDescColorize(kitOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable false
	}
}
`
function alignmentOrGeneralHelp()
	alignment = chargen.alignment[currentChargenAlignment]
	if alignment then
		return Infinity_FetchString(alignment.desc)
	else
		return Infinity_FetchString(9602)
	end
end
`
menu
{
	name 'CHARGEN_ALIGNMENT'
	align center center
	ignoreesc
	onopen "currentChargenAlignment = nil"
	label
	{
		area  0 -2 944 768
		mosaic 'FCZZPORT'
	}
	label
	{
		area 110 82 724 44
		text "CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}
	label
	{
		area 70 140 335 65
		text "ALIGNMENT_TITLE"
		text style "title"
		text color	'$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetRaceCassMosaic(rowNumber, currentChargenAlignment)"
				respectClipping
			}
			label
			{
				area 5 15 12 12
				bam lua "zZgetChargenGuiPfc(rowNumber, currentChargenAlignment)"
				scaleToClip 
			}
			label
			{
				area 0 0 340 44
				text lua "zZsetScriptNameTableTextOther(Infinity_FetchString(chargen.alignment[rowNumber].name), rowNumber, currentChargenAlignment)"
				text style "list"
				pad 8 0 0 0
			}
		}
		action "
			if chargen.alignment[currentChargenAlignment] then
				createCharScreen:OnAlignmentSelectButtonClick(chargen.alignment[currentChargenAlignment].id)
			end
			"
		rowheight 44
		area 70 216 330 428
		table "chargen.alignment"
		var currentChargenAlignment
		scrollbar	'GUISCRC'
		hidehighlight
	}
	text
	{
		area 416 444 464 200
		text lua "zZscriptDescColorize(alignmentOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable false
	}
}
`
chargen.ability = {
	{name = 'STRENGTH_LABEL', desc = 9582},
	{name = 'DEXTERITY_LABEL', desc = 9584},
	{name = 'CONSTITUTION_LABEL', desc = 9583},
	{name = 'INTELLIGENCE_LABEL', desc = 9585},
	{name = 'WISDOM_LABEL', desc = 9586},
	{name = 'CHARISMA_LABEL', desc = 9587},
}

function abilityOrGeneralHelp()
	ability = chargen.ability[currentChargenAbility]
	if ability and ability.desc ~= -1 then
		createCharScreen:SetAbilityHelpInfo(currentChargenAbility)
		return Infinity_FetchString(ability.desc)
	else
		return Infinity_FetchString(17247)
	end
end

`

menu
{
	name 'CHARGEN_ABILITIES'
	align center center
	ignoreesc
	onopen "ticksPassed = 0; ticksStarting = 0; storedPoint = 0"
	label
	{
		area  0 -2 944 768
		mosaic 'GUICGBZ'
	}
	label
	{
		area 110 82 724 44
		text "CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area  569 164 166 256
		bitmap lua "chargen.portrait"
	}
	label
	{
		area 70 140 335 65
		text "ABILITIES_TITLE"
		text style "title"
		text color	'$'
	}
	list
	{
		column
		{
			width 50
			label
			{
				area -33 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenAbility)"
				respectClipping
			}
			label
			{
				area 0 8 35 35
				text lua "zZgetStoredRoll()"
				text style "normal"
				text color	'F'
				text align center center
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetScriptNameTableTextEx(t(chargen.ability[rowNumber].name), rowNumber, currentChargenAbility)"
				text style "normal"
				text point	16
				text align right center
			}
		}
		column
		{
			width 20
			label
			{
				area -189 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenAbility)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua "chargen.ability[rowNumber].roll"
				text style "normal"
				text align center center
			}
		}
		column
		{
			width 15
			label
			{
				area -252 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenAbility)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				bam GUIOSW
				frame lua "currentCellCheck(3)"
				sequence 0
				text align center center
			}
		}
		column
		{
			width 15
			label
			{
				area -280 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, currentChargenAbility)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				bam GUIOSW
				frame lua "currentCellCheck(4)"
				sequence 1
				text align center center
			}
		}
		action 
		"
			if ticksStarting < 10 then
				if cellNumber == 3 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
				elseif cellNumber == 4 then
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 3 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, true)
					elseif cellNumber == 4 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, false)
					end
					ticksPassed = 0
				end
			end
		"
		rowheight 51
		hidehighlight
		area 70 216 330 311
		table "chargen.ability"
		var currentChargenAbility
	}
	label
	{
		area 64 534 186 38
		text "TOTAL_ROLL_NORMAL"
		text style "normal"
		text color	'O'
		text align right center
	}
	label
	{
		area 250 534 62 40
		text lua "chargen.totalRoll"
		text style "normal"
		text align center center
	}
	label
	{
		area 328 534 72 38
		text lua "zZresultCApointe()"
		text style "normal"
		text align center center
	}

	text
	{
		area 416 444 464 200
		text lua "zZscriptDescColorize(abilityOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		area 62 618 142 30
		bam GUIBUTNS
		sequence 0
		text "REROLL_BUTTON"
		text style "button"
		action "createCharScreen:OnAbilityReRollButtonClick()"
	}
	button
	{
		area 62 564 142 30
		bam GUIBUTNS
		sequence 0
		text "STORE_BUTTON"
		text style "button"
		action "
			local x, y, dn = zZgetSubString(chargen.ability[ 1 ].roll, '/')
			local exceptionalStrength = tonumber(y)
			--if exceptionalStrength ~= nil then
			if dn == 1 then
				if exceptionalStrength == 0 then
					exceptionalStrength = 100
				end
			else
				exceptionalStrength = 0
			end
			chargen.ability[1].exeptional = exceptionalStrength
			for i = 1, 6 do
				chargen.ability[i].storedRoll = chargen.ability[i].roll
			end
			createCharScreen:OnAbilityStoreButtonClick()
			storedPoint = tonumber(chargen.totalRoll)
		"
	}
	button
	{
		area 62 591 142 30
		bam GUIBUTNS
		sequence 0
		text "RECALL_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsAbilityRecallButtonClickable()"
		action "createCharScreen:OnAbilityRecallButtonClick()"
	}
	label
	{
		area 204 574 124 40
		text lua "stringsAll.zzStoredPoints"
		text style	'normal'
		text align right center
		text color 'O'
	}
	label
	{
		area 328 574 72 40
		enabled "storedPoint > 0"
		text lua "storedPoint"
		text style	'normal'
		text color	'$'
		text align center center
	}
	label
	{
		area 204 614 124 40
		text lua "stringsAll.zzDifferes"
		text style	'normal'
		text align right center
		text color 'O'
	}
	label
	{
		area 328 614 72 40
		enabled "storedPoint > 0"
		text lua "zZgetDifferenceBetweenCPSP()"
		text style	'normal'
		text align center center
	}
	button
	{
		on '8'
		action "createCharScreen:OnCheatyMcCheaterson()"
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		text "CREATE_PARTY_BUTTON"
		text style "button"
		bam GUIBUTNT
		clickable false
	}
}
`
function proficiencyOrGeneralHelp()
	local prof = chargen.proficiency[currentChargenProficiency]
	local skill = chargen.thief_skill[currentChargenThiefSkill]
	if prof and prof.desc ~= -1 then
		return Infinity_FetchString(prof.desc)
	elseif skill and skill.desc ~= -1 then
		return Infinity_FetchString(skill.description)
	else
		if(chargen.levelingUp) then
			if(levelUpInfoToggle == 1) then
				return chargen.charInfo
			else
				return chargen.levelInfo
			end
		else
		return Infinity_FetchString(%str9588%)
	end
	end
end

function getProficienciesTitle()
	if(chargen.levelingUp) then
		return t("LEVEL_UP_TITLE")
	elseif zZdualClass ~= 0 then
		return t("DUALCLASS_TITLE")
	else
		return t("CHARGEN_TITLE")
	end
end

function isChargenProficienciesBackButtonClickable()
	return ((not chargen.levelingUp) and createCharScreen:GetCurrentStep() ~= const.STEP_DUALCLASS_PROFICIENCIES)
end
`
menu
{
	name 'CHARGEN_PROFICIENCIES'
	modal
	align center center
	ignoreesc
	onopen
	"
		currentChargenProficiency = nil
		currentChargenThiefSkill = nil
		ticksPassed = 0
		ticksStarting = 0
	"
	label
	{
		area 0 -2 944 768
		mosaic FCCHRPRF
	}
	label
	{
		enabled		"zZdualClass ~= 0"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		enabled		"chargen.levelingUp"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area 104 82 736 44
		text lua "getProficienciesTitle()"
		text style "title"
		text color	'O'
	}
	label
	{
		area 94 154 312 44
		text "PROF_SLOTS_LABEL"
		text style "label"
		text color	'$'
		text point	14
		text align left center
	}
	label
	{
		area 406 154 50 44
		text lua "chargen.extraProficiencySlots"
		text style "label"
		text point	14
		text align center center
	}
	label
	{
		area 484 154 306 44
		text "SKILLS_LABEL"
		text style "label"
		text color	'$'
		text point	14
		text align left center
	}
	label
	{
		area 790 154 50 44
		text lua "chargen.extraSkillPoints"
		text style "label"
		text point	14
		text align center center
	}
	list
	{
		column 
		{
			width 58
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				area 0 2 200 47
				text lua "zZsetTextColorTableScript(Infinity_FetchString(chargen.proficiency[rowNumber].name), rowNumber, currentChargenProficiency)"
				text style "normal"
				align right center
			}
		}
		column
		{
			width 4
			label
			{
				area -249 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				bam FCGUIPFC
				area 0 18 16 16
				align center center
				greyscale lua "zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 0"
				enabled "chargen.proficiency[rowNumber].value > 4 or (zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 4 and zZprofClickable == 0)"
			}
		}
		column
		{
			width 4
			label
			{
				area -265 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				bam FCGUIPFC
				area 0 18 16 16
				align center center
				greyscale lua "zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 0"
				enabled "chargen.proficiency[rowNumber].value > 3 or (zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 3 and zZprofClickable == 0)"
			}
		}
		column
		{
			width 4
			label
			{
				area -281 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				bam FCGUIPFC
				area 0 18 16 16
				align center center
				greyscale lua "zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 0"
				enabled "chargen.proficiency[rowNumber].value > 2 or (zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 2 and zZprofClickable == 0)"
			}
		}
		column
		{
			width 4
			label
			{
				area -297 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				bam FCGUIPFC
				area 0 18 16 16
				align center center
				greyscale lua "zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 0"
				enabled "chargen.proficiency[rowNumber].value > 1 or (zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 1 and zZprofClickable == 0)"
			}
		}
		column
		{
			width 4
			label
			{
				area -313 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				bam FCGUIPFC
				area 0 18 16 16
				align center center
				greyscale lua "zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 0"
				enabled "chargen.proficiency[rowNumber].value > 0 or (zZgetDualClassProfs(Infinity_FetchString(chargen.proficiency[rowNumber].name)) > 0 and zZprofClickable == 0)"
			}
		}
		column
		{
			width 11
			label
			{
				area -329 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				area 0 5 42 42
				bam GUIOSW
				frame lua "getPlusFrame(7)"
				sequence 0
				text align center center
			}
		}
		column
		{
			width 11
			label
			{
				area -365 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenProficiency)"
				respectClipping
			}
			label
			{
				area 0 5 42 42
				bam GUIOSW
				sequence 1
				frame lua "getMinusFrame(8)"
				text align center center
			}
		}
		action "
			currentChargenThiefSkill = nil
			if ticksStarting < 10 then
				if cellNumber == 7 and plusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
				elseif cellNumber == 8 and minusButtonClickable(currentChargenProficiency) then
					createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			currentChargenThiefSkill = nil
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 7 and plusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, true)
					elseif cellNumber == 8 and minusButtonClickable(currentChargenProficiency) then
						createCharScreen:OnProficiencyPlusMinusButtonClick(chargen.proficiency[currentChargenProficiency].id, false)
					end
					ticksPassed = 0
				end
			end
		"
		rowheight 51
		area 64 216 402 430
		table "chargen.proficiency"
		var currentChargenProficiency
		scrollbar	'GUISCRC'
		hidehighlight
	}
	list
	{
		column
		{
			width 60
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenThiefSkill)"
				respectClipping
			}
			label
			{
				area 0 0 180 54
				text lua "zZsetTextColorTableScript(Infinity_FetchString(chargen.thief_skill[rowNumber].name), rowNumber, currentChargenThiefSkill)"
				text style "normal"
				text align right center
			}
		}
		column
		{
			width 10
			label
			{
				area -240 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenThiefSkill)"
				respectClipping
			}
			label
			{
				area 0 0 40 54
				text lua "chargen.thief_skill[rowNumber].value"
				text style "normal"
				text align left center
			}
		}
		column
		{
			width 18
			label
			{
				area -280 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenThiefSkill)"
				respectClipping
			}
			label
			{
				area 25 5 42 42
				bam GUIOSW
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 12
			label
			{
				area -362 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenThiefSkill)"
				respectClipping
			}
			label
			{
				area 0 5 42 42
				bam GUIOSW
				enabled "createCharScreen:IsThiefSkillPlusMinusButtonClickable()"
				frame lua "currentCellCheck(4)"
				sequence 1
				text align center center
			}
		}
		action 
		"
			currentChargenProficiency = nil
			if ticksStarting < 10 then
				if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
					if cellNumber == 3 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
					elseif cellNumber == 4 then
						createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
					end
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate 
		"
			currentChargenProficiency = nil
			if createCharScreen:IsThiefSkillPlusMinusButtonClickable() then
				ticksStarting = ticksStarting + 1
				if ticksStarting > 10 then
					ticksPassed = ticksPassed + 1
					if ticksPassed > 2 then
						if cellNumber == 3 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, true)
						elseif cellNumber == 4 then
							createCharScreen:OnThiefSkillPlusMinusButtonClick(chargen.thief_skill[currentChargenThiefSkill].id, false)
						end
						ticksPassed = 0
					end
				end
			end
		"
		rowheight 51
		area 480 216 400 210
		table "chargen.thief_skill"
		var currentChargenThiefSkill
		scrollbar	'GUISCRC'
		hidehighlight
	}
	label
	{
		area 744 206 28 227
		mosaic	'fcattr01'
	}
	label
	{
		area 264 206 28 447
		mosaic	'fcattr02'
	}

	text
	{
		area 480 442 400 204
		text lua "zZscriptDescColorize(proficiencyOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	
	button
	{
		enabled "chargen.levelingUp"
		area 640 82 200 44
		bam GUIBUTNT
		text "INFORMATION_BUTTON"
		text style "button"
		toggle "levelUpInfoToggle"
		action
		"
			currentChargenProficiency = nil
		"
	}
	button
	{
		enabled "chargen.levelingUp"
		area 587 676 200 44
		bam GUIBUTNT
		text "HIGH_LEVEL_ABILITIES_BUTTON"
		text style "button"
		toggle "levelUpInfoToggle"
		clickable lua "createCharScreen:IsHighLevelAbilitiesButtonClickable()"
		action
		"
			createCharScreen:OnHighLevelAbilitiesButtonClick()
		"
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		clickable lua "isChargenProficienciesBackButtonClickable()"
		action "createCharScreen:OnCancelButtonClick();"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick();		"
	}
	button
	{
		enabled "not chargen.levelingUp"
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text lua zZdualClassCreatePartyButton()
		text style "button"
	}
}
`
function specialistFrame(num)
	if spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[num].key].specialist then
		return 3
	end
	return 0
end
function spellLearnOrUnlearnText()
	if currentChargenChooseMageSpell == nil or not chargen.choose_spell[currentChargenChooseMageSpell].enabled then
		return t("BUTTON_LEARN")
	else
		return t("BUTTON_UNLEARN")
	end
end
function spellLearnOrUnlearnClickable()
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if chargen.extraSpells == 0 and spl ~= nil and spl.enabled == false or spl == nil or spl.known then
		return false
	else
		return true 
	end
end


function chooseSpellOrGeneralHelp()
	local helpText = chargen.helpText
	spl = chargen.choose_spell[currentChargenChooseMageSpell]
	if spl == nil then
		return helpText
	end

	local desc = spellBook[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenChooseMageSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return helpText
	end
end

function nextOrDone()
	if(createCharScreen:HasMoreMageLevels()) then
		return t('NEXT_BUTTON')
	else
		return t('DONE_BUTTON')
	end
end
function shouldShowSpecialistMessage()
	local ret = false

	if chargen.extraSpells == 0 and not createCharScreen:IsDoneButtonClickable() then
		ret = true
	end

	return ret
end
`
menu
{
	name 'CHARGEN_CHOOSE_SPELLS'
	align center center
	ignoreesc
	onOpen 
	"
		table.sort(chargen.choose_spell, sortBySpellName)
		currentChargenChooseMageSpell = nil

		if currentChargenKit == nil then
			currentChargenKit = 0
		end

		local currentKitName = ''

		--gnome illusionists
		if currentChargenRace ~= 6 and chargen.kit then
			currentKitName = Infinity_FetchString(chargen.kit[currentChargenKit].name)
		else
			currentKitName = Infinity_FetchString(%str2862%)
		end
		
		if currentKitName == Infinity_FetchString(%str597%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ABJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str2179%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('CONJURATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str2846%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('DIVINATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str2861%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ENCHANTMENT_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str2862%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('ILLUSION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str3015%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('EVOCATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str12744%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('NECROMANCY_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str12745%) then
			setStringTokenLua('<SCHOOLTOKEN>',t('TRANSMUTATION_SCHOOL_TOKEN'))
		elseif currentKitName == Infinity_FetchString(%str54893%) then
			setStringTokenLua('<SCHOOLTOKEN>',Infinity_FetchString(%str54893%))
		end
	"
	label
	{
		area 0 -2 944 768
		mosaic FCCHSSPL
	}
	label
	{
		enabled		"chargen.levelingUp"
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area 104 82 736 44
		text lua "getProficienciesTitle()"
		text style "title"
		text color	'O'
	}
	label
	{
		area 96 148 370 52
		text lua "'^O' .. t(chargen.title) .. '^-: ' .. t('LEVEL_LABEL') .. ' ^$' .. chargen.currentSpellLevelChoice .. '^-'"
		text style "title"
	}
	list
	{
		column
		{
			width 20
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenChooseMageSpell)"
				respectClipping
			}
			label
			{
				bam FCGUIPFC
				area 4 19 16 16
				align center center
				enabled "chargen.choose_spell[rowNumber].enabled or chargen.choose_spell[rowNumber].known"
			}
			label
			{
				bam GUIBTBUT
				area 20 0 52 52 
				align center center
				frame lua "specialistFrame(rowNumber)"
			}
			label
			{
				area 20 0 52 52
				greyscale lua "chargen.choose_spell[rowNumber].enabled == false"
				bam lua "spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				align center center
			}
		}
		column
		{
			width 80
			label
			{
				area -100 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenChooseMageSpell)"
				respectClipping
			}
			label
			{
				enabled "chargen.choose_spell[rowNumber].enabled"
				area 0 0 -1 -1
				mosaic "fcsplglw"
				respectClipping
			}
			label
			{
				area 4 0 -1 -1
				text lua "zZsetTextColorTableScript(Infinity_FetchString(spellBook[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name), rowNumber, currentChargenChooseMageSpell)"
				text style "normal"
				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
			}
		}
		scrollbar	'GUISCRC'
		rowheight 51
		area 66 214 400 376
		table "chargen.choose_spell"
		var currentChargenChooseMageSpell
		hidehighlight
		action "
			if cellNumber == 1 and not chargen.choose_spell[currentChargenChooseMageSpell].known then
				createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)
			end
		"
	}
	text
	{
		area 486 214 392 376
		text lua "zZchargenSpellDesc(chooseSpellOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}

	label
	{
		area 482 152 168 48
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text color	'$'
		text align right center
	}
	label
	{
		area 662 152 36 48
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}
	label
	{
		area 486 600 392 48
		enabled "shouldShowSpecialistMessage()"
		text lua "t('SPECIALIST_SPELL_REQ')"
		text style "normal"
		text color	'Q'
		text align center center
		rectangle 0
	}
	button
	{
		area 65 604 197 44
		bam GUIBUTNT
		text lua "spellLearnOrUnlearnText()"
		text style "button"
		clickable lua "spellLearnOrUnlearnClickable()"
		action "createCharScreen:OnLearnMageSpellButtonClick(currentChargenChooseMageSpell)"
	}
	button
	{
		area 266 604 197 44
		bam GUIBUTNT
		text "FC_AUTOPICK_BUTTON"
		text style "button"
		clickable lua "chargen.extraSpells > 0"
		action "
			local temp = zZchooseMemMage
			zZchooseMemMage = 1
			autopickMageSpells()
			zZchooseMemMage = temp
		"
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		clickable lua "not chargen.levelingUp"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text lua "zZchangeCreatePartyTitle()"
		text style "button"
	}
}
`

function mageMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizeMageSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = mageSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenMemorizeMageSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return Infinity_FetchString(17253)
	end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_MAGE'
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByMageSpellName)
		currentChargenMemorizeMageSpell = nil
	"
	label
	{
		area 0 -2 944 768
		mosaic FCCHSSPM
	}
	label
	{
		area 104 82 736 44
		text lua "getProficienciesTitle()"
		text style "title"
		text color	'O'
	}
	label
	{
		area 92 148 372 52
		text lua "zzGenMegePriestSplTitle(chargen.title)"
		text style "title"
	}
	list
	{
		column
		{
			width 17
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizeMageSpell)"
				respectClipping
			}
			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				frame lua "specialistFrame(rowNumber)"
				count lua "chargen.choose_spell[rowNumber].count"
			}
		}
		column
		{
			width 60
			label
			{
				area -67 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizeMageSpell)"
				respectClipping
			}
			label
			{
				area 4 0 200 -1
				text lua "zZsetTextColorTableScript(Infinity_FetchString(mageSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name), rowNumber, currentChargenMemorizeMageSpell)"
				text style "normal"
				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
			}
		}
		column
		{
			width 11
			label
			{
				area -303 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizeMageSpell)"
				respectClipping
			}
			label
			{
				area 0 3 45 42
				bam GUIOSW
				frame lua "currentCellCheck(3)"
				sequence 0
			}
		}
		column
		{
			width 12
			label
			{
				area -356 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizeMageSpell)"
				respectClipping
			}
			label
			{
				area 0 3 45 42
				bam GUIOSW
				frame lua "currentCellCheck(4)"
				sequence 1
			}
		}
		scrollbar	'GUISCRC'
		rowheight 51
		area 70 214 394 432
		table "chargen.choose_spell"
		var currentChargenMemorizeMageSpell
		hidehighlight
		action "
			if cellNumber == 3 then
				createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, 1)
			elseif cellNumber == 4 then
				createCharScreen:OnMemorizeMageSpellButtonClick(currentChargenMemorizeMageSpell, -1)
			end
			cellNumber = nil
		"
	}
	label
	{
		area 324 206 28 447
		mosaic	'fcattr02'
	}
	text
	{
		area 484 214 396 432
		text lua "zZchargenSpellDesc(mageMemorizeSpellOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	label
	{
		area 484 148 168 52
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text color	'$'
		text align right center
	}
	label
	{
		area 652 148 36 52
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text lua "nextOrDone()"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
`

function priestMemorizeSpellOrGeneralHelp()
	spl = chargen.choose_spell[currentChargenMemorizePriestSpell]
	if spl == nil then
		return Infinity_FetchString(17253)
	end

	local desc = priestSpells[chargen.currentSpellLevelChoice][spl.key].desc
	if currentChargenMemorizePriestSpell and desc ~= -1 then
		return Infinity_FetchString(desc)
	else
		return Infinity_FetchString(17253)
	end
end

`
menu
{
	name 'CHARGEN_MEMORIZE_PRIEST'
	align center center
	ignoreesc
	onOpen "
		table.sort(chargen.choose_spell, sortByPriestSpellName)
		currentChargenMemorizePriestSpell = nil
	"
	label
	{
		area 0 -2 944 768
		mosaic FCCHSSPM
	}
	label
	{
		area 104 82 736 44
		text lua "getProficienciesTitle()"
		text style "title"
		text color	'O'
	}
	label
	{
		area 100 148 354 52
		text lua "zzGenMegePriestSplTitle(chargen.title)"
		text style "title"
	}
	list
	{
		column
		{
			width 17
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizePriestSpell)"
				respectClipping
			}
			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].groundicon"
				frame 0
				count lua "chargen.choose_spell[rowNumber].count"
			}
		}
		column
		{
			width 60
			label
			{
				area -67 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizePriestSpell)"
				respectClipping
			}
			label
			{
				area 4 0 200 -1
				text lua "zZsetTextColorTableScript(Infinity_FetchString(priestSpells[chargen.currentSpellLevelChoice][chargen.choose_spell[rowNumber].key].name), rowNumber, currentChargenMemorizePriestSpell)"
				text style "normal"
				glow lua "chargen.choose_spell[rowNumber].enabled"
				align left center
			}
		}
		column
		{
			width 11
			label
			{
				area -303 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizePriestSpell)"
				respectClipping
			}
			label
			{
				area 0 4 45 42
				bam GUIOSW
				sequence 0
			}
		}
		column
		{
			width 12
			label
			{
				area -356 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentChargenMemorizePriestSpell)"
				respectClipping
			}
			label
			{
				area 0 4 45 42
				bam GUIOSW
				sequence 1

			}
		}
		scrollbar	'GUISCRC'
		rowheight 51
		area 70 214 394 432
		table "chargen.choose_spell"
		var currentChargenMemorizePriestSpell
		hidehighlight
		action "
			if cellNumber == 3 then
				createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, 1)
			elseif cellNumber == 4 then
				createCharScreen:OnMemorizePriestSpellButtonClick(currentChargenMemorizePriestSpell, -1)
			end
		"
	}
	label
	{
		area 324 206 28 447
		mosaic	'fcattr02'
	}
	text
	{
		area 484 214 396 432
		text lua "zZchargenSpellDesc(priestMemorizeSpellOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}

	label
	{
		area 484 148 168 52
		text "SPELLS_REMAINING_NORMAL"
		text style "normal"
		text color	'$'
		text align right center
	}
	label
	{
		area 652 148 36 52
		text lua "chargen.extraSpells"
		text style "normal"
		text align center center
	}

	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text lua "nextOrDone()"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
`
currentChargenCustomSound = 0
`
menu
{
	name 'CHARGEN_CUSTOMSOUNDS'
	align center center
	ignoreesc
	onOpen "
		prepareSounds(chargen.customSound)
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area 446 150 442 288
		mosaic  FCCUST3Z
	}
	label
	{
		area		104 82 736 44
		text 		"CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area	66 150 366 78
		text	"SOUND_TITLE"
		text color	'$'
		text style	title
	}
	label
	{
		area		588 166 166 256
		text align	center center
		text point	10
		text color	B
		bitmap		lua "characters[currentID].portrait"
	}
	label
	{
		area		56 595 385 10
		mosaic		'fcline01'
		respectClipping
	}
	list
	{
		column 
		{
			width 100
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetScriptSoundPng(rowNumber, currentChargenCustomSound)"
				respectClipping
			}
			label
			{
				area 0 0 384 18
				text lua "zZsetTextColorTableScript(zZsetScriptTextOffset(getSoundStringRef(rowNumber, chargen.customSound), rowNumber, currentChargenCustomSound), rowNumber, currentChargenCustomSound)"
				text style	"list"
				text align	left center
				pad 8 0 0 0
			}
		}
		area 66 242 375 345
		rowheight	22
		table		"chargen.customSound"
		var			"currentChargenCustomSound"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			createCharScreen:OnSoundItemSelect(chargen.customSound[currentChargenCustomSound].index-1)
		"
	}
	text
	{
		area 454 444 426 201
		text lua "zZscriptDescColorize(t('SOUND_DESCRIPTION'))"
		scrollbar 'GUISCRC'
		text style	normal
	}
	button
	{
		area 59 611 382 34
		bam 'GUIBUTWS'
		text "PLAY_SOUND_BUTTON"
		text style "button"
		scaleToClip
		clickable lua "currentChargenCustomSound"
		action "createCharScreen:OnPlayButtonClick()"
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
`
function hatedRaceOrGeneralHelp()
	race = chargen.hatedRace[currentChargenHatedRace]
	if race then
		return Infinity_FetchString(race.desc)
	else
		return Infinity_FetchString(17256)
	end
end
`
menu
{
	name 'CHARGEN_HATEDRACE'
	align center center
	ignoreesc
	label
	{
		area 0 -2 944 768
		mosaic FCCHSSPM
	}
	label
	{
		area		104 82 736 44
		text 		"CHARGEN_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area 100 150 366 52
		text lua "t('HATED_RACE_TITLE') .. '^W:^-'"
		text style "title"
		text color	'$'
	}
	list
	{
		column
		{
			width 100
			label
			{
				area		0 0 -1 -1
				mosaic		lua "zZgetHatedRaceCassMosaic(rowNumber, currentChargenHatedRace)"
				respectClipping
			}
			label
			{
				area 5 15 12 12
				bam lua "zZgetChargenGuiPfc(rowNumber, currentChargenHatedRace)"
				scaleToClip 
			}
			label
			{
				area 0 0 310 44
				text lua "zZsetTextColorTableScript(zZsetScriptTextOffset(zZtoUpperWithCheckLang(Infinity_FetchString(chargen.hatedRace[rowNumber].name), 1, 1), rowNumber, currentChargenHatedRace), rowNumber, currentChargenHatedRace)"
				text style "list"
				pad 8 0 0 0
				
			}
		}
		action "
			if chargen.hatedRace[currentChargenHatedRace] then
				createCharScreen:OnRacialEnemySelectButtonClick(chargen.hatedRace[currentChargenHatedRace].id)
			end
		"
		rowheight 44
		area 72 214 390 426
		table "chargen.hatedRace"
		var currentChargenHatedRace
		scrollbar	'GUISCRC'
		hidehighlight
	}
	label
	{
		area 482 150 366 52
		text lua "zZtoUpperWithCheckLang(Infinity_FetchString(chargen.hatedRace[currentChargenHatedRace].name), 1, 1)"
		text style "title"
		text color	'$'
	}
	text
	{
		area 482 214 398 230
		text lua "zZremoveFirstString(hatedRaceOrGeneralHelp())"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	label
	{
		area 475 444 412 203
		mosaic 		FCBESTYM
	}
	button
	{
		area		556 464 256 166
		text align	center center
		bitmap		lua "zZgetHatedRaceBitmap(chargen.hatedRace[currentChargenHatedRace].id)"
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
`
charNameEdit = ""
`
menu
{
	name 'CHARGEN_NAME'
	modal
	align center center
	ignoreesc
	onopen 
	"
		if chargen.name then
			charNameEdit = chargen.name
		else
			charNameEdit = ''
		end
		Infinity_FocusTextEdit('charNameEditArea')
	"
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z

	}
	label
	{
		area 28 18 598 38
		text 'NAME_LABEL'  
		text style "button"
		text color	'O'
		text point	16
		text align	center center
	}
	label
	{
		area 28 62 598 36
		rectangle 0
		rectangle opacity 220
	}
	edit
	{
		name		"charNameEditArea"
		area		36 66 586 28
		var			charNameEdit
		placeholder	"FC_STRING_CHARNAME"
		text style	"edit"
		text align	center center
		maxlines	1
		maxchars	20
	}
	button
	{
		on escape
		area 58 164 230 40
		bam GUIBUTMT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu(); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 318 164 230 40
		bam GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action "Infinity_PopMenu(); createCharScreen:OnDoneButtonClick()"
	}
}
`
createBioEdit = ""
createBioEditBackup = ""
`
menu
{
	name 'CHARGEN_BIO'
	align center center
	ignoreesc
	onOpen "
		createBioEditBackup = createBioEdit
		%strcreateBioText%
	"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBI
	}
	label
	{
		area 100 76 742 52
		text "BIOGRAPHY_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	edit
	{
		name		"createBioEditArea"
		area		80 154 788 438
		var			createBioEdit
		scrollbar	'GUISCRC'
		text style	"edit"
	}
	button
	{
		area 266 602 200 44
		text "CLEAR_BUTTON"
		text style "button"
		bam GUIBUTNT
		action "createBioEdit = ''"
	}
	button
	{
		area 478 602 200 44
		text "REVERT_BUTTON"
		text style "button"
		bam GUIBUTNT
		action "createBioEdit = createBioEditBackup"
	}
	button
	{
		on escape
		area 161 676 197 44
		text "BACK_BUTTON"
		text style "button"
		bam GUIBUTNT
		action "createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		text "DONE_BUTTON"
		text style "button"
		bam GUIBUTNT
		action "createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
`
list_GUICG_20_2_idx = 0
function NextOrDone()
	if createCharScreen:GetImportState() == 1 then
		return t("NEXT_BUTTON")
	else
		return t("DONE_BUTTON")
	end
end
`
menu
{
	name 'CHARGEN_IMPORT'
	align center center
	ignoreesc
	onOpen
	"
		list_GUICG_20_2_idx = 0
	"
	label
	{
		area 0 -2 944 768
		mosaic FCCUSTBZ
	}
	label
	{
		area		104 82 736 44
		text 		"CHARGEN_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	label
	{
		area 86 152 352 72
		text "IMPORT_TITLE"
		text style "title"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZgetImportExportPng(rowNumber, list_GUICG_20_2_idx)"
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(list_GUICG_20_2[rowNumber], rowNumber, list_GUICG_20_2_idx)"
				text style "list"
				pad 8 0 0 0
			}
		}
		area 72 244 362 400
		rowheight	34
		table		"list_GUICG_20_2"
		var			"list_GUICG_20_2_idx"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			Infinity_OnCharacterImportItemSelect(list_GUICG_20_2_idx - 1)
		"
	}
	text
	{
		area 456 152 416 492
		text 10963
		text style normal
		scrollbar 'GUISCRC'
	}
	button
	{
		on escape
		area 161 676 197 44
		bam  GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text lua "NextOrDone()"
		text style "button"
		clickable lua "list_GUICG_20_2_idx ~= 0"
		action "Infinity_PopMenu('CHARGEN_IMPORT'); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
`
chargenExportCharacterEdit = ""
list_GUICG_21_2_idx = 0
`
menu
{
	name 'CHARGEN_EXPORT'
	modal
	align center center
	ignoreesc
	onopen "chargenExportListId = 0"
	label
	{
		area 0 -2 944 768
		mosaic	FCCUSTBZ
	}
	label
	{
		area 56 592 390 14 
		mosaic fcline01
		respectClipping
	}
	label
	{
		area		104 82 736 44
		text 		"CHARGEN_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	label
	{
		area	82 150 352 76
		text	"EXPORT_TITLE"
		text style	title
		text color	'$'
		text shadow	1
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				mosaic	lua "zZgetScriptSoundPng(rowNumber, chargenExportListId)"
			}
			label
			{
				area 0 0 -1 -1
				text lua "zZsetTextColorTableScript(list_GUICG_21_2[rowNumber], rowNumber, chargenExportListId)"
				text style "list"
				pad 8 0 0 0
			}
		}
		area 70 244 362 342
		rowheight	22
		table		"list_GUICG_21_2"
		var			"chargenExportListId"
		scrollbar	'GUISCRC'
		hidehighlight
		action
		"
			createCharScreen:OnCharacterExportItemSelect(chargenExportListId - 1)
		"
	}
	text
	{
		area 458 168 420 474
		text lua "zZscriptDescColorize(%strs10962%)"
		text style "normal"
	}
	label
	{
		area		64 610 150 40
		text		lua "zZcolorizeString(t('EXPORT_FILENAME_LABEL'), ':')"
		text style	"label"
		text align	right center
		text color '3'
	}
	label
	{
		area		224 610 210 36
		mosaic		'fcexpedt'
	}
	edit
	{
		name		"chargenExportCharacterEditArea"
		area		228 614 202 28
		var			chargenExportCharacterEdit
		text style	"edit"
		text align	center center
		maxlines	1
		maxchars	8
		fill            112 111 111 64
	}
	button
	{
		on escape
		area 161 676 197 44
		bam GUIBUTNT
		text "BACK_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnCancelButtonClick()"
	}
	button
	{
		on return
		area 374 676 201 44
		bam GUIBUTNT
		text "DONE_BUTTON"
		text style "button"
		action "Infinity_PopMenu('CHARGEN_EXPORT'); createCharScreen:OnDoneButtonClick()"
	}
	button
	{
		area 587 676 200 44
		bam GUIBUTNT
		clickable 0
		text "CREATE_PARTY_BUTTON"
		text style "button"
	}
}
menu
{
	name 'CHARGEN_DUALCLASS'
	align center center
	ignoreesc
	onOpen
	"
		zZdualClass = 1
		zZProficienciesDual(characters[currentID], 0)
		zZProficienciesDual(characters[currentID], 1)
	"
	onClose
	"
		zZdualClass = 0
		listDualProfs = {}
	"
	label
	{
		area 0 -2 944 768
		mosaic fcdualcl
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area 104 82 736 44
		text "DUALCLASS_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	label
	{
		area 76 148 788 58
		text lua "'^O' .. Infinity_FetchString(12136) .. '^-: ' .. characters[currentID].class"
		text style "label"
		text color	'$'
	}
	label
	{
		area 606 242 166 256
		bitmap		lua "characters[currentID].portrait"
	}
	text
	{
		area 72 217 388 430
		text lua "zZscriptDescColorize(Infinity_FetchString(10811))" --dual class info
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		area 512 558 340 32
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_CLASS"
		bam GUIBUTWS
		text "CLASS_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnMenuButtonClick()
		"
	}
	button
	{
		area 512 598 340 32
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_PROFICIENCIES"
		bam GUIBUTWS
		text "SKILLS_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnMenuButtonClick()
			zZdualClass = 1
		"
	}
	button
	{
		area 482 676 230 44
		bam 'GUIBUTMT'
		clickable lua "createCharScreen:GetCurrentStep() == const.STEP_DUALCLASS_DONE"
		text "DONE_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnDoneButtonClick()
			zZdualClass = 0
		"
	}
	button
	{
		area 232 676 230 44
		clickable false
		bam 'GUIBUTMT'
		text "BACK_BUTTON"
		text style "button"
		action
		"
			createCharScreen:OnCancelButtonClick()
			zZdualClass = 0
		"
	}
}
`
difficulties = 
{
	{name = "DIFFICULTY_LABEL_STORYMODE", 		description = "DIFFICULTY_DESCRIPTION_STORYMODE_BG2EE"},
	{name = "DIFFICULTY_LABEL_EASY", 			description = "DIFFICULTY_DESCRIPTION_EASY_BG2EE"},
	{name = "DIFFICULTY_LABEL_NORMAL", 			description = "DIFFICULTY_DESCRIPTION_NORMAL_BG2EE"},
	{name = "DIFFICULTY_LABEL_CORERULES", 		description = "DIFFICULTY_DESCRIPTION_CORERULES_BG2EE"},
	{name = "DIFFICULTY_LABEL_HARD", 			description = "DIFFICULTY_DESCRIPTION_HARD_BG2EE"},
	{name = "DIFFICULTY_LABEL_INSANE", 			description = "DIFFICULTY_DESCRIPTION_INSANE_BG2EE"},
	{name = "DIFFICULTY_LABEL_LEGACYOFBHAAL", 	description = "DIFFICULTY_DESCRIPTION_LEGACYOFBHAAL_BG2EE"},
}
fromSinglePlayer = false
fromMultiPlayer = false
function WhoYouGonnaCall()	
	--singleplayer or import
	fromSinglePlayer = (createCharScreen:GetEngineState() == 1 or createCharScreen:GetEngineState() == 7) and multiplayerScreen:GetEngineState() ~= 1
end
`
menu
{
	name 'CHARGEN_DIFFICULTY'
	align center center
	ignoreesc
	onopen 
	"
		currentDifficulty = 3
		WhoYouGonnaCall()
	"
	label
	{
		mosaic FCCREDIT
		area 0 -2 944 768
	}
	label
	{
		area 104 82 736 44
		text "DIFFICULTY_LABEL"
		text style "title"
		text color	'O'
		text shadow	1
	}
	list
	{
		column 
		{ 
			width 15
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetDifficultyMosaic(rowNumber, currentDifficulty)"
				respectClipping
			}
			label
			{
				area 20 5 60 60
				bam "GUIDIFFS"
				frame lua "rowNumber-1"
				align center center
			}
		}
		column 
		{ 
			width 20
			label
			{
				area -118 0 -1 -1
				mosaic lua "zZgetDifficultyMosaic(rowNumber, currentDifficulty)"
				respectClipping
			}
			label
			{
				area 0 0 90 -1
				text lua "t( difficulties[rowNumber].name )"
				text style "label"
				text align center center
				text color	'$'
			}
		}
		column 
		{ 
			width 65
			label
			{
				area -266 0 -1 -1
				mosaic lua "zZgetDifficultyMosaic(rowNumber, currentDifficulty)"
				respectClipping
			}
			label
			{
				area 10 0 490 -1
				text lua "t( difficulties[rowNumber].description )"
				text style "label"
				text point	12
				text align left center
			}
		}
		area 82 150 788 494
		rowheight	69
		table		"difficulties"
		var			"currentDifficulty"
		hidehighlight
		action
		"
		"
	}
	button
	{
		on escape
		area 232 676 230 44
		bam GUIBUTMT
		text 15416
		text style "button"
		action 
		"
			Infinity_PopMenu()
			if(createCharScreen:GetEngineState() == 7) then
				--if create char is in import mode, kick us back to the start screen.
				e:SelectEngine(startEngine)
			end
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		text lua "t('VENTURE_FORTH')"
		text style "button"
		enabled "fromSinglePlayer"
		action 
		"
			Infinity_PopMenu()
			createCharScreen:AcceptCharacter(currentDifficulty)
		"
	}
	button
	{
		area 482 676 230 44
		bam GUIBUTMT
		text 11973
		text style "button"
		enabled "fromMultiPlayer"
		action 
		"
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			fromMultiPlayer = false
			mulitplayerPreexistingDifficulty = currentDifficulty
			connectionScreen:OnNewGameButtonClick()
		"
	}
}
`
currentHLASelection = nil
function chargenHLADescription()
	if currentHLASelection == nil then
		return %str63817%
	else
		return chargen.HLAs[currentHLASelection].description
	end
end
function chargenHLAPlusMinusFrame(cell, rownumber)
	if cell == 3 then
		if chargen.HLAs[rownumber].canAdd then
			return currentCellCheck(cell)
		else
			return 3
		end
	elseif cell == 4 then
		if chargen.HLAs[rownumber].canSubtract then
			return currentCellCheck(cell)
		else
			return 3
		end
	end
end
`
menu
{
	name 'CHARGEN_HIGH_LEVEL_ABILITIES'
	align center center
	ignoreesc
	modal
	onOpen 
	"
		currentHLASelection = nil
	"
	label
	{
		area 0 -2 944 768
		mosaic fchlaabl
	}
	label
	{
		area		282 30 376 46
		text		lua "characters[currentID].name"
		text style  	'title'
		text align	center center
	}
	label
	{
		area 104 76 738 52
		text "HIGH_LEVEL_ABILITIES_TITLE"
		text style "title"
		text color	'O'
		text shadow	1
	}
	label
	{
		area 80 148 384 52
		text lua "'^$' .. stringsAll.zZremainsChoose .. '^-: ' .. chargen.numHLAs"
		text style "title"
		text align	left center
	}
	text
	{
		area 484 152 396 494
		text lua "zZchargenSpellDesc(Infinity_FetchString(chargenHLADescription()))"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	list
	{
		column
		{
			width 17
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentHLASelection)"
				respectClipping
			}
			label
			{
				bam GUIBTBUT
				area 0 0 52 52 
				align center center
				icon lua "chargen.HLAs[rowNumber].icon"
				glow lua "chargen.HLAs[rowNumber].count > 0"
				count lua "chargen.HLAs[rowNumber].count"
			}
		}
		column
		{
			width 60
			label
			{
				area -67 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentHLASelection)"
				respectClipping
			}
			label
			{
				area 4 0 -1 -1
				text lua "zZsetTextColorTableScript(Infinity_FetchString(chargen.HLAs[rowNumber].name), rowNumber, currentHLASelection)"
				text style "normal"
				align left center
			}
		}
		column
		{
			width 11
			label
			{
				area -303 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentHLASelection)"
				respectClipping
			}
			label
			{
				area 0 4 45 42
				bam GUIOSW
				frame lua "chargenHLAPlusMinusFrame(3, rowNumber)"
				sequence 0
			}
		}
		column
		{
			width 12
			label
			{
				area -356 0 -1 -1
				mosaic lua "zZgetScriptSmartPng(rowNumber, currentHLASelection)"
				respectClipping
			}
			label
			{
				area 0 4 45 42
				bam GUIOSW
				frame lua "chargenHLAPlusMinusFrame(4, rowNumber)"
				sequence 1

			}
		}
		scrollbar	'GUISCRC'
		rowheight 51
		area 70 214 394 432
		table "chargen.HLAs"
		var currentHLASelection
		hidehighlight
		action 
		"
			if cellNumber == 3 and chargenHLAPlusMinusFrame(3, currentHLASelection) ~= 3 then
				createCharScreen:OnHLAButtonClick(currentHLASelection, 1)
			elseif cellNumber == 4 and chargenHLAPlusMinusFrame(4, currentHLASelection) ~= 3 then
				createCharScreen:OnHLAButtonClick(currentHLASelection, -1)
			end
			cellNumber = nil
		"
	}
	button
	{
		area 356 676 230 44
		bam GUIBUTMT
		text "DONE_BUTTON"
		text style "button"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action 
		"
			createCharScreen:OnDoneButtonClick()
		"
	}
}
`
TEXT_popup_big = 0
`
menu
{
	name 'POPUP_BIG'
	align center center
	modal
	label
	{
		area 0 0 512 651
		mosaic FSSTRTOP
	}
	text
	{
		area 85 65 332 445
		text lua "Infinity_FetchString(TEXT_popup_big)"
		text style	"label"
		text align left top
		scrollbar 'GUISCRC'
	}
	button
	{
		area 132 553 249 45
		bam 'STARTBUT'
		sequence 2
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu()
		"
	}
}
`
list_GUIMOVIE_0_0_idx = 0
`
menu
{
	name 'MOVIES'
	modal
	align center center
	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(optionsScreen)
		"
	}
	label
	{
		area 0 0 512 651
		mosaic 'FSSTRTOP'
	}
	label
	{
		area 58 6 384 44
		text "MOVIES_TITLE"
		text style "title"
		text color	'O'
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area -8 0 -1 -1
				mosaic lua "zZspellBookBkg(rowNumber, list_GUIMOVIE_0_0_idx, 'fcatrtbm')"
				respectClipping
			}
			label
			{
				area 8 0 384 18
				text lua "list_GUIMOVIE_0_0[rowNumber].description"
				text style	"list"
				text align left center
			}
		}
		area 85 65 332 445
		rowheight	22
		hidehighlight
		table		"list_GUIMOVIE_0_0"
		var		"list_GUIMOVIE_0_0_idx"
		scrollbar	'GUISCRC'
		action
		"
			moviesScreen:OnMovieItemSelect(list_GUIMOVIE_0_0[list_GUIMOVIE_0_0_idx].movieCode)
		"
	}
	button
	{
		area 132 530 249 28
		bam GUIBUTWT
		sequence 0
		scaletoclip
		text "PLAY_MOVIE_BUTTON"
		text style "button"
		clickable lua "list_GUIMOVIE_0_0_idx ~= nil and list_GUIMOVIE_0_0_idx > 0"
		action "moviesScreen:OnPlayButtonClick()"
	}
	button
	{
		area 132 566 249 28
		bam GUIBUTWT
		sequence 1
		scaletoclip
		text "CREDITS_BUTTON"
		text style "button"
		action "moviesScreen:OnCreditsButtonClick()"
	}
	button
	{
		area 132 602 249 28
		bam GUIBUTWT
		sequence 2
		scaletoclip
		text "DONE_BUTTON"
		text style "button"
		action 
		"
			Infinity_PopMenu('MOVIES')
			moviesScreen:OnDoneButtonClick()
		"
	}
}
`
--Multiplayer start.
mp_shownSessions = {}
selectedMp = 0
detailsStr = ""
passwordReq = 0
passwordMp = ""
connectionPlayerNameEdit = ""
connectionFilterNoPasswords = 0
connectionFilterNoFullGames = 0
selectedIndex = 0
connectionIsHosting = false

function connectionBuildGameList()
	local index = 1
	local count = 0
	local entryOK = true
	local foundSelected = false

	for index = 1, #(mp_sessions), 1 do
		entryOK = true
		Infinity_GetPasswordRequired(index)
		if mp_sessions[index] == nil then
			entryOK = false
		elseif mp_sessions[index]["flags"] == nil then
			entryOK = false
		elseif connectionFilterNoPasswords == 1 and passwordReq ~= 0 then
			entryOK = false
		elseif connectionFilterNoFullGames == 1 and mp_sessions[index]["players"] == 6 then 
			entryOK = false
		end

		if entryOK == true then
			count = count + 1
			mp_shownSessions[count] = {}
			mp_shownSessions[count]["actualIndex"] = index
			mp_shownSessions[count]["updated_at"] = mp_sessions[index]["updated_at"]

			if mp_sessions[index]['sessionIDString'] == selectedIndex then
				selectedMp = count
				foundSelected = true
			end
		end
	end

	local tableCount = #(mp_shownSessions) 
	while tableCount > count do
		mp_shownSessions[tableCount] = nil
		tableCount = tableCount - 1
	end

	if foundSelected == false then
		selectedMp = 0
	end
end
function chooseNetworkProtocol(num)
	connectionScreen:SelectServiceProvider(num)
end
function joinGameEnabled()
	if selectedMp <= 0 or mp_shownSessions[selectedMp]['actualIndex'] == nil then
		return 0
	else
		return 1
	end
end
function gameHasPassword(slot)
	if(mp_sessions[mp_shownSessions[slot]["actualIndex"]] == nil) then
		--if the session isn't loaded don't show anything.
		return ""
	end
	Infinity_GetPasswordRequired(mp_shownSessions[slot]["actualIndex"])
	if passwordReq ~= 0 then 
		ret = t("YES")
	else
		ret = t("NO")
	end
	return ret
end
function connectionGetGameName(slot)
	ret = ""

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['name']

	return ret
end
function connectionGetNumPlayers(slot)
	ret = 0

	ret = mp_sessions[mp_shownSessions[slot]["actualIndex"]]['players']

	return ret
end
function connectionGetGameType(slot)
	ret = ""

	if mp_sessions[mp_shownSessions[slot]["actualIndex"]] ~= nil then
		if mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bg2ee-main" then
			ret = t("%strMAIN_GAME_BG2_LABEL%")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bg2ee-bp" then
			ret = t("%strARENA_MODE_BG2_LABEL%")
		elseif mp_sessions[mp_shownSessions[slot]["actualIndex"]]["version"] == "bg2ee-tob" then
			ret = t("%strEXPANSION_BG2_LABEL%")
		end
	end

	return ret
end
function matchMultiplayerGameType(gameVersion)
	%strmatchMultiplayer%
end
`
menu
{
	name 'CONNECTION'
	align center center
	onOpen
	"
		connectionFilterNoPasswords = 0
		connectionFilterNoFullGames = 0
		connectionIsHosting = false
		connectionBuildGameList()

		if connectionPlayerNameEdit == '' then
			connectionSetDefaultGameSettings()
		end
	"
	label
	{
		area 0 0 1024 768
		mosaic FCGINVHB
	}
	label
	{
		area 284 32 450 44
		text  "JOIN_GAME_TITLE"
		text style title
		text color	'O'
	}
	label
	{
		area 72 196 504 24
		text lua "t('GAME_NAME_LABEL')"
		text style "label_parchment"
		align center center
		text color	'M'
	}
	label
	{
		area 576 196 84 24
		text lua "t('PASSWORD_LABEL')"
		text style "label_parchment"
		align center center
		text color	'M'
	}
	label
	{
		area 660 196 70 24
		text lua "t('PLAYERS_LABEL')"
		text style "label_parchment"
		align center center
		text color	'M'
	}
	label
	{
		area 730 196 186 24
		text lua "t('GAME_TYPE_LABEL')"
		text style "label_parchment"
		align center center
		text color	'M'
	}
	list
	{
		column 
		{ 
			width 60 
			label
			{
				enabled	'rowNumber == selectedMp'
				area 0 0 -1 -1
				fill 96 48 10 65
			}
			label
			{
				area 20 0 500 40
				text lua "connectionGetGameName(rowNumber)"
				text style	"list_parchment"
				text color	'I'
				align left center 
			}
		}
		column 
		{ 
			width 10 
			label
			{
				enabled	'rowNumber == selectedMp'
				area 0 0 -1 -1
				fill 96 48 10 65
			}
			label
			{
				area 20 0 210 40
				text lua "zZgameHavePassword(gameHasPassword(rowNumber))"
				text style	"list_parchment"
				align left center 
			}
		}
		column 
		{ 
			width 10 
			label
			{
				enabled	'rowNumber == selectedMp'
				area 0 0 -1 -1
				fill 96 48 10 65
			}
			label
			{
				area 20 0 210 40
				text lua "connectionGetNumPlayers(rowNumber)"
				text style	"list_parchment"
				align left center 
			}
		}
		column 
		{ 
			width 20 
			label
			{
				enabled	'rowNumber == selectedMp'
				area 0 0 -1 -1
				fill 96 48 10 65
			}
			label
			{
				area 20 0 210 40
				text lua "connectionGetGameType(rowNumber)"
				text style	"list_parchment"
				align left center 
			}
		}
		area 72 220 882 364
		hidehighlight
		rowheight	44
		table		"mp_shownSessions"
		var			selectedMp
		scrollbar	'GUISCRC'
		action
		"
			selectedIndex = mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['sessionIDString']
		"
	}
	label
	{
		area 300 80 210 40
		text  "PLAYER_NAME_LABEL"
		text style "label"
		text color	'$'
	}
	label
	{
		area 304 120 206 38
		fill 112 111 111 64
	}
	edit
	{
		name		"ConnectionPlayerNameEditArea"
		area		308 125 196 27
		var			connectionPlayerNameEdit
		text style	"edit"
		text align  center center
		maxlines	1
		maxchars 	32
	}
	label
	{
		area		559 80 165 45
		text		style 'label'
		text		"CONNECTION_NOT_PASSWORD_PROTECTED_LABEL"
		text color	'$'
		align 		left center
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
	}
	button
	{
		area		523 89 26 26
		bam 		ROUNDBUT
		scaleToClip
		glow lua	"connectionFilterNoPasswords"
		tooltip lua "t('CONNECTION_NO_PASSWORDS_TOOLTIP')"
		action
		"
			connectionFilterNoPasswords = 1 - connectionFilterNoPasswords
			connectionBuildGameList()
		"
	}
	label
	{
		area		559 120 165 44
		text		style 'label'
		text		"CONNECTION_NOT_FULL_LABEL"
		text color	'$'
		align 		left center
		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
	}
	button
	{
		area		523 129 26 26
		bam 		ROUNDBUT
		scaleToClip
		glow lua	"connectionFilterNoFullGames"
		tooltip lua "t('CONNECTION_NO_FULL_GAMES_TOOLTIP')"
		action
		"
			connectionFilterNoFullGames = 1 - connectionFilterNoFullGames
			connectionBuildGameList()
		"
	}
	button
	{
		area		96 120 200 44
		bam			GUIBUTNT
		sequence	6
		text  		"CONNECTION_CREATE_NEW_GAME_BUTTON"
		text style	"button"
		action
		"
			Infinity_PushMenu('CONNECTION_CREATE')
		"	
	}
	button
	{
		area		398 602 230 40
		bam			GUIBUTMT
		sequence	6
		text  		"CONNECTION_DIRECT_CONNECTION_BUTTON"
		text style	"button"
		tooltip lua "t('CONNECTION_DIRECT_CONNECT_TOOLTIP')"
		action
		"
			connectionIsHosting = false
			chooseNetworkProtocol(2)
		"	
	}
	button
	{
		area		790 98 60 60
		bam 		'FCGMPBTX'
		sequence 	2
		align 		center center
		tooltip lua "t('CONNECTION_REFRESH_TOOLTIP')"
		action
		"
			selectedMp = 0
			mp_shownSessions = {}
			mp_sessions = {}
			connectionScreen:ClearSessions()
		"
	}
	button
	{
		area		519 676 230 40
		bam			GUIBUTMT
		sequence	6
		text  "JOIN_BUTTON"
		text style	"button"
		clickable lua	"joinGameEnabled()"
		action
		"
			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if string.find(connectionPlayerNameEdit, '%S') == nil then
				Infinity_PushMenu('CONNECTION_NAME')
			elseif passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"	
	}
	button
	{
		area		274 676 230 40
		bam			GUIBUTMT
		sequence	0
		text  "BACK_BUTTON"
		text style	"button"
		on 			escape
		action
		"
			Infinity_PopMenu();
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
}
`
connectionTCPIPEdit = ""
`
menu
{
	name 'CONNECTION_IP'
	modal
	align center center
	onopen "Infinity_FocusTextEdit('ConnectionTCPIPEditArea')"
	label
	{
		area 0 0 680 242
		mosaic 'GUIERR6Z'
	}
	label
	{
		area 42 20 572 64
		text  20681
		text style	"label"
	}
	button
	{
		area		340 170 230 40
		bam		GUIBUTMT
		sequence	0
		text  "DONE_BUTTON"
		text style	"button"
		on		return
		clickable lua "connectionScreen:IsValidAddress(connectionTCPIPEdit)"
		action
		"
			Infinity_PopMenu();
			connectionScreen:JoinGameIPAddress(connectionTCPIPEdit)
		"	
	}
	button
	{
		area		88 170 230 40
		bam		GUIBUTMT
		sequence	1
		text  "CANCEL_BUTTON"
		text style	"button"
		on 		escape
		action
		"
			Infinity_PopMenu();
			chooseNetworkProtocol(1)
		"	
	}
	
	label
	{
		area 56 84 544 44
		fill 112 111 111 64
	}
	
	edit
	{
		name		"ConnectionTCPIPEditArea"
		area		64 90 528 28
		var		connectionTCPIPEdit
		text style	"edit"
		maxlines	1
	}
}
`
connection = {}
connectionSessionNameEdit = ""
connectionSessionPasswordEdit = ""
connectionPasswordProtected = 0
connectionLocalNetworkGame = 0

function connectionCreateGameClickable()
	local ret = string.find(connectionPlayerNameEdit, '%S') ~= nil and string.find(connectionSessionNameEdit, '%S') ~= nil

	if connectionPasswordProtected == 1 then
		ret = ret and string.find(connectionSessionPasswordEdit, '%S') ~= nil
	end

	return ret
end
function connectionSetDefaultGameSettings() 
	local player = t("MULTIPLAYER_DEFAULT_PLAYER")
	local game = t("MULTIPLAYER_ENTER_GAME_NAME")
	local pass = t("MULTIPLAYER_ENTER_GAME_PASSWORD")

	if connectionPlayerNameEdit == "" then
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', player)
		Infinity_SetINIValue('Multiplayer', 'Player Name', connectionPlayerNameEdit)
	end

	if connectionSessionPasswordEdit == "" then
		connectionSessionPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', pass)
		Infinity_SetINIValue('Multiplayer', 'Session Password', connectionSessionPasswordEdit)
	end

	if connectionSessionNameEdit == "" then
		connectionSessionNameEdit = Infinity_GetINIString('Multiplayer', 'Session Name', game)
		Infinity_SetINIValue('Multiplayer', 'Session Name', connectionSessionNameEdit)
	end

	if connectionSessionPasswordEdit ~= "" then
		connectionPasswordProtected = 1
	else
		connectionPasswordProtected = 0
	end

	if connectionScreen:HasServiceProvider() then
		connectionLocalNetworkGame = 0
	else
		connectionLocalNetworkGame = 1
	end
end
`
menu
{
	name 'CONNECTION_CREATE'
	align center center
	ignoreEsc
	modal
	onOpen
	"
		connectionSetDefaultGameSettings()
	"

	label
	{
		area 0 0 512 651
		mosaic "FSSTRTOP"
	}
	label
	{
		area		58 6 384 44
		text		style 'title'
		text		"CREATEGAME_TITLE"
		text color	'O'
	}
	
	label
	{
		area 100 114 298 30
		fill        112 111 111 64
	}
	label
	{
		area		80 69 340 45
		text		style 'label'
		text		"PLAYER_NAME_LABEL"
		text color	'$'
	}
	edit
	{
		name		"connectionPlayerNameEditArea"
		area		110 118 282 22
		var			connectionPlayerNameEdit
		text 		style "edit"
		maxlines	1
		maxchars 	32
	}
	label
	{
		area		80 159 340 45
		text		style 'label'
		text		"SESSION_NAME_LABEL"
		text color	'$'
	}
	label
	{
		area 100 204 304 30
		fill        112 111 111 64
	}
	edit
	{
		name		"connectionSessionNameEditArea"
		area		110 208 288 22
		var			connectionSessionNameEdit
		text 		style	"edit"
		maxlines	1
	}
	text
	{
		area		179 259 241 45
		text		style 'label'
		text		"CONNECTION_PASSWORD_PROTECTED"
		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
		align 		left center
	}
	button
	{
		area		144 268 26 26
		bam 		ROUNDBUT
		glow lua	"connectionPasswordProtected"
		scaleToClip
		tooltip lua "t('CONNECTION_PASSWORD_PROTECTED_TOOLTIP')"
		action
		"
			connectionPasswordProtected = 1 - connectionPasswordProtected
			if connectionPasswordProtected == 1 then
				Infinity_FocusTextEdit('connectionSessionPasswordEditArea')
			end
		"
	}
	text
	{
		area		179 304 241 45
		text		style 'label'
		text		"CONNECTION_LOCAL_NETWORK_GAME"
		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		align 		left center
	}
	button
	{
		area		144 313 26 26
		bam 		ROUNDBUT
		glow lua	"connectionLocalNetworkGame"
		scaleToClip
		tooltip lua "t('CONNECTION_LOCAL_NETWORK_GAME_TOOLTIP')"
		action
		"
			if connectionScreen:HasServiceProvider() then
				connectionLocalNetworkGame = 1 - connectionLocalNetworkGame
			end
		"
	}
	label
	{
		area		80 363 340 45
		text		style 'label'
		text		"CHOOSE_PASSWORD_LABEL"
		text color	'$'
		enabled 	connectionPasswordProtected
	}
	edit
	{
		name		"connectionSessionPasswordEditArea"
		area		80 408 340 45
		var			connectionSessionPasswordEdit
		text 		style "edit"
		text 		align center center
		maxlines	1
		enabled 	connectionPasswordProtected
		fill        112 111 111 64
	}
	button
	{
		clickable lua 	"connectionCreateGameClickable()"
		area			130 530 249 45
		bam				'STARTBUT'
		sequence		2
		text style		"button"
		text			"CREATEGAME_BUTTON"
		action		
		"
			local stringStart = string.find(connectionPlayerNameEdit, '%S');
			connectionPlayerNameEdit = string.sub(connectionPlayerNameEdit, stringStart, string.len(connectionPlayerNameEdit))
			stringStart = string.find(connectionSessionNameEdit, '%S');
			connectionSessionNameEdit = string.sub(connectionSessionNameEdit, stringStart, string.len(connectionSessionNameEdit))

			if connectionPasswordProtected == 1 then
				stringStart = string.find(connectionSessionPasswordEdit, '%S');
				connectionSessionPasswordEdit = string.sub(connectionSessionPasswordEdit, stringStart, string.len(connectionSessionPasswordEdit))
			end
	
			if connectionPasswordProtected == 0 then
				connectionSessionPasswordEdit = ''
			end

			Infinity_PushMenu('CONNECTION_NEWORSAVED')
		"
	}
	button
	{
		area		130 583 249 45
		bam			'STARTBUT'
		sequence	2
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_NEWORSAVED'
	align center center
	modal
	label
	{
		area 0 0 900 234
		mosaic "GUIERR7Z"
	}
	label
	{
		area		12 24 872 40
		text		style 'title'
		text		color '$'
		text		"CONNECTION_NEW_OR_SAVED_GAME_TITLE"
	}
	label
	{
		area		12 64 872 72
		text		style 'label'
		text		"CONNECTION_SELECT_GAME_TYPE_LABEL"
	}
	button
	{
		area		332 164 230 44
		bam			'GUIBUTMT'
		text style	"button"
		text		"NEW_GAME_BUTTON"
		tooltip lua "t('CONNECTION_NEW_GAME_TOOLTIP')"
		action		
		"
			fromMultiPlayer = true
			Infinity_PushMenu('CHARGEN_DIFFICULTY')
		"
	}
	button
	{
		area		610 164 230 44
		bam			'GUIBUTMT'
		text style	"button"
		text		"LOAD_BUTTON"
		tooltip lua "t('CONNECTION_LOAD_GAME_TOOLTIP')"
		action		
		"
			Infinity_PopMenu()
			Infinity_PopMenu()
			Infinity_PopMenu()

			if connectionLocalNetworkGame == 1 then
				connectionIsHosting = true
				chooseNetworkProtocol(2)
			end

			connectionScreen:OnLoadGameButtonClick()
		"
	}

	button
	{
		area		54 164 230 44
		bam			'GUIBUTMT'
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
`
connectionPasswordPasswordEdit = ""
`
menu
{
	name 'CONNECTION_PASSWORD'
	align center center
	modal
	onOpen
	"
		if mp_sessions[selectedMp]['name'] == Infinity_GetINIString('Multiplayer', 'Session Name', '') then
			connectionPasswordPasswordEdit = Infinity_GetINIString('Multiplayer', 'Session Password', '')
		else
			connectionPasswordPasswordEdit = ''
		end
		Infinity_FocusTextEdit('connectionPasswordPasswordEditArea')
	"

	label
	{
		area 0 0 657 234
		mosaic "GUIERR6Z"
	}
	label
	{
		area		26 6 598 45
		text		style 'title'
		text		color 'O'
		text		"PASSWORD_REQUIRED_LABEL"
	}
	label
	{
		area		26 51 598 31
		text		style 'label'
		text		"ENTER_PASSWORD_LABEL"
	}
	button
	{
		on esc
		area 		0 0 1 1
		action 
		"	
			Infinity_PopMenu()
		"
	}
	edit
	{
		name		"connectionPasswordPasswordEditArea"
		area		26 88 598 50
		var			connectionPasswordPasswordEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
					mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
					Infinity_PopMenu()
					Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
				end
				return -1
			end
			return 1
		"
	}
	button
	{
		area 		360 166 200 44
		bam			'GUIBUTNT'
		text style	"button"
		text		"DONE_BUTTON"
		clickable lua "connectionPasswordPasswordEdit ~='' and string.find(connectionPasswordPasswordEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionPasswordPasswordEdit, '%S')
			mp_sessions[selectedMp]['password'] = string.sub(connectionPasswordPasswordEdit, stringStart, string.len(connectionPasswordPasswordEdit) )
			Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
		"
	}
	button
	{
		area 		92 166 200 44
		bam			'GUIBUTNT'
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
`
connectionNameNameEdit = ""
`
menu
{
	name 'CONNECTION_NAME'
	align center center
	modal
	onOpen
	"
		connectionNameNameEdit = ''
		Infinity_FocusTextEdit('connectionNameNameEditArea')
	"
	label
	{
		area 0 0 657 234
		mosaic "GUIERR6Z"
	}
	label
	{
		area		28 16 598 70
		text		style 'title'
		text		color '$'
		text  		"PLAYER_NAME_LABEL"
	}
	button
	{
		on esc
		area 		0 0 1 1
		action 
		"	
			Infinity_PopMenu()
		"
	}
	edit
	{
		name		"connectionNameNameEditArea"
		area		28 82 598 50
		var			connectionNameNameEdit
		text style	"edit"
		text align 	center center
		maxlines	1
		fill        112 111 111 64
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				local stringStart = string.find(connectionNameNameEdit, '%S')
				if stringStart ~= nil then
					connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )
					Infinity_PopMenu()

					Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
					if passwordReq == 0 then
						Infinity_PopMenu(); 
						Infinity_PopMenu(); 
						mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
						Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
					else
						Infinity_PushMenu('CONNECTION_PASSWORD')
					end
				end
				return -1
			end
			return 1
		"
	}

	button
	{
		area 		360 166 200 44
		bam			'GUIBUTNT'
		text style	"button"
		text		"DONE_BUTTON"
		clickable lua "connectionNameNameEdit ~='' and string.find(connectionNameNameEdit, '%S') ~= nil"
		action		
		"
			Infinity_PopMenu(); 
			local stringStart = string.find(connectionNameNameEdit, '%S')
			connectionPlayerNameEdit = string.sub(connectionNameNameEdit, stringStart, string.len(connectionNameNameEdit) )

			Infinity_GetPasswordRequired(mp_shownSessions[selectedMp]['actualIndex'])
			if passwordReq == 0 then
				Infinity_PopMenu(); 
				Infinity_PopMenu(); 
				mp_sessions[mp_shownSessions[selectedMp]['actualIndex']]['password'] = passwordMp
				Infinity_JoinMultiplayerGame(mp_shownSessions[selectedMp]['actualIndex'])
			else
				Infinity_PushMenu('CONNECTION_PASSWORD')
			end
		"
	}
	button
	{
		area 		92 166 200 44
		bam			'GUIBUTNT'
		text style	"button"
		text		"BACK_BUTTON"
		action		
		"
			Infinity_PopMenu()
		"
	}
}
menu
{
	name 'CONNECTION_PLAYERNAME'
	align center center
	ignoreEsc
	modal

	onOpen
	"
		connectionPlayerNameEdit = Infinity_GetINIString('Multiplayer', 'Player Name', 'Player Name')
		Infinity_FocusTextEdit('connectionPlayerNameEditArea')
	"
	label
	{
		area 0 0 512 651
		mosaic "FSSTRTOP"
	}
	label
	{
		area 58 6 384 44
		text style "title"
		text color	'O'
		text "CURRENT_PLAYERS_LABEL"
	}
	label
	{
		area 83 437 338 41
		text style "label"
		text color	'$'
		text "PLAYER_NAME_LABEL"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled	"rowNumber == connectionSelectedPlayer"
				area 0 0 -1 -1
				fill 255 250 205 80
			}
			label
			{
				area 0 0 -1 -1
				text lua "connection.currentPlayers[rowNumber].name"
				text style "edit"
				align center center
			}
		}
		action 
		"
		"
		rowheight 50
		area 83 60 338 377
		hidehighlight
		table "connection.currentPlayers"
		var connectionSelectedPlayer
	}
	edit
	{
		name		"connectionPlayerNameEditArea"
		area		110 479 280 35
		var			connectionPlayerNameEdit
		text style	"edit"
		text align  center center
		maxlines	1
		maxchars 	32
		fill		112 111 111 64
	}
	button
	{
		clickable 	lua "connectionPlayerNameEdit ~= ''"
		area		130 558 249 45
		bam			"STARTBUT"
		sequence	2
		text  		"DONE_BUTTON"
		text style	"button"
		on			return
		action
		"
			Infinity_PopMenu();
			Infinity_PopMenu();
			connectionScreen:SetPlayerName(connectionPlayerNameEdit)
		"	
	}
}

menu
{
	name 'CONNECTION_JOINING'
	modal
	align center center
	label
	{
		area 0 0 657 234
		mosaic 'GUIERR6Z'
	}
	label
	{
		area 30 26 594 110
		text  20274
		text style	"label"
	}
	button
	{
		area		216 170 230 44
		bam		GUIBUTMT
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}
menu
{
	name 'CONNECTION_ERROR'
	modal
	align center center
	label
	{
		area 0 0 465 500
		mosaic 'FCGUIERR'
	}
	label
	{
		area 124 136 220 108
		text lua "Infinity_FetchString(CONNECTION_ERROR_MESSAGE)"
		text style	"label"
	}
	button
	{
		area		132 318 200 40
		bam			'GUIBUTNT'
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu();
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_PROVIDER'
	modal
	align center center
	label
	{
		area 0 0 657 234
		mosaic 'GUIERR6Z'
	}
	label
	{
		area 30 26 594 110
		text "CONNECTION_FINDING_DEVICES"
		text style	"label"
	}
	button
	{
		area 		79 170 230 44
		bam			GUIBUTMT
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on			escape
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			Infinity_PopMenu('CONNECTION');
			connectionScreen:OnMainCancelButtonClick()
		"	
	}
	button
	{
		area 		343 170 230 44
		bam			GUIBUTMT
		sequence	0
		text  		"CONNECTION_LOCAL_NETWORK_GAME"
		text style	"button"
		on			return
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_PROVIDER')
			connectionScreen:StopConnectingToProvider()
		"	
	}
}

menu
{
	name 'CONNECTION_WAITING_FOR_SERVER'
	modal
	align center center
	label
	{
		area 0 0 465 500
		mosaic 'FCGUIERR'
	}
	label
	{
		area 124 136 220 108
		text "CONNECTION_WAITING_FOR_SERVER"
		text style	"label"
	}
	button
	{
		area		132 318 200 40
		bam			'GUIBUTNT'
		sequence	0
		text  		"CANCEL_BUTTON"
		text style	"button"
		on		escape
		action
		"
			Infinity_PopMenu('CONNECTION_WAITING_FOR_SERVER')
			connectionScreen:CancelJoinGame();
		"	
	}
}

menu
{
	name 'BACKGROUND'
	align center center
	label
	{
		area 0 0 3840 2160 
		mosaic lua "getCampaignBackground(startCampaignData[selectedCampaign].background)"
	}
}

`
multiplayer = {}
mpChatEdit = ""
mpHelpTextString = ""
mpModifyingCharacter = -1
mpErrorText = -1
mpErrorState = -1
text_GUIMP_0_25 = ""
text_GUIMP_0_25_lines = 0
multiplayerInPermission = false
multiplayerInPermissionForPlayer = 0

multiplayerSessionName = ""
multiplayerSaveName = ""
multiplayerChapter = ""
multiplayerTimePlayed = ""
multiplayerDifficultyLabel = ""
multiplayerDifficultyImage = 0
mulitplayerPreexistingDifficulty = 0;

multiplayerLocalPlayerID = 1

multiplayerFromInGame = false

mpaCharacters = 
{
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"},
	{ready = false, name = "", class = "", player = 1, portrait = "NOPORTLS", inprogress = false, color = "0xffffff"}
}

mpaPlayers =
{
	{name = "", id = 0, color = "0x7a7aFF"},
	{name = "", id = 0, color = "0xFFAF7A"},
	{name = "", id = 0, color = "0x7aFFa3"},
	{name = "", id = 0, color = "0x57F9FF"},
	{name = "", id = 0, color = "0xF2F188"},
	{name = "", id = 0, color = "0xFE97FF"}
}

function updateMultiplayerPlayerSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] == "" and value ~= "" then
		mpaPlayers[slot][setting] = value
		broadcastPlayerAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "name" and mpaPlayers[slot][setting] ~= "" and value == "" then
		broadcastPlayerRemoved(slot)
		mpaPlayers[slot][setting] = value
	else
		mpaPlayers[slot][setting] = value
	end
end
function updateMultiplayerCharacterSlot(slot,setting,value)
	if multiplayerLocalPlayerID == 1 and setting == "color" and mpaCharacters[slot][setting] == "0xffffff" and value ~= "0xffffff" then
		mpaCharacters[slot][setting] = value
		broadcastCharacterAdded(slot)
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == false and value == true then
		broadcastCharacterReady(slot)
		mpaCharacters[slot][setting] = value
	elseif multiplayerLocalPlayerID == 1 and setting == "ready" and mpaCharacters[slot][setting] == true and value == false then
		broadcastCharacterNotReady(slot)
		mpaCharacters[slot][setting] = value
	else
		mpaCharacters[slot][setting] = value
	end
end

function clearCharacterSlot(slot, announce)
	if announce == true and mpaCharacters[slot]['name'] ~= "" then
		broadcastCharacterRemoved(slot)
	end
	mpaCharacters[slot]['ready'] = false
	mpaCharacters[slot]['name'] = ""
	mpaCharacters[slot]['class'] = ""
	mpaCharacters[slot]['portrait'] = "NOPORTLS"
	mpaCharacters[slot]['inprogress'] = false
	mpaCharacters[slot]['color'] = "0xffffff"
end

function clearPlayerSlot(slot, announce)
	if announce == true and mpaPlayers[slot]["name"] ~= "" then
		broadcastPlayerRemoved(slot)
	end
	mpaPlayers[slot]["name"] = ""
	mpaPlayers[slot]["id"] = 0
end

function getMultiplayerCharacterName(slot, newLine, getClass)
	local ret = ""
	local separator = ", "

	if newLine == true then
		separator = "\n"
	end

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("MULTIPLAYER_CREATE_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] and mpaCharacters[slot]["inprogress"] == false then
		ret = t("MULTIPLAYER_EMPTY_CHARACTER_MESSAGE")
	elseif mpaCharacters[slot]["inprogress"] == true and mpaCharacters[slot]["class"] == "" then
		setStringTokenLua("<PLAYER_NAME_1>",getMultiplayerPlayerName(mpaCharacters[slot]["player"], false, true))
		setStringTokenLua("<SEPERATOR>",separator)
		ret = t("MULTIPLAYER_CREATING_CHARACTER_MESSAGE")
		removeStringTokenLua("<SEPERATOR>")
		removeStringTokenLua("<PLAYER_NAME_1>")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" then
		ret = "^0xff"..mpaCharacters[slot]["color"]..mpaCharacters[slot]["name"].."^-"
		if getClass == true then
			ret = ret..separator..mpaCharacters[slot]["class"]
		end
	end

	return ret
end
function getMultiplayerCharacterButtonText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID == mpaCharacters[slot]["player"] then
		ret = t("CREATE_CHAR_BUTTON")
	elseif mpaCharacters[slot]["name"] == "" and multiplayerLocalPlayerID ~= mpaCharacters[slot]["player"] then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] == "" then
		ret = ""
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] ~= multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID and multiplayer.allowreformparty == false and multiplayerDifficultyLabel ~= "" then
		ret = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")
	elseif mpaCharacters[slot]["name"] ~= "" and mpaCharacters[slot]["class"] ~= "" and mpaCharacters[slot]["player"] == multiplayerLocalPlayerID then
		ret = t("MULTIPLAYER_EDIT_CHAR_BUTTON")
	end

	return ret
end
function shouldGreyscaleEditButton(slot)
	local ret = false
	local storedString = t("MULTIPLAYER_VIEW_DETAILS_BUTTON")

	if multiplayerFromInGame == true then
		ret = true
	end

	if ret == true and getMultiplayerCharacterButtonText(slot) == storedString  then
		ret = false
	end

	if ret == true and (multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[7] == true) then
		ret = false
	end

	if ret == true and mpaCharacters[slot]["name"] == "" then
		ret = false
	end

	if ret == false and mpaCharacters[slot]['ready'] == true and getMultiplayerCharacterButtonText(slot) ~= storedString and multiplayerFromInGame == false then
		ret = true
	end

	return ret
end
function getMultiplayerCharacterReadyText(slot)
	local ret = ""

	if mpaCharacters[slot]["name"] == "" and mpaCharacters[slot]["inprogress"] == false then
		ret = ""
	elseif mpaCharacters[slot]["ready"] == false then
		ret = t("MULTIPLAYER_NOT_READY_MESSAGE")
	elseif mpaCharacters[slot]["ready"] == true then
		ret = t("MULTIPLAYER_READY_MESSAGE")
	end

	return ret
end
function getMultiplayerPlayerName(slot,newLine,hostyou)
	local ret = mpaPlayers[slot]["name"]
	if ret ~= "" then
		ret = "^0x"..mpaPlayers[slot]["color"]..mpaPlayers[slot]["name"].."^-"
	end

	local separator = " "
	if newLine == true then
		separator = "\n"
	end
	
	local white = "^B"

	if hostyou == true then
		if slot == multiplayerLocalPlayerID then
			ret = ret..separator..white..t("MULTIPLAYER_PLAYER_YOU").."^-"
		elseif slot == 1 then
			ret = ret..separator..white..t("MULTIPLAYER_PLAYER_HOST").."^-"
		elseif ret == "" then
			ret = "^0xFF9B9B9B"..t("MULTIPLAYER_EMPTY_PLAYER").."^-"
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacter(player,slot)
	local count = 0
	local ret = "NOCTRL" -- need blank square or something

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if currentMultiplayerSelectPlayer == player and mpDraggedCharacter == index then
			slot = slot + 1
		end

		if count == slot then
			ret = mpaCharacters[index]["portrait"]
			break
		end
	end

	return ret
end
function getMultiplayerPlayerControlledCharacterSlot(player,slot)
	local count = 0
	local ret = -1

	local index = 1
	for index = 1, 6, 1 do
		if mpaCharacters[index]["player"] == player then
			count = count + 1
		end

		if count == slot then
			ret = index
			break
		end
	end

	return ret
end

function getPlayerKickWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 0
	else
		return 10
	end
end

function getPlayerNameWidth(slot)
	if multiplayerLocalPlayerID ~= 1 or slot == 1 then
		return 45
	else
		return 35
	end
end

function getStartGameButtonTooltip()
	if multiplayer.donebuttonclickable then
		return ""
	else
		return t("MULTIPLAYER_CANNOT_START")
	end
end

function updateMultiplayerSessionData(sessionName, saveName, chapter, timePlayed, difficulty)
	local gold = "^O"
	local white = "^B"
	multiplayerSessionName = gold..sessionName.."^-"

	if areaName ~= "" then
		multiplayerSaveName = gold..t("MULTIPLAYER_SAVED_GAME_LABEL").."^- " .. white ..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- " .. white..chapter.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_LABEL").."^- " .. white..timePlayed.."^-"
		if difficulty > 0 then
			mulitplayerPreexistingDifficulty = difficulty
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^- " .. white..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	else
		multiplayerSaveName = gold..t("MULTIPLAYER_NEW_GAME_LABEL").."^- " .. white..saveName.."^-"
		multiplayerChapter = gold..t("MULTIPLAYER_CHAPTER_LABEL").."^- " .. white..chapter.."^-"
		multiplayerTimePlayed = gold..t("MULTIPLAYER_TIME_PLAYED_NEW_GAME").."^-"
		if difficulty > 0 then
			multiplayerDifficultyLabel = gold..t("MULTIPLAYER_DIFFICULTY_LABEL").."^- " .. white..t(difficulties[difficulty].name).."^-"
			multiplayerDifficultyImage = difficulty - 1
		end
	end
end

function broadcastCharacterControlChange(slot, newPlayer)
	if mpaCharacters[slot]["player"] ~= newPlayer then
		local host = getMultiplayerPlayerName(1,false,false)
		local player = getMultiplayerPlayerName(newPlayer,false,false)
		setStringTokenLua("<PLAYER_NAME_1>",host)
		setStringTokenLua("<PLAYER_NAME_2>",player)
		local message = t("MULTIPLAYER_SLOT_"..slot.."_ASSIGNED_TO")
		removeStringTokenLua("<PLAYER_NAME_1>")
		removeStringTokenLua("<PLAYER_NAME_2>")
		Infinity_SendChatMessage(message, true) 
	end
end

function broadcastCharacterAdded(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_ADDED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterRemoved(slot)
	local player = getMultiplayerPlayerName(mpaCharacters[slot]["player"],false,false)
	local character = getMultiplayerCharacterName(slot, false, true)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_HAS_REMOVED")
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_READY_TO_START")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastCharacterNotReady(slot)
	local character = getMultiplayerCharacterName(slot, false, false)
	setStringTokenLua("<CHARACTER_NAME_1>",character)
	local message = t("MULTIPLAYER_IS_NO_LONGER_READY")
	removeStringTokenLua("<CHARACTER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerAdded(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_JOINED_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

function broadcastPlayerRemoved(slot)
	local player = getMultiplayerPlayerName(slot,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
	local message = t("MULTIPLAYER_HAS_LEFT_THE_GAME")
	removeStringTokenLua("<PLAYER_NAME_1>")
	Infinity_SendChatMessage(message, true) 
end

mpDraggedCharacter = nil
mpDraggedPortrait = 'NOCTRL'

function multiplayerStartSwapPortraits(player, character)
	if multiplayerLocalPlayerID == 1 and player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" then
		mpDraggedCharacter = character
		multiplayerScreen:SetModifiedCharacterSlot(character - 1)
		currentMultiplayerSelectPlayer = player
		mpDraggedPortrait = mpaCharacters[character]["portrait"]
	end
end

function multiplayerStopSwapPortraits(player)
	if multiplayerLocalPlayerID == 1 then
		if player > 0 and player < 7 and mpaPlayers[player]["name"] ~= "" and currentMultiplayerSelectPlayer ~= nil then
			if mpaCharacters[mpDraggedCharacter]['ready'] == true and mpaCharacters[mpDraggedCharacter]['player'] ~= player then 
				multiplayerScreen:OnReadyButtonClick(mpDraggedCharacter-1)
			end
			broadcastCharacterControlChange(mpDraggedCharacter, player)
			multiplayerScreen:OnPlayerSelection(player-1)
		end
		mpDraggedCharacter = nil
		currentMultiplayerSelectPlayer = nil
		mpDraggedPortrait = 'NOCTRL'
	end
end

function getMultiplayerReadyTooltip(character)
	local ret = ""

	if mpaCharacters[character]["ready"] == true then
		ret = t("MULTIPLAYER_READY_BUTTON_ON_TOOLTIP")
	else
		ret = t("MULTIPLAYER_READY_BUTTON_OFF_TOOLTIP")
	end

	return ret
end

function multiplayerUpdateDraggedPortrait()
	if mpDraggedPortrait ~= 'NOCTRL' and multiplayerLocalPlayerID == 1 then
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		x,y = Infinity_GetMousePosition();
		x = x - 20
		y = y - 30
		Infinity_SetArea('multiplayerDraggingPortraitImage',x,y,w,h)
		return true
	else
		local x,y,w,h = Infinity_GetArea('multiplayerDraggingPortraitImage')
		Infinity_SetArea('multiplayerDraggingPortraitImage',-20,-20,w,h)
		return false
	end
end

function get4CheckFrame(slot)
	local ret = 1

	if mpaCharacters[slot]['ready'] == true and mpaCharacters[slot]['player'] == multiplayerLocalPlayerID then
		ret = 0
	elseif mpaCharacters[slot]['ready'] == true then
		ret = 2
	end

	return ret
end
`
menu
{
	name 'MULTIPLAYER'
	align center center
	ignoreesc
	onOpen
	"
		existingDifficulty = Infinity_GetOption(12, 8) + 1;
		multiplayerFromInGame = multiplayerScreen:GetEngineState() == 2
	"
	label 
	{
		mosaic 'FCGMPLAY'
		area 0 0 1024 768
	}
	label
	{
		area 284 32 454 44
		text "ARBITRATION_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area 516 116 472 570
		fill 0 0 0 255
	}
	label
	{
		area 519 116 468 93
		fill 100 25 25 180
	}
	label
	{
		area 519 211 468 93
		fill 50 50 50 180
	}
	label
	{
		area 519 306 468 93
		fill 100 25 25 180
	}
	label
	{
		area 519 401 468 93
		fill 50 50 50 180
	}
	label
	{
		area 519 496 468 93
		fill 100 25 25 180
	}
	label
	{
		area 519 591 468 93
		fill 50 50 50 180
	}
	list
	{
		column
		{ 
			width 32 
			label
			{
				area 		7 5 140 44
				text lua	"getMultiplayerPlayerName(mpaCharacters[rowNumber]['player'],true,true)"
				text style 	"label"
				enabled 	"multiplayerLocalPlayerID == 1 and rowNumber ~= 1"
			}
			label
			{
				area 		7 0 140 95
				text lua	"getMultiplayerPlayerName(mpaCharacters[rowNumber]['player'],true,true)"
				text style 	"label"
				enabled 	"multiplayerLocalPlayerID ~= 1 or rowNumber == 1"
			}
			label
			{
				area		7 54 140 32
				bam 		'GUIBUTNS'
				sequence 	1
				frame lua 	"currentCellCheck(1)"
				align 		center center
				enabled 	"multiplayerLocalPlayerID == 1 and rowNumber ~= 1"
				text lua	"t('MULTIPLAYER_CHANGE_PLAYER_BUTTON')"
				text style 	"button"
			}
		}
		column
		{
			width 15
			label
			{
				area		0 0 -1 -1
				bam 		'GUIRSP10'
				sequence 	1
				align 		center center
			}
			label
			{
				area		6 5 56 85
				bitmap lua	'mpaCharacters[rowNumber]["portrait"]'
				sequence 	1
				align 		center center
			}
		}
		column
		{ 
			width 45 
			label
			{
				area 		4 0 195 44
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"label"
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label
			{
				area 		4 0 195 95
				text lua 	"getMultiplayerCharacterName(rowNumber, true, true)"
				text style 	"label"
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) == ''"
			}
			label
			{
				area		8 45 195 44
				bam 		'GUIBUTNT'
				sequence 	1
				frame lua 	"currentCellCheck(3)"
				scaleToClip
				align 		center center
				enabled 	"getMultiplayerCharacterButtonText(rowNumber) ~= ''"
			}
			label
			{
				area		8 45 195 44
				text lua 	"getMultiplayerCharacterButtonText(rowNumber)"
				text style 	"button"
			}
			label
			{
				area		8 45 195 44
				fill 		0 0 0 170
				enabled 	"shouldGreyscaleEditButton(rowNumber)"
			}
		}
		column
		{ 
			width 13 
			label
			{
				area 		0 50 50 44
				text lua	"getMultiplayerCharacterReadyText(rowNumber)"
				text style 	"label"
			}
		}
		area 				515 116 472 570
		rowheight			95
		table				"mpaCharacters"
		var					selectedCharacter
		scrollbar			'GUISCRC'
		hidehighlight
		action
		"
			if cellNumber == 1 then
				cellNumber = nil
				if multiplayerLocalPlayerID == 1 and selectedCharacter ~= 1 then
					if multiplayerFromInGame == false then
						multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter - 1)
						currentMultiplayerSelectPlayer = mpaCharacters[selectedCharacter]['player']
						Infinity_PushMenu('MP_PICKPLAYER')
					elseif shouldGreyscaleEditButton(selectedCharacter) == false then
						multiplayerScreen:OnModifyButtonClick()
					end
				end
			elseif cellNumber == 2 then
				cellNumber = nil
			elseif cellNumber == 3 then
				cellNumber = nil
				if shouldGreyscaleEditButton(selectedCharacter) == false then
					if getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_VIEW_DETAILS_BUTTON') then
						multiplayerScreen:OnPortraitButtonClick(selectedCharacter-1)
					elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('CREATE_CHAR_BUTTON') then
						if multiplayerFromInGame == false then
							multiplayerScreen:SetModifiedCharacterSlot(selectedCharacter-1)
							multiplayerScreen:UpdateModifyCharacterPanel()
						elseif shouldGreyscaleEditButton(selectedCharacter) == false then
							multiplayerScreen:OnModifyButtonClick()
						end
					elseif getMultiplayerCharacterButtonText(selectedCharacter) == t('MULTIPLAYER_EDIT_CHAR_BUTTON') then
						if multiplayerFromInGame == false then
							mpModifyingCharacter = selectedCharacter - 1
							Infinity_PushMenu('MP_MODIFYCHARACTER')
						elseif shouldGreyscaleEditButton(selectedCharacter) == false then
							multiplayerScreen:OnModifyButtonClick()
						end
					end
				end
			elseif cellNumber == 4 then
				cellNumber = nil
			end
		"
		actionAlt
		"
			cellNumber = nil
		"
	}
	label
	{
		area	956 181 67 529
		mosaic	'FCGMPLAC'
	}
	label
	{
		area	916 1 107 244
		mosaic	'FCGMPLAA'
	}
	label
	{
		area	897 656 126 112
		mosaic	'FCGMPLAB'
	}
	label
	{
		area 519 88 136 22
		text lua "t('PLAYER_LABEL')"
		text style "label"
		text color	'$'
		align center center
	}
	label
	{
		area 655 88 232 22
		text lua "t('CHARACTER_LABEL')"
		text style "label"
		text color	'$'
		align center center
	}
	label
	{
		area 887 88 103 22
		text lua "t('READY_TO_PLAY_LABEL')"
		text style "label"
		text color	'$'
		align center center
	}
	button
	{
		area 937 116 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(1)"
		align 		center center
		tooltip lua "getMultiplayerReadyTooltip(1)"
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[1]['player'] then
					multiplayerScreen:OnReadyButtonClick(1-1)
				end
			end
		"
	}
	button
	{
		area 937 211 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(2)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[2]['player'] then
					multiplayerScreen:OnReadyButtonClick(2-1)
				end
			end
		"
	}
	button
	{
		area 937 306 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(3)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[3]['player'] then
					multiplayerScreen:OnReadyButtonClick(3-1)
				end
			end
		"
	}
	button
	{
		area 937 401 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(4)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[4]['player'] then
					multiplayerScreen:OnReadyButtonClick(4-1)
				end
			end
		"
	}
	button
	{
		area 937 496 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(5)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[5]['player'] then
					multiplayerScreen:OnReadyButtonClick(5-1)
				end
			end
		"
	}
	button
	{
		area 937 591 50 50
		bam 		'4CHECK'
		sequence lua "get4CheckFrame(6)"
		align 		center center
		action
		"
			if multiplayerFromInGame == false then
				if multiplayerLocalPlayerID == mpaCharacters[6]['player'] then
					multiplayerScreen:OnReadyButtonClick(6-1)
				end
			end
		"
	}
	label
	{
		area 40 308 454 25
		fill 125 125 125 180
	}
	label
	{
		area 40 343 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 394 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 445 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 496 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 547 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 598 454 47
		fill 50 50 50 180
	}
	label
	{
		area 40 308 207 25
		text lua "t('PLAYERS_LABEL')"
		text style "label"
		text color	'$'
		align center center
	}
	label
	{
		area 247 308 187 25
		text lua "t('PARTY_SLOTS_LABEL')"
		text style "label"
		text color	'$'
		align center center
	}
	label
	{
		area 434 308 60 25
		text lua "t('RULES_LABEL')"
		text style "label"
		text color	'$'
		align center center
	}
	list
	{
		column
		{
			width lua "getPlayerKickWidth(rowNumber)"
			label
			{
				area		6 5 45 45
			}
		}
		column
		{ 
			width lua "getPlayerNameWidth(rowNumber)"
			label
			{
				area 		0 0 195 55
				text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
				text style 	"label"
				align 		left center
				enabled 	"getPlayerKickWidth(rowNumber) == 0"
			}
			label
			{
				area 		0 0 150 55
				text lua	"getMultiplayerPlayerName(rowNumber, false, true)"
				text style 	"label"
				align 		left center
				enabled 	"getPlayerKickWidth(rowNumber) ~= 0"
			}
		}
		column
		{ 
			width 45 
			label
			{
				area		6 5 25 38
			}
		}
		column
		{
			width 10
			label
			{
				area		6 5 45 45
			}
		}
		area 				52 339 442 306
		rowheight			51
		table				"mpaPlayers"
		var					selectedPlayer
		scrollbar			'GUISCRC'
		hidehighlight
		action
		"
			if cellNumber == 1 and selectedPlayer > 1 then
				cellNumber = 0
			elseif cellNumber == 2 then
				cellNumber = 0
			elseif cellNumber == 3 then
				cellNumber = 0
			elseif cellNumber == 4 and selectedPlayer > 1  then
				cellNumber = 0
			end
		"
	}
	button
	{
		area		40 395 46 45
		bam 			'FCGMPBTX'
		sequence 		4
		clickable lua	"mpaPlayers[2]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(2-1)
			end
		"
	}
	button
	{
		area		40 446 46 45
		bam 			'FCGMPBTX'
		sequence 		4
		clickable lua	"mpaPlayers[3]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(3-1)
			end
		"
	}
	button
	{
		area		40 497 46 45
		bam 			'FCGMPBTX'
		sequence 		4
		clickable lua	"mpaPlayers[4]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(4-1)
			end
		"
	}
	button
	{
		area		40 548 46 45
		bam 			'FCGMPBTX'
		sequence 		4
		clickable lua	"mpaPlayers[5]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(5-1)
			end
		"
	}
	button
	{
		area		40 599 46 45
		bam 			'FCGMPBTX'
		sequence 		4
		clickable lua	"mpaPlayers[6]['name'] ~= ''"
		align 		center center
		enabled 	"multiplayerLocalPlayerID == 1"
		tooltip lua	"t('MULTIPALYER_KICK_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerScreen:OnKickPlayerButtonClick(6-1)
			end
		"
	}
	button
	{
		area		446 395 46 45
		bam 			'FCGMPBTX'
		sequence 		3
		clickable lua	"mpaPlayers[2]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[2]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 2
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 446 46 45
		bam 			'FCGMPBTX'
		sequence 		3
		clickable lua	"mpaPlayers[3]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[3]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 3
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 497 46 45
		bam 			'FCGMPBTX'
		sequence 		3
		clickable lua	"mpaPlayers[4]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[4]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 4
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 548 46 45
		bam 			'FCGMPBTX'
		sequence 		3
		clickable lua	"mpaPlayers[5]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[5]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 5
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	button
	{
		area		446 599 46 45
		bam 			'FCGMPBTX'
		sequence 		3
		clickable lua	"mpaPlayers[6]['name'] ~= '' and multiplayerLocalPlayerID == 1"
		align 		center center
		tooltip lua	"t('MULTIPALYER_PERMISSION_TOOLTIP')"
		action
		"
			if mpaPlayers[6]['name'] ~= '' then
				multiplayerInPermission = true
				multiplayerInPermissionForPlayer = 6
				Infinity_PushMenu('MP_PERMISSIONS')
			end
		"
	}
	--character drag/drop
	--player 1
	button
	{
		area 247 348 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				247 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,1)'
		sequence 			1
		align 				center center
		--No changing control of character 1
	}
	button
	{
		area 				278 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,2)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				309 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,3)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				340 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,4)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				371 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,5)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	button
	{
		area 				402 348 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(1,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			if multiplayerFromInGame == false then
				local slot = getMultiplayerPlayerControlledCharacterSlot(1,6)
				multiplayerStartSwapPortraits(1,slot)
			elseif multiplayerLocalPlayerID == 1 or multiplayer.player[multiplayerLocalPlayerID].permissions[1] == true then
				multiplayerScreen:OnModifyButtonClick()
			end
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(1)
		"
	}
	--player 2
	button
	{
		area 247 399 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				247 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,1)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				278 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,2)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				309 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,3)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				340 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,4)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				371 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,5)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	button
	{
		area 				402 399 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(2,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(2,6)
			multiplayerStartSwapPortraits(2,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(2)
		"
	}
	--player 3
	button
	{
		area 247 449 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				247 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,1)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				278 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,2)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				309 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,3)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				340 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,4)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				371 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,5)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	button
	{
		area 				402 449 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(3,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(3,6)
			multiplayerStartSwapPortraits(3,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(3)
		"
	}
	--player 4
	button
	{
		area 247 500 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				247 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,1)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				278 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,2)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				309 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,3)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				340 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,4)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				371 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,5)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	button
	{
		area 				402 500 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(4,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(4,6)
			multiplayerStartSwapPortraits(4,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(4)
		"
	}
	--player 5
	button
	{
		area 247 551 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				247 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,1)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				278 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,2)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				309 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,3)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				340 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,4)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				371 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,5)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	button
	{
		area 				402 551 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(5,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(5,6)
			multiplayerStartSwapPortraits(5,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(5)
		"
	}
	--player 6
	button
	{
		area 247 602 180 38
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				247 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,1)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,1)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				278 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,2)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,2)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				309 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,3)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,3)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				340 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,4)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,4)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				371 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,5)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,5)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	button
	{
		area 				402 602 25 38
		bitmap lua			'getMultiplayerPlayerControlledCharacter(6,6)'
		sequence 			1
		align 				center center
		actionSimpleDrag	
		"
			local slot = getMultiplayerPlayerControlledCharacterSlot(6,6)
			multiplayerStartSwapPortraits(6,slot)
		"
		actionSimpleDrop	
		"
			multiplayerStopSwapPortraits(6)
		"
	}
	label -- game name
	{
		area 		40 84 454 56
		text lua	"multiplayerSessionName"
		text style 	'label'
	}
	label -- new game type/save name
	{
		area 		206 140 288 44
		text lua	"multiplayerSaveName"
		text style 	'label'
		align 		left center
	}
	label -- chapter
	{
		area 		206 180 288 44
		text lua	"multiplayerChapter"
		text style 	'label'
		align 		left center
	}
	label -- time played
	{
		area 		206 220 288 44
		text lua	"multiplayerTimePlayed"
		text style 	'label'
		align 		left center
	}
	label -- difficulty
	{
		area 		206 260 288 44
		text lua	"multiplayerDifficultyLabel"
		text style 	'label'
		align 		left center
	}
	button --label -- other difficulty
	{
		area 		40 140 166 164
		bam			"GUIDIFF"
		frame lua 	"multiplayerDifficultyImage"
		sequence 	0
		align 		center center
	}

	button
	{
		area 508 694 230 44
		bam 'GUIBUTMT'
		sequence 1
		text "START_GAME_BUTTON"
		text style 'button'
		clickable lua "multiplayer.donebuttonclickable"
		enabled "not multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
		"
	}
	button
	{
		on escape
		area 508 694 230 44
		bam 'GUIBUTMT'
		sequence 1
		text "DONE_BUTTON"
		text style 'button'
		clickable lua "multiplayer.donebuttonclickable"
		enabled "multiplayerFromInGame"
		tooltip lua "getStartGameButtonTooltip()"
		action 
		"
			multiplayerScreen:OnMainDoneButtonClick(mulitplayerPreexistingDifficulty)
		"
	}
	button
	{
		area 278 694 230 44
		bam 'GUIBUTMT'
		sequence 0
		text "LOGOUT_BUTTON"
		text style 'button'
		action 
		"
			multiplayerScreen:OnLogoutButtonClick()
		"
	}
	button
	{
		area 288 650 206 38
		bam 'GUIBUTWT'
		sequence 0
		scaleToClip
		text "MULTIPLAYER_GAME_OPTIONS_BUTTON"
		text style 'button'
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			helpTextString = Infinity_FetchString(11323)
			Infinity_PushMenu('MP_OPTIONS')
		"
	}
	--dragged portrait
	label
	{
		name 				"multiplayerDraggingPortraitImage"
		area 				-20 -20 37 57
		bitmap lua			'mpDraggedPortrait'
		sequence 			1
		align 				center center
		enabled 			"multiplayerUpdateDraggedPortrait()"
	}
}
`
multiplayerPermissions = 
{
	{'MULTIPLAYER_PERMISSIONS_MODIFY',	'MULTIPLAYER_PERMISSIONS_MODIFY_TOOLTIP',	false, false, 7},
	{'MULTIPLAYER_PERMISSIONS_GOLD',	'MULTIPLAYER_PERMISSIONS_GOLD_TOOLTIP',		false, false, 0},
	{'MULTIPLAYER_PERMISSIONS_TRAVEL',	'MULTIPLAYER_PERMISSIONS_TRAVEL_TOOLTIP',	false, false, 1},
	{'MULTIPLAYER_PERMISSIONS_VIEW',	'MULTIPLAYER_PERMISSIONS_VIEW_TOOLTIP',		false, false, 3},
	{'MULTIPLAYER_PERMISSIONS_DIALOGUE','MULTIPLAYER_PERMISSIONS_DIALOGUE_TOOLTIP',	false, false, 2},
	{'MULTIPLAYER_PERMISSIONS_PAUSE',	'MULTIPLAYER_PERMISSIONS_PAUSE_TOOLTIP',	false, false, 4}
}

function broadcastPermissionChange(player,permission,setting)
	local player = getMultiplayerPlayerName(player,false,true)
	local todo = t(multiplayerPermissions[permission][1])
	setStringTokenLua("<PLAYER_NAME_1>",player)
	setStringTokenLua("<PERMISSION>",todo)
	if setting == true then
		message = t("MULTIPLAYER_IS_NOW_PERMITTED")
	else
		message = t("MULTIPLAYER_IS_NOT_PERMITTED")
	end
	removeStringTokenLua("<PLAYER_NAME_1>")
	removeStringTokenLua("<PERMISSION>")
	Infinity_SendChatMessage(message, true) 
end

function getMultiplayerPlayerPermissionDescription()
	local player = getMultiplayerPlayerName(multiplayerInPermissionForPlayer,false,false)
	setStringTokenLua("<PLAYER_NAME_1>",player)
 	local canPerform = t("MULTIPLAYER_CAN_PERFORM")
	removeStringTokenLua("<PLAYER_NAME_1>")

	return canPerform
end
`
menu
{
	name 'MP_PERMISSIONS'
	align center center
	modal
	onOpen
	"
		local index = 1
		for index = 0, #(multiplayer.player[multiplayerInPermissionForPlayer].permissions), 1 do
			local luaIndex = -1
			local loopLuaIndex = -1

			for loopLuaIndex = 1, #multiplayerPermissions, 1 do
				if multiplayerPermissions[loopLuaIndex][5] == index then
					luaIndex = loopLuaIndex
					break
				end
			end

			if luaIndex ~= -1 then
				if multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == true then
					multiplayerPermissions[luaIndex][3] = true
					multiplayerPermissions[luaIndex][4] = true
				elseif multiplayer.player[multiplayerInPermissionForPlayer].permissions[index] == false then
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				else
					multiplayerPermissions[luaIndex][3] = false
					multiplayerPermissions[luaIndex][4] = false
				end
			end
		end
	"

	label 
	{
		area 0 0 512 651
		mosaic "FSSTRTOP"
	}
	label
	{
		area 58 6 384 44
		text "PERMISSIONS_TITLE"
		text style "title"
		text color	'O'
	}

	label
	{
		area 88 66 330 60
		text lua "getMultiplayerPlayerPermissionDescription()"
		text style "title"
		text color	'$'
	}

	button
	{
		on esc
		area 0 0 1 1
		action 
		"	
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
	--bottom buttons
	button
	{
		area 130 583 249 45
		bam 'STARTBUT'
		sequence 2
		text "CANCEL_BUTTON"
		text style 'button'
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 130 530 249 45
		bam 'STARTBUT'
		sequence 2
		text "DONE_BUTTON"
		text style 'button'
		enabled "multiplayerLocalPlayerID == 1"
		action 
		"
			local index = 1
			for index = #(multiplayerPermissions), 1, -1 do
				if multiplayerPermissions[index][3] ~= multiplayerPermissions[index][4] then
					broadcastPermissionChange(multiplayerInPermissionForPlayer,index,multiplayerPermissions[index][3])
					multiplayerScreen:OnPermissionButtonClick(multiplayerInPermissionForPlayer - 1, multiplayerPermissions[index][5])
				end
			end

			multiplayerInPermission = false
			multiplayerScreen:OnDoneButtonClick()
			Infinity_PopMenu()
		"
	}
	--permissions
	button
	{
		area 130 164 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[1][3] == true"
		tooltip lua "t(multiplayerPermissions[1][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[1][3] = not multiplayerPermissions[1][3]
			end
		"
	}
	text
	{
		area 185 149 227 56
		text lua "t(multiplayerPermissions[1][1])"
		tooltip lua "t(multiplayerPermissions[1][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 130 220 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[2][3] == true"
		tooltip lua "t(multiplayerPermissions[2][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[2][3] = not multiplayerPermissions[2][3]
			end
		"
	}
	text
	{
		area 185 205 227 56
		text lua "t(multiplayerPermissions[2][1])"
		tooltip lua "t(multiplayerPermissions[2][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 130 274 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[3][3] == true"
		tooltip lua "t(multiplayerPermissions[3][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[3][3] = not multiplayerPermissions[3][3]
			end
		"
	}
	text
	{
		area 185 261 227 56
		text lua "t(multiplayerPermissions[3][1])"
		tooltip lua "t(multiplayerPermissions[3][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 130 326 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[4][3] == true"
		tooltip lua "t(multiplayerPermissions[4][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[4][3] = not multiplayerPermissions[4][3]
			end
		"
	}
	text
	{
		area 185 313 227 56
		text lua "t(multiplayerPermissions[4][1])"
		tooltip lua "t(multiplayerPermissions[4][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 130 382 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[5][3] == true"
		tooltip lua "t(multiplayerPermissions[5][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[5][3] = not multiplayerPermissions[5][3]
			end
		"
	}
	text
	{
		area 185 369 227 56
		text lua "t(multiplayerPermissions[5][1])"
		tooltip lua "t(multiplayerPermissions[5][2])"
		text style "normal"
		align left center
	}
	button
	{
		area 130 438 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerPermissions[6][3] == true"
		tooltip lua "t(multiplayerPermissions[6][2])"
		scaleToClip
		action 
		"
			if multiplayerLocalPlayerID == 1 then
				multiplayerPermissions[6][3] = not multiplayerPermissions[6][3]
			end
		"
	}
	text
	{
		area 185 425 227 56
		text lua "t(multiplayerPermissions[6][1])"
		tooltip lua "t(multiplayerPermissions[6][2])"
		text style "normal"
		align left center
	}
}
`
multiplayerGameOptions =
{
	{"LISTEN_JOIN_LABEL",	"LISTEN_JOIN_TOOLTIP",	false, false},
	{"ALLOW_REFORM_LABEL",	"ALLOW_REFORM_TOOLTIP",	false, false}
}
multiplayerImportOptions =
{
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_SE"},
	{"MULTIPLAYER_IMPORT_CHARACTER_RULES_S"}
}
multiplayerImportOption = 0

function broadcastOptionChange(slot, onOff)
	if multiplayerLocalPlayerID == 1 then
		local message = ""
		if slot < 3 then
			local setting = t(multiplayerGameOptions[slot][1])
			setStringTokenLua("<SESSION_RULES>",setting)
			if onOff == true then
				message = t("MULTIPLAYER_GAME_WILL_NOW")
			else
				message = t("MULTIPLAYER_GAME_WILL_NO_LONGER")
			end
			removeStringTokenLua("<SESSION_RULES>")
		else
			local setting = t(multiplayerImportOptions[slot-2][1])
			setStringTokenLua("<IMPORT_RULES>",setting)
			message = t("MULTIPLAYER_IMPORT_SETTINGS_CHANGE")
			removeStringTokenLua("<IMPORT_RULES>")
		end
		Infinity_SendChatMessage(message, true) 
	end
end
`
menu
{
	name 'MP_OPTIONS'
	align center center
	modal 
	onOpen
	"
		zzInCharacterRecord = 0
		
		multiplayerGameOptions[1][3] = multiplayer.listentojoin
		multiplayerGameOptions[1][4] = multiplayerGameOptions[1][3]
		multiplayerGameOptions[2][3] = multiplayer.allowreformparty
		multiplayerGameOptions[2][4] = multiplayerGameOptions[2][3]
		multiplayerImportOption = multiplayer.importsetting + 1
	"

	label 
	{
		area 0 0 512 651
		mosaic "FSSTRTOP"
	}
	label
	{
		area 58 6 384 44
		text "OPTIONS_TITLE"
		text style "title"
		text color	'O'
	}
	label
	{
		area 88 276 330 56
		text "MULTIPLAYER_IMPORT_CHARACTER_RULES_LABEL"
		text style "title"
		align center center
		text color	'$'
	}
	button
	{
		area 122 144 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerGameOptions[1][3] == true"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		scaleToClip
		action 
		"
			multiplayerGameOptions[1][3] = not multiplayerGameOptions[1][3]
		"
	}
	text
	{
		area 160 130 228 55
		text lua "t(multiplayerGameOptions[1][1])"
		text style "normal"
		tooltip lua "t(multiplayerGameOptions[1][2])"
		align left center
	}
	button
	{
		area 122 208 26 26
		bam ROUNDBUT
		sequence 0
		glow lua "multiplayerGameOptions[2][3] == true"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		scaleToClip
		action 
		"
			multiplayerGameOptions[2][3] = not multiplayerGameOptions[2][3]
		"
	}
	text
	{
		area 160 194 228 55
		text lua "t(multiplayerGameOptions[2][1])"
		text style "normal"
		tooltip lua "t(multiplayerGameOptions[2][2])"
		align left center
	}
	button
	{
		area 122 350 26 26
		bam ROUNDBUT
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 1"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		scaleToClip
		action 
		"
			multiplayerImportOption = 1
		"
	}
	text
	{
		area 160 336 228 55
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SEI')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}
	button
	{
		area 122 408 26 26
		bam ROUNDBUT
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 2"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		scaleToClip
		action 
		"
			multiplayerImportOption = 2
		"
	}
	text
	{
		area 160 391 228 55
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_SE')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}
	button
	{
		area 122 460 26 26
		bam ROUNDBUT
		frame lua "currentCellCheck(3)"
		sequence 0
		glow lua "multiplayerImportOption == 3"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		scaleToClip
		action 
		"
			multiplayerImportOption = 3
		"
	}
	text
	{
		area 160 446 228 56
		text lua "t('MULTIPLAYER_IMPORT_CHARACTER_RULES_S')"
		tooltip lua "t('IMPORT_RULES_TOOLTIP')"
		text style "normal"
		align left center
	}

	button
	{
		on esc
		area 0 0 1 1
		action 
		"	
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
	--bottom buttons
	button
	{
		on return
		area 130 530 249 45
		bam 'STARTBUT'
		sequence 2
		text "DONE_BUTTON"
		text style 'button'
		action 
		"
			if multiplayerImportOption ~= multiplayer.importsetting + 1 then
				multiplayerScreen:SetImportSetting(multiplayerImportOption - 1)
				broadcastOptionChange(multiplayerImportOption+2)
			end

			if multiplayerGameOptions[1][3] ~= multiplayerGameOptions[1][4] then
				broadcastOptionChange(1, multiplayerGameOptions[1][3])
				multiplayerScreen:ToggleListenToJoin()
			end

			if multiplayerGameOptions[2][3] ~= multiplayerGameOptions[2][4] then
				broadcastOptionChange(2, multiplayerGameOptions[2][3])
				multiplayerScreen:ToggleAllowReformParty()
			end

			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 130 583 249 45
		bam 'STARTBUT'
		sequence 2
		text "CANCEL_BUTTON"
		text style 'button'
		action 
		"
			multiplayerScreen:OnCancelButtonClick()
			Infinity_PopMenu()
		"
	}
}
`
	function getActivePlayerIndex(index)
		local ret = -1
		local count = 0
		local slot = 0

		for slot = 1, 6, 1 do
			if mpaPlayers[slot]["name"] ~= '' then
				count = count + 1
			end
			if count == index then
				ret = slot
				break
			end
		end

		return ret
	end
`
menu
{
	name 'MP_PICKPLAYER'
	align center center
	modal 
	label 
	{
		mosaic "FSSTRTOP"
		area 0 0 512 651
	}
	label 
	{
		area 58 6 384 44
		text "SELECT_PLAYER_TITLE"
		text style "title"
		text color	'O'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled	"rowNumber == currentMultiplayerSelectPlayer"
				area 0 0 -1 -1
				fill 255 250 205 80
			}
			label
			{
				area 8 0 -1 -1
				text lua "getMultiplayerPlayerName(getActivePlayerIndex(rowNumber), false, true)"
				text style "normal"
				align left center
			}
		}
		action 
		"
		"
		hidehighlight
		rowheight 32
		area 92 74 320 432
		table "multiplayer.player"
		var currentMultiplayerSelectPlayer
	}
	button
	{
		on esc
		area 0 0 1 1
		action 
		"	
			Infinity_PopMenu()
		"
	}

	button
	{
		on escape
		area 130 583 249 45
		text "CANCEL_BUTTON"
		text style "button"
		align center center
		bam 'STARTBUT'
		sequence 2
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on escape
		area 130 530 249 45
		text "DONE_BUTTON"
		text style "button"
		align center center
		bam 'STARTBUT'
		sequence 2
		action
		"	
			if mpaCharacters[selectedCharacter]['ready'] == true and mpaCharacters[selectedCharacter]['player'] ~= getActivePlayerIndex(currentMultiplayerSelectPlayer) then
				multiplayerScreen:OnReadyButtonClick(selectedCharacter-1)
			end
			broadcastCharacterControlChange(selectedCharacter, getActivePlayerIndex(currentMultiplayerSelectPlayer))
			multiplayerScreen:OnPlayerSelection(getActivePlayerIndex(currentMultiplayerSelectPlayer)-1)
			Infinity_PopMenu()
		"
	}
}
`
	function multiplayerIsDelete ()
		if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
			return t("DELETE_BUTTON")
		else
			return t("CREATE_BUTTON")
		end
	end
	function getModifyConfirmationLabel()
		return t('MULTIPLAYER_EDIT_CONFIRM').. ' ' .. getMultiplayerCharacterName(mpModifyingCharacter+1)
	end
`
menu
{
	name 'MP_MODIFYCHARACTER'
	align center center
	modal 
	onOpen
	"
		zzInCharacterRecord = 0
	"
	label 
	{
		mosaic 'GUIERR6Z'
		area 0 0 657 234
	}
	label
	{
		area 26 30 598 102
		text lua "getModifyConfirmationLabel()"
		text style "title"
		align center center
	}
	button
	{
		on escape
		area 79 170 230 40
		text "CANCEL_BUTTON"
		text style "button"
		align center center
		bam 'GUIBUTMT'
		action
		"	
			Infinity_PopMenu()
		"
	}
	button
	{
		on return
		area 343 170 230 40
		text lua "multiplayerIsDelete()"
		text style "button"
		align center center
		bam 'GUIBUTMT'
		action
		"
			Infinity_PopMenu()
			multiplayerScreen:SetModifiedCharacterSlot(mpModifyingCharacter)
			if (multiplayer.character[mpModifyingCharacter+1].portrait ~= '') then
				popup2Button('FC_DELETE_CHARACTER', 'YES_BUTTON', function() multiplayerScreen:OnModifyCharacterDelete() end, 'NO_BUTTON')
			else
				multiplayerScreen:UpdateModifyCharacterPanel()
			end
		"
	}
}

menu
{
	name 'MP_ERRORONE'
	align center center
	modal 
	label 
	{
		mosaic 'GUIERR6Z'
		area 0 0 657 240
	}
	label
	{
		area 29 26 600 114
		text lua "Infinity_FetchString( mpErrorText )"
		text style "normal"
		align center center
	}
	button
	{
		on return
		area 213 170 230 44
		text "DONE_BUTTON"
		text style "button"
		align center center
		bam GUIBUTMT
		action
		"	
			Infinity_PopMenu()
		"
	}
}

menu
{
	name 'MP_ERRORTWO'
	align center center
	modal 
	label 
	{
		mosaic 'FCGUIERR'
		area 0 0 465 500
	}
	label
	{
		area 126 136 220 110
		text lua "Infinity_FetchString( mpErrorText )"
		text style "normal"
		align center center
	}
	button
	{
		on return
		enabled "mpErrorState == 2"
		area 120 288 230 44
		text "MODIFY_BUTTON"
		text style "button"
		align center center
		bam 'GUIBUTMT'
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:ModifyCharacters()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 3"
		area 120 288 230 44
		text "KICK_BUTTON"
		text style "button"
		align center center
		bam 'GUIBUTMT'
		action
		"	
			Infinity_PopMenu()
			multiplayerScreen:KickPlayer()
		"
	}
	button
	{
		on return
		enabled "mpErrorState == 4"
		area 120 288 230 44
		text "LOGOUT_BUTTON"
		text style "button"
		align center center
		bam 'GUIBUTMT'
		action
		"	
			local index = 1
			Infinity_PopMenu()
			multiplayerScreen:Logout()
		"
	}
	button
	{
		on escape
		area 134 350 200 44
		text "CANCEL_BUTTON"
		text style "button"
		align center center
		bam 'GUIBUTNT'
		action
		"	
			Infinity_PopMenu()
		"
	}
}
`
	function dragMPChat(newY)
		--do a quick bounds check.
		local area = {Infinity_GetArea("mpChatDisplayBackground")}
		if(area[4] + newY <= 150) then newY = 150 - area[4] end
		
		area = {Infinity_GetArea("mpChatHandle")}
		local screenWidth, screenHeight = Infinity_GetScreenSize()
		if(area[2] + area[4] + newY > screenHeight) then newY = screenHeight - area[2] - area[4] end
		
		adjustItemGroup({"mpChatDisplayBackground","mpChatDisplay"}, 0, 0, 0, newY)
		adjustItemGroup({"mpChatEditBackground","mpChatEdit","mpChatHandle"}, 0, newY, 0 , 0)
	end
	mpChatTable = {}
	showMpChat = 0
	function updateChatViewed()
		if(showMpChat == 0) then chatViewed = 0 end
	end
	function updateMPChatPreview(message)
		if(showMpChat == 0) then table.insert(mpChatTable,{text = message}) end
	end
	function getMPMessageOpacity()
		local current = mpChatTable[#mpChatTable]
		if(current == nil) then
			return 0
		end
		if(current.displayTime == nil) then
			current.displayTime = 500
			
			--set the box size
			Infinity_ScaleToText("mpChatPreview")
			
			--give some extra room for the padding
			adjustItemGroup({"mpChatPreview"},0,0,0,16)
		end
		if(current.displayTime > 0) then
			current.displayTime = current.displayTime - 4
		end
		if(current.displayTime > 255) then
			return 255
		else
			return current.displayTime
		end
	end
	function getMPMessage()
		if(#mpChatTable > 0 and mpChatTable[#mpChatTable].displayTime ~= nil) then 
			return mpChatTable[#mpChatTable].text 
		end
		return nil
	end
	function getChatIconOpacity()
		if(chatViewed == 1) then return 255 end
		local sinWave = math.sin(Infinity_GetFrameCounter() / 15)
		local sinWaveAdjusted = (sinWave / 2) + 0.5
		return sinWaveAdjusted * 255
	end
	function getChatBarTooltip()
		if(showMpChat == 0) then
			return t("MULTIPLAYER_CHAT_BAR_COLLAPSED")
		else
			return t("MULTIPLAYER_CHAT_BAR_EXPANDED")
		end
	end
	function resizeMpEditBox()
		Infinity_ScaleToText('mpChatEdit')
		local x,y,w,h = Infinity_GetArea('mpChatEdit')
		local offset = 20
		if(h + offset < 42) then h = (42 - offset) end
		
		
		Infinity_SetArea('mpChatEdit',x,y,w,h)
		Infinity_SetArea('mpChatEditBackground',nil,nil,nil,h + offset)
		Infinity_SetArea('mpChatHandle',nil,y+h+(offset/2),nil,nil)
	end

	function mpChatboxScroll(top, height, contentHeight)
		if(mpChatboxJumpToBottom and contentHeight > height) then
			mpChatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(mpChatboxScrollToBottom == 0 and mpChatboxScrollLastHeight == contentHeight) then
			--defer to default scrolling
			return nil
		elseif mpChatboxScrollToBottom == 0 then
			mpChatboxScrollLastHeight = contentHeight
			return height-contentHeight
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			mpChatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - mpChatboxScrollTimeLast
		mpChatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			mpChatboxScrollToBottom = 0
			return height - contentHeight
		end
		return newTop
	end

	mpChatboxScrollLastHeight = 0
	mpChatboxScrollToBottom = nil
	mpChatboxScrollTimeLast = 0
	mpChatEditOverlay = ""
`
menu
{
	name "MP_CHAT_OVERLAY"
	enabled "e:IsMultiplayer()"
	align right top
	ignoreEsc
	offset -80 0
	onOpen
	"
		chatViewed = 1
	"
	label
	{
		name "mpChatDisplayBackground"
		enabled "showMpChat"
		area 4 0 290 372
		rectangle 0
		rectangle opacity 200
	}
	label
	{
		area 0 0 300 42
		rectangle 0
	}
	label
	{
		area 10 8 28 28
		bam "CHTICN"
		frame 1
		opacity lua "getChatIconOpacity()"
	}
	label
	{
		area 10 8 28 28
		bam "CHTICN"
		frame 0
		opacity lua "255 - getChatIconOpacity()"
	}
	label
	{
		area 42 0 252 42
		text "MULTIPLAYER_CHAT_LABEL"
		text style "label"
		text color	'O'
	}
	button
	{
		area 0 0 300 42
		toggle "showMpChat"
		tooltip lua "getChatBarTooltip()"
		action
		"
			chatViewed = 1
			mpChatboxScrollToBottom = 1
			if showMpChat == 1 then
				Infinity_FocusTextEdit('mpChatEdit')
			else
				Infinity_FocusTextEdit('')
			end
		"
	}
	label
	{
		name "mpChatPreview"
		enabled "showMpChat == 0"
		opacity lua "getMPMessageOpacity()"
		area 0 42 300 33
		text style "normal"
		text lua "getMPMessage()"
		ignoreEvents
		pad 8 8 8 8
		rectangle 1
	}
	text
	{
		name "mpChatDisplay"
		enabled "showMpChat"
		area 22 54 256 268
		text lua "mpChatText"
		scrollbar 'GUISCRC'
		scrollbar func "mpChatboxScroll"
		text style	normal
	}
	label
	{
		name "mpChatEditBackground"
		enabled "showMpChat"
		area 0 324 300 42
		rectangle 0
	}
	edit
	{
		name		"mpChatEdit"
		enabled 	"showMpChat"
		area		10 334 290 24
		var			mpChatEditOverlay
		scrollbar	'GUISCRC'
		text style	"edit"
		maxchars 255
		action
		"
			--On return pressed
			if (key_pressed == 13) then
				if (mpChatEditOverlay ~= '') then
					Infinity_SendChatMessage(mpChatEditOverlay, false) 
					Infinity_PlaySound('WAL_19B')
					mpChatEditOverlay=''
					resizeMpEditBox()
					mpChatboxScrollToBottom = 1
					return -1
				end
			end
			return 1
		"
		actionalt
		"
			resizeMpEditBox()
		"
	}
	handle
	{
		name "mpChatHandle"
		area 104 366 95 38
		bam "MPCHATAB"
		enabled "showMpChat"
		tooltip lua "t('MULTIPLAYER_CHAT_RESIZE_TOOLTIP')"
		actionDrag
		"
			dragMPChat(motionY)
		"
	}
}
`
function reinitQuests()
	for questIdx, quest in pairs(quests) do
		local noquest = true
		for objIdx,objective in pairs(quest.objectives) do
			local noobjective = true
			for entryIdx,entry in pairs(objective.entries) do
				if quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].entries[entryIdx].stateType ~= nil then
					noobjective = false
				end
			end
			if noobjective then
				quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			end
			if quests[questIdx].objectives[objIdx].stateType ~= const.ENTRY_TYPE_NONE and quests[questIdx].objectives[objIdx].stateType ~= nil then
				noquest = false
			end
		end
		if noquest then
			quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		end
	end
end

function initQuests()
	--instead of always searching the quests, just map entry ids to their quests
	entryToQuest = {}
	buildQuestsTable()
	for questIdx, quest in pairs(quests) do
		quests[questIdx].stateType = const.ENTRY_TYPE_NONE
		for objIdx,objective in pairs(quest.objectives) do
			quests[questIdx].objectives[objIdx].stateType = const.ENTRY_TYPE_NONE
			for entryIdx,entry in pairs(objective.entries) do
				quests[questIdx].objectives[objIdx].entries[entryIdx].stateType = const.ENTRY_TYPE_NONE
				entryToQuest[entry.id] = questIdx
			end
		end
	end
end

function compareByRecvTime(o1,o2)
	if(not o1.recvTime and not o2.recvTime) then return false end
	if(not o1.recvTime) then return false end
	if(not o2.recvTime) then return true end
	return o1.recvTime > o2.recvTime
end

function buildEntry(text, recvTime, stateType, chapter, timeStamp)
	local entry = 
		{
			text = text,
			recvTime = recvTime,
			stateType = stateType,
			timeStamp = timeStamp,
			chapters = {}
		}
	entry.chapters[chapter] = 1
	return entry	
end

--Update a journal entry by the strref/journalId
function updateJournalEntry(journalId, recvTime, stateType, chapter, timeStamp)
	if(stateType == const.ENTRY_TYPE_USER) then
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(userNotes,entry)
		--update display data
		buildQuestDisplay()
		return
	end
	--find the quest that is parent to this entry.
	--NOTE this can be placed in a loop if there needs to be more than quest to an entry
	--this would just mean entryToQuest returns a table that we iterate over
	local questId = entryToQuest[journalId]
	if questId == nil or stateType == const.ENTRY_TYPE_INFO then
		--add loose entries into the looseEntries table so they still get displayed.
		for _,entry in pairs(looseEntries) do
			if entry.text == journalId then
				return
			end
		end
		local entry = buildEntry(journalId, recvTime, stateType, chapter, timeStamp)
		table.insert(looseEntries,entry)
		
		--update display data
		buildQuestDisplay()
		return
	end

	local quest = quests[questId]
	if quest == nil then
		print("JOURNAL ERROR - no quest entry associated with questId "..questId)
		return
	end

	local previous = nil
	--traverse quest to find objective and entry
	for objIdx,objective in pairs(quest.objectives) do
		for entryIdx,entry in pairs(objective.entries) do
			if(entry.id == journalId) then
				--now we know where our quest, objective, and entry are
				--update quest, objective and entry appropriately
				entry.recvTime = recvTime
				entry.stateType = stateType
				if(not entry.chapters) then entry.chapters = {} end
				entry.chapters[chapter] = 1
				entry.timeStamp = timeStamp
				objective.entries[entryIdx] = entry
				
				objective.recvTime = recvTime
				if(not objective.chapters) then objective.chapters = {} end
				objective.chapters[chapter] = 1
				if(objective.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					objective.stateType = stateType
				end
				quest.objectives[objIdx] = objective
				
				quest.recvTime = recvTime
				if(not quest.chapters) then quest.chapters = {} end
				quest.chapters[chapter] = 1
				if(quest.stateType ~= const.ENTRY_TYPE_COMPLETE) then
					quest.stateType = stateType
				end
				
				--mark any previous objective as complete
				if(entry.previous ~= nil) then
					for objIdx2,objective2 in pairs(quest.objectives) do
						for k, prevObj in pairs(entry.previous) do
							if(prevObj == objective2.text) then
								quest.objectives[objIdx2].stateType = const.ENTRY_TYPE_COMPLETE
							end
						end
					end
				end
				
				quests[questId] = quest
				
				--remove all in subgroup (except myself!)
				if(stateType == const.JOURNAL_STATE_COMPLETE and entry.subGroup) then
					for k,v in pairs(subGroups[entry.subGroup]) do
						Infinity_Log("Checking subgroup, id = " .. v.id)
						if(v.id ~= entry.id) then
							removeJournalEntry(v.id)
						end
					end
				end
				
			end
		end
	end
	--sort the objectives.
	table.sort(quest.objectives,compareByRecvTime)
	
	--update display data
	buildQuestDisplay()
end
function checkEntryComplete(journalId, stateType)
	--Check if a journal entry is part of a quest that's already complete
	
	--If anything other than an unfinished entry return false.
	if(stateType ~= const.ENTRY_TYPE_INPROGRESS) then return false end
	
	--Check if my quest is marked complete.
	local questIndex = entryToQuest[journalId]
	if (quests[questIndex].stateType == const.ENTRY_TYPE_COMPLETE) then
		return 1
	else
		return 0
	end
end
--this should maybe be done recursively, but i kinda want direct control over each level
function buildQuestDisplay()
	--this is basically just a flatten
	questDisplay = {}
	journalDisplay = {}
	local journalEntries = {}
	for k,quest in pairs(quests) do
		--skip inactive quests
		if(quest.stateType ~= nil and quest.stateType ~= const.ENTRY_TYPE_NONE) then
			if quest.text == %str74295% then quest.stateType = const.ENTRY_TYPE_INPROGRESS end
			quest.quest = 1 -- tell the renderer what type of entry this is
			table.insert(questDisplay, quest)
			local curQuestIdx = #questDisplay --we'll need to modify current quest with it's children, store a reference.
			local questChildren = {}
			for k2,objective in pairs(quest.objectives) do
				if(objective.stateType ~= const.ENTRY_TYPE_NONE) then
					objective.objective = 1
					objective.parent = curQuestIdx
					
					if toggleJournal == 1 and objective.stateType ~= quest.stateType then
						objective.stateType = quest.stateType
					end
					
					if objective.text == nil then
						objective.text = objective.entries[1].timeStamp
					end
					
					if(objective.stateType ~= const.ENTRY_TYPE_INFO) then
						--info entries should not go into quests
						table.insert(questDisplay, objective)
						table.insert(questChildren, #questDisplay)
					end
					local curObjectiveIdx = #questDisplay
					local objectiveChildren = {}
					for k3,entry in pairs(objective.entries) do
						entry.entry = 1
						
						entry.parent = curObjectiveIdx
						
						if toggleJournal == 1 and entry.stateType ~= objective.stateType then
							entry.stateType = objective.stateType
						end
						
						table.insert(questDisplay, entry)
						table.insert(objectiveChildren, #questDisplay)
					end
					questDisplay[curObjectiveIdx].children = objectiveChildren
				end
			end
			questDisplay[curQuestIdx].children = questChildren
		end
	end
	
	--add the loose entries (entries without quests) to the journal display
	for k,entry in pairs(looseEntries) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
	-- add the user entries to the journal display
	for k,entry in pairs(userNotes) do
		entry.entry = 1
		table.insert(journalEntries,entry)
	end
	
	--sort the entries
	table.sort(journalEntries, compareByRecvTime)
	
	for k,entry in pairs(journalEntries) do
		local title  = {}
		title.title = 1
		title.text = entry.timeStamp
		title.chapters = entry.chapters
		table.insert(journalDisplay,title)
		table.insert(journalDisplay, entry)
	end
end
function questContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(questDisplay[row].text)
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	if(questDisplay[row].children == nil) then return nil end --no children, does not contain search string.
	for k,v in pairs(questDisplay[row].children) do
		--Infinity_Log(v)
		if(containsSearchString(v)) then return 1 end -- one of children contains search string
	end
	return nil --does not contain search string
end
function containsChapter(tab, chapter)
	if(not tab) then return nil end
	return tab[chapter]
end
function entryEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.entry == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end

	if(objectiveEnabled(rowTab.parent) and questDisplay[rowTab.parent].expanded) then return 1 else return nil end
end
function getEntryText(row)
	return questDisplay[row].text
end

function objectiveEnabled(row)
	local rowTab =  questDisplay[row]
	if(rowTab == nil or rowTab.objective == nil or not containsChapter(rowTab.chapters,chapter)) then return nil end

	if(questEnabled(rowTab.parent) and questDisplay[rowTab.parent].expanded) then return 1 else return nil end
end
function getObjectiveText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = rowTab.text
	if(text == "" or text == nil) then
		text = t("NO_OBJECTIVE_NORMAL")
	end
	text = '^L' .. text .. '^-\n' .. rowTab.entries[1].timeStamp
	return text
end

function questEnabled(row)
	if JourFilter == 0 then
		return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
	elseif JourFilter == 1 then
		if getFinished(row) then
			
		else
			return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
		end
	elseif JourFilter == 2 then
		if getFinished(row) then
			return (questDisplay[row] and questDisplay[row].quest and containsChapter(questDisplay[row].chapters,chapter) and (#questDisplay[row].children > 0))
		else
			
		end
	end
end
function getQuestText(row)
	local rowTab =  questDisplay[row]
	if (rowTab == nil) then return nil end
	local text = Infinity_FetchString(rowTab.text)
	if(getFinished(row)) then
		local finish = ''
		if toggleJournal == 0 and JourFilter == 0 then finish = " (" .. t("OBJECTIVE_FINISHED_NORMAL") .. ")" end
		text = "^5" .. text .. finish .. "^-"
	end
	return text
end
function getArrowFrame(row)
	if(questDisplay[row] == nil or (questDisplay[row].objective == nil and questDisplay[row].quest == nil)) then return "" end
	if(questDisplay[row].expanded) then
		return 0
	else
		return 1
	end
end
function getArrowEnabled(row)
	if(questDisplay[row].quest == nil and questDisplay[row].objective == nil) then return nil end
	if(questDisplay[row].objective and not objectiveEnabled(row)) then return nil end
	if(questDisplay[row].quest and not questEnabled(row)) then return nil end
	return 1
end

function getFinished(row)
	if(questDisplay[row].stateType == const.ENTRY_TYPE_COMPLETE) then return 1 else return nil end
end
function showObjectiveSeperator(row)
	local tab = questDisplay[row]
	if(objectiveEnabled(row) or entryEnabled(row)) then
		--seperator is enabled for objective or entry as long as the next thing is an objective.
		--search until we find something enabled or end of table.
		local idx = row + 1
		while(questDisplay[idx]) do
			if(objectiveEnabled(idx)) then
				return 1
			else 
				if(questEnabled(idx) or entryEnabled(idx)) then
					return nil
				end
			end
			idx = idx + 1
		end
	end
end


function getJournalTitleEnabled(row)
	return journalDisplay[row].title and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end
function getJournalTitleText(row)
	return journalDisplay[row].text
end
function getJournalEntryEnabled(row)
	return journalDisplay[row].entry and containsChapter(journalDisplay[row].chapters,chapter) and journalContainsSearchString(row)
end
function getJournalEntryText(row)
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == nil or text == "") then
		text = journalDisplay[row].text
	end
	
	if(journalSearchString and journalSearchString ~= "") then
		--do the search string highlight
		text = highlightString(text, journalSearchString, "^0xFF0000FF")
	end
	
	return text
end
function getJournalDarken(row)
	local entry = journalDisplay[row]
	if(entry.title) then
		return (row == selectedJournal or row + 1 == selectedJournal)
	end
	if(entry.entry) then
		return (row == selectedJournal or row - 1 == selectedJournal)
	end
end
function journalContainsSearchString(row)
	if(journalSearchString == nil or journalSearchString == "") then return 1 end --no search string, do nothing
	local text = Infinity_FetchString(journalDisplay[row].text)
	if(text == "") then text = journalDisplay[row].text end --no stringref, use the text.
	if(string.find(string.lower(text),string.lower(journalSearchString))) then return 1 end -- string contains search string.
	
	--check if the corresponding row to this one contains the string.
	local pairText = nil
	if(journalDisplay[row].title) then
		--check the corresponding entry
		pairText = Infinity_FetchString(journalDisplay[row+1].text) or journalDisplay[row+1].text
		if(pairText == "") then pairText = journalDisplay[row+1].text end 
	else 
		if (journalDisplay[row].entry) then
			pairText = Infinity_FetchString(journalDisplay[row-1].text) or journalDisplay[row-1].text
			if(pairText == "") then pairText = journalDisplay[row-1].text end 
		end
	end
	if(string.find(string.lower(pairText),string.lower(journalSearchString))) then return 1 end -- pair string contains search string.
	
	return nil --does not contain search string
end
function dragJournal()
	local offsetX,offsetY,menuWidth,menuHeight = Infinity_GetMenuArea('JOURNAL')
	local zzOfX,zzOfY,zzMWidth,zzMHeight = Infinity_GetArea('journalSmallBackground')
	offsetX = offsetX + motionX
	offsetY = offsetY + motionY
	
	--clamping
	if(offsetX < 80) then
		offsetX = 80
	end
	if(offsetY < 0) then
		offsetY = 0
	end
	
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	if(offsetX > screenWidth - 80 - zzMWidth) then
		offsetX = screenWidth - 80 - zzMWidth
	end
	if(offsetY > screenHeight - zzMHeight) then
		offsetY = screenHeight - zzMHeight
	end
	
	Infinity_SetOffset('JOURNAL', offsetX, offsetY)
end
function journalEntryClickable(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(entry) then return true end
end
function getJournalEntryRef(selectedJournal)
	local entry = journalDisplay[selectedJournal]
	if(not entry) then return end
	if(entry.title) then
		return journalDisplay[selectedJournal + 1].text
	else
		return entry.text
	end
end
function getJournalBackgroundFrame()
	if(journalMode == const.JOURNAL_MODE_QUESTS) then
		return 0
	else
		return 1
	end
end

function SetLargeJournalPosition()
	local screenWidth, screenHeight = Infinity_GetScreenSize()
	local ax = (screenWidth / 2) - 472 - 80
	local ay = (screenHeight / 2) - 384
	Infinity_SetArea('JournalLarge_Bkg', ax, ay, nil, nil)
	Infinity_SetArea('JournalLarge_BkgY', ax + 386, ay + 190, nil, nil)
	Infinity_SetArea('JournalLarge_BkgYEdit', ax + 155, ay + 241, nil, nil)
	Infinity_SetArea('JournalLarge_Shnur', ax + 463, ay + 190, nil, nil)
	Infinity_SetArea('journalBig_Title', ax + 235, ay + 33, nil, nil)
	Infinity_SetArea('journalBig_Quest', ax +  68, ay + 116, nil, nil)
	Infinity_SetArea('journalBig_Journ', ax + 637, ay + 116, nil, nil)
	Infinity_SetArea('zzLGrightButton0', -74, 16, nil, nil)
	Infinity_SetArea('zzLGrightButton1', -74, 60, nil, nil)
	Infinity_SetArea('zzLGrightButton2', -74, 106, nil, nil)
	Infinity_SetArea('zzLGrightButton3', -74, 152, nil, nil)
	Infinity_SetArea('zzLGrightButton4', -74, 198, nil, nil)
	Infinity_SetArea('zzLGrightButton5', -74, 244, nil, nil)
	Infinity_SetArea('zzLGrightButton6', -74, 290, nil, nil)
	Infinity_SetArea('zzLGrightButton7', -74, 336, nil, nil)
	Infinity_SetArea('zzLGrightButton8', -74, 385, nil, nil)
	Infinity_SetArea('journalRestBtn', -72, screenHeight - 47, nil, nil)
	Infinity_SetArea('LJChapter', ax + 360, ay + 117, nil, nil)
	Infinity_SetArea('LJChapterPrev', ax + 315, ay + 116, nil, nil)
	Infinity_SetArea('LJChapterNext', ax + 589, ay + 116, nil, nil)
	Infinity_SetArea('journalBig_Active', ax + 90, ay + 192, nil, nil)
	Infinity_SetArea('journalBig_Completed', ax + 704, ay + 192, nil, nil)
	Infinity_SetArea('zZquestActiveList', ax + 90, ay + 262, nil, nil)
	Infinity_SetArea('zZquestCompleteList', ax + 490, ay + 262, nil, nil)
	Infinity_SetArea('zzLGSearchLabel', ax + 490, ay + 262, nil, nil)
	Infinity_SetArea('zzLGSearchEdit', ax + 508, ay + 267, nil, nil)
	Infinity_SetArea('zzLGJournalString', ax + 90, ay + 267, nil, nil)
	Infinity_SetArea('zzLGNotesString', ax + 490, ay + 302, nil, nil)
	Infinity_SetArea('journalBig_AddEntry', ax + 490, ay + 192, nil, nil)
	Infinity_SetArea('journalBig_EditEntry', ax + 314, ay + 192, nil, nil)
	Infinity_SetArea('zzEditJournal1', ax + 278, ay + 215, nil, nil)
	Infinity_SetArea('zzEditJournal2', ax + 300, ay + 253, nil, nil)
	Infinity_SetArea('zzEditJournal3', ax + 173, ay + 300, nil, nil)
	Infinity_SetArea('zzEditJournal4', ax + 316, ay + 682, nil, nil)
	Infinity_SetArea('zzEditJournal5', ax + 488, ay + 682, nil, nil)
	Infinity_SetArea('zzEditJournal6', ax + 600, ay + 253, nil, nil)
	Infinity_SetArea('zzRevertJNote', ax + 316, ay + 602, nil, nil)
	Infinity_SetArea('zzClearJNote', ax + 488, ay + 602, nil, nil)
	Infinity_SetArea('zzJournalRecent', ax + 372 + 120, ay + 679, nil, nil)
	Infinity_SetArea('zzJournalQuest', ax + 372 - 120, ay + 679, nil, nil)
	local px = screenHeight
	local py = screenWidth
	for i = 0, 5 do
		Infinity_SetArea('JournalPortrait' .. i, py - 140, nil, nil, nil)
	end
	Infinity_SetArea('zZjournalOpacity', nil, nil, py, px)
end

journalMode = const.JOURNAL_MODE_QUESTS
journalSearchString = ""
JourFilter = 0
`
menu
{
	name 'JOURNAL'
	align left top
	offset 80 0
	ignoreEsc
	enabled "sidebarsGreyed ~= 1"
	onopen "
		reinitQuests()
		buildQuestDisplay()
		chapter = math.max(0,Infinity_GetMaxChapterPage());
		questOpened = 0
		journalOpen = 1
		zZreserveNote = ''
		if toggleJournal == 0 then
			JourFilter = 1
		else
			CheckPauseJournalBegin()
			Infinity_PopMenu('WORLD_QUICKLOOT');
			Infinity_PopMenu('WORLD_MESSAGES');
			Infinity_PopMenu('WORLD_ACTIONBAR');
			if Infinity_IsMenuOnStack('RIGHT_SIDEBAR') then zZjourPortEnabled = true else zZjourPortEnabled = false end
			if Infinity_IsMenuOnStack('LEFT_SIDEBAR')  then zZjourBtnEnabled = true else zZjourBtnEnabled = false end
			popSidebars()
			Infinity_PushMenu('RIGHT_SIDEBAR_HIDDEN')
			Infinity_PushMenu('LEFT_SIDEBAR_HIDDEN')
			SetLargeJournalPosition()
			zzLockScrolJournal(1)
		end
		zzCloseAll()
	"
	onClose
	"
		if toggleJournal == 1 then
			Infinity_PushMenu('WORLD_MESSAGES')
			Infinity_PushMenu('WORLD_ACTIONBAR')
			if zZjourPortEnabled then Infinity_PushMenu('RIGHT_SIDEBAR',0,0); Infinity_PopMenu('RIGHT_SIDEBAR_HIDDEN') end
			if zZjourBtnEnabled then Infinity_PushMenu('LEFT_SIDEBAR',0,0); Infinity_PopMenu('LEFT_SIDEBAR_HIDDEN') end
			zzLockScrolJournal(2)
			CheckPauseJournalEnd()
		end
		journalOpen = 0
	"
	label
	{
		name "zZjournalOpacity"
		enabled "toggleJournal ~= 0"
		on space
		area -80 0 1280 960
		rectangle 1
		rectangle opacity 200
	}
	label
	{
		name "journalSmallBackground"
		enabled "toggleJournal == 0"
		area 0 0 501 773
		mosaic "QUESTBAK"
	}
	label
	{
		enabled "toggleJournal == 0"
		area  	0 0 485 747
		bam "QUESTBG"
		sequence 0
		frame lua "getJournalBackgroundFrame()"
	}
	handle
	{
		enabled "toggleJournal == 0"
		area 0 0 472 80
		actionDrag
		"
			dragJournal()
		"
	}
	button
	{
		enabled "toggleJournal == 0"
		area 216 22 134 34
		text "JOURNAL_LABEL"
		text style "label_parchment"
		text point 16
		action "journalMode = const.JOURNAL_MODE_JOURNAL"
	}
	button
	{
		enabled "toggleJournal == 0"
		area 34 18 136 42
		text "QUESTS_LABEL"
		text style "label_parchment"
		text point 16
		action "journalMode = const.JOURNAL_MODE_QUESTS"
	}
	button
	{
		enabled "toggleJournal == 0"
		area 419 13 66 67
		on esc
		bam "XBUTT"
		action 
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
		"
	}
	button
	{
		enabled "journalMode ~= const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 174 70 146 60
		text lua "chapterText()"
		text style "label_parchment"
		mosaic "PCHAPTER"
		action
		"
			zzCloseAll()
		"
	}
	button
	{
		enabled "journalMode ~= const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area		129 70 41 60
		bam "PARROW"
		sequence 0
		action
		"
			incrChapter(-1);
		"	
	}
	button
	{
		enabled "journalMode ~= const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area		324 70 41 60
		bam "PARROW"
		sequence 1
		action
		"
			incrChapter(1);
		"	
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		area 54 124 116 43
		text lua "zZhighlightJourFilter(t('FC_QUESTS_ALL'))"
		text style "label_parchment"
		action 
		"
			zzCloseAll()
			JourFilter = 0
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		area 170 124 140 43
		text lua "zZhighlightJourFilter(t('FC_QUESTS_ACTIVE'))"
		text style "label_parchment"
		action
		"
			zzCloseAll()
			JourFilter = 1
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		area 310 124 130 43
		text lua "zZhighlightJourFilter(t('FC_QUESTS_COMPLETED'))"
		text style "label_parchment"
		action
		"
			zzCloseAll()
			JourFilter = 2
		"
	}
	button
	{
		name "zzJournalQuest"
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		area 60 616 162 47
		bam "PAPERBUT"
		sequence 1
		text lua "stringsAll.zZquestList"
		text style "button_parchment"
		action 
		"
			Infinity_PushMenu('JOURNAL_QUEST_LIST')
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		area 278 616 162 47
		bam "PAPERBUT"
		sequence 1
		text "RECENT_EVENTS_LABEL"
		text style "button_parchment"
		action 
		"
			Infinity_PushMenu('JOURNAL_RECENT_EVENTS')
		"
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 0"
		area 54 167 386 35
		fill 50 50 50 150
	}
	edit
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 0"
		area 62 174 368 34
		var journalSearchString
		placeholder "ENTER_SEARCH_TERM_NORMAL"
		text style "edit"
		maxlines 1
	}
	list
	{
		column
		{
			width 10
			label
			{
				area 0 0 31 31
				enabled "getArrowEnabled(rowNumber)"
				bam "PCHEV"
				frame lua "getArrowFrame(rowNumber)"
				text style "label_parchment"
				align top center
			}
		}
		column { 
			width 90 
			label
			{
				enabled "questEnabled(rowNumber)"
				area 0 0 -1 -1
				rectangle 1
				rectangle opacity 125
			}
			label
			{
				enabled 			"questEnabled(rowNumber) and zZgetLastQuest(rowNumber)"
				area				315 0 31 31
				bam					"FCFLAGIT"
				align				center center
			}
			label
			{	
				enabled "questEnabled(rowNumber)"
				area 8 0 -1 -1
				text lua "getQuestText(rowNumber)"
				text style "label"
				align left center
			}
			label
			{
				enabled "objectiveEnabled(rowNumber)"
				area 16 0 -1 -1
				pad 0 10 0 10
				text lua "getObjectiveText(rowNumber)"
				text style "normal_parchment"
			}
			label
			{
				enabled "entryEnabled(rowNumber)"
				area 16 0 -1 -1
				pad 0 10 0 10
				text lua "getEntryText(rowNumber)"
				text style "normal_parchment"
				text color M
			}
		}
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		rowheight	dynamic
		hidehighlight
		seperator "showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'GUISCRP'
		area		48 174 404 446
		action
		"
			if(questDisplay[selectedQuest].expanded) then 
				questDisplay[selectedQuest].expanded = nil
			else
				questDisplay[selectedQuest].expanded = 1
			end
		"
	}
	list
	{
		column
		{
			width 100
			--light
			label
			{
				enabled "getJournalTitleEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 0 16 0 0
				text lua "'^M' .. getJournalTitleText(rowNumber) .. '^-'"
				text style "label_parchment"
				text color 0 120 0 255
			}
			label
			{
				enabled "getJournalEntryEnabled(rowNumber) and not getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 8 16 0 16
				text lua "zzHideMyNotes(zZnteColorize(getJournalEntryText(rowNumber)))"
				text style "normal_parchment"
			}
			label
			{
				enabled "(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				fill 0 0 0 150
			}
			label
			{
				enabled "getJournalTitleEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 0 16 0 0
				text lua "'^R' .. getJournalTitleText(rowNumber) .. '^-'"
				text style "label_parchment"
				text color 255 100 100 255
			}
			label
			{
				enabled "getJournalEntryEnabled(rowNumber) and getJournalDarken(rowNumber)"
				area 0 0 -1 -1
				pad 8 16 0 16
				text lua "zzHideMyNotes(zZnteColorize(getJournalEntryText(rowNumber)))"
				text style "normal_parchment"
				text color 'B'
			}
		}
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 0"
		seperator "getJournalEntryEnabled(rowNumber)"
		rowheight	dynamic
		hidehighlight
		table		"journalDisplay"
		var			selectedJournal
		scrollbar	'GUISCRP'
		area		54 208 386 498
		actionDbl
		"
			zZeditJourEntry()
		"
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 0"
		area 58 158 382 16
		mosaic PAPERSEP
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 0"
		area 54 124 116 43
		text "ADD_ENTRY_LABEL"
		text style "label_parchment"
		action 
		"
			journalMode = const.JOURNAL_MODE_EDIT
			journalNoteEdit = ''
			journalNoteEditRef = nil
			Infinity_FocusTextEdit('journalNoteEditArea')
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 0"
		clickable lua "journalEntryClickable(selectedJournal)"
		area 170 124 140 43
		text "EDIT_ENTRY_LABEL"
		text style "label_parchment"
		action
		"
			zZeditJourEntry()
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 0"
		area 310 124 130 43
		text "FC_MY_NOTES"
		text style "label_parchment"
		action
		"
			if journalSearchString == t('FC_MY_NOTES') then
				journalSearchString = ''
			else
				journalSearchString = t('FC_MY_NOTES')
			end
		"
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 58 98 382 36
		bam fcjoursp
		scaleToClip
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 58 98 382 36
		text style "normal_parchment"
		text color 'M'
		text "WRITE_ENTRY_TEXT"
		align center center
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 58 140 376 4
		fill 10 71 1 255
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 58 144 382 42
		bam fcjoursp
		scaleToClip
	}
	label
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 58 144 382 42
		text lua "Infinity_GetTimeString()"
		text style "label"
		text color 0 120 0 255
	}
	edit
	{
		name "journalNoteEditArea"
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area		58 186 382 383
		text style	"edit_parchment"
		var			journalNoteEdit
		scrollbar	'GUISCRP'
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 272 641 162 47
		bam "PAPERBUT"
		sequence 1
		text "CANCEL_BUTTON"
		text style "button_parchment"
		action 
		"
			journalMode = const.JOURNAL_MODE_JOURNAL
			zZreserveNote = ''
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		area 272 594 162 47
		bam "PAPERBUT"
		sequence 1
		text "DONE_BUTTON"
		text style "button_parchment"
		action 
		"
			zZsaveJourEntry()
			zZreserveNote = ''
		"
	}
	button
	{
		enabled 	"journalMode == const.JOURNAL_MODE_EDIT and string.find(journalNoteOld,stringsAll.zzNoteTw) and toggleJournal == 0"
		area 		402 152 28 28
		bam			fcbtnix
		scaleToClip
		text 		"X"
		text style 	"button_parchment"
		text align 	center top
		text color	M
		action 
		"
			journalNoteEditRef = getJournalEntryRef(selectedJournal)
			journalNoteOld = Infinity_FetchString(journalNoteEditRef)
			if string.find(journalNoteOld,stringsAll.zzNoteTw) then
				journalNoteEditRef = getJournalEntryRef(selectedJournal)
				journalNoteEdit = ''
			end
			Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		clickable lua "zZreserveNote ~= ''"
		area 58 641 162 47
		bam "PAPERBUT"
		sequence 1
		text "REVERT_BUTTON"
		text style "button_parchment"
		action 
		"
			journalNoteEdit = zZreserveNote
		"
	}
	button
	{
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 0"
		clickable lua "journalNoteEdit ~= ''"
		area 58 594 162 47
		bam "PAPERBUT"
		sequence 1
		text "CLEAR_BUTTON"
		text style "button_parchment"
		action 
		"
			zZreserveNote = journalNoteEdit
			journalNoteEdit  = ''
		"
	}
	button
	{
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'g'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(0)
		"
	}
	button
	{ --map
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'm'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(1)
		"
	}
	button
	{ --inventory
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'i'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(3)
		"
	}
	button
	{ --character record
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'r'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(4)
		"
	}
	button
	{ --mage spells
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'w'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(5)
		"
	}
	button
	{ --priest spells
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'p'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(6)
		"
	}
	button
	{ --options
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'o'
		area 0 0 0 0
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(7)
		"
	}
	button
	{
		area 0 0 0 0
		enabled "journalOpen == 1 and toggleJournal == 1 and not zZjourBtnEnabled"
		on 'z'
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnRestButtonClick()
		"
	}
	button --to game
	{
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton0'
		on 'g'
		area -74 16 66 46
		bam GUILS10
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,%str16313%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(0)
		"
	}
	button
	{ --map
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton1'
		on 'm'
		area -74 60 66 46
		bam GUILS10
		sequence 1
		tooltip lua "getTooltipWithHotkey(4,15418)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(mapScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(1)
		"
	}
	button
	{ --journal
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton2'
		area -74 106 66 46
		bam GUILS10
		sequence 2
		tooltip lua "getTooltipWithHotkey(3,%str16308%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "showJournal == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
		"
	}
	button
	{ --inventory
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton3'
		on 'i'
		area -74 152 66 46
		bam GUILS10
		sequence 3
		tooltip lua "getTooltipWithHotkey(0,%str16307%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(inventoryScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(3)
		"
	}
	button
	{ --character record
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton4'
		on 'r'
		area -74 198 66 46
		bam GUILS10
		sequence 4
		tooltip lua "getTooltipWithHotkey(1,%str16306%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(characterScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(4)
		"
	}
	button
	{ --mage spells
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton5'
		on 'w'
		area -74 244 66 46
		bam GUILS10
		sequence 5
		tooltip lua "getTooltipWithHotkey(5,%str16309%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(mageScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(5)
		"
	}
	button
	{ --priest spells
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton6'
		on 'p'
		area -74 290 66 46
		bam GUILS10
		sequence 6
		tooltip lua "getTooltipWithHotkey(6,%str14930%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(priestScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(6)
		"
	}
	button
	{ --options
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		name 'zzLGrightButton7'
		on 'o'
		area -74 336 66 46
		bam GUILS10
		sequence 7
		tooltip lua "getTooltipWithHotkey(7,%str16311%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(optionsScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(7)
		"
	}
	button
	{ --multiplayer
		name 'zzLGrightButton8'
		area -74 385 66 46
		enabled "e:IsMultiplayer() and journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		bam GUILS10
		sequence 8
		tooltip lua "getTooltipWithHotkey(8,%str16312%)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		glow lua "highlightSidebarButton(multiplayerScreen)"
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnLeftPanelButtonClick(8)
		"
	}
	button
	{ --achievements
		enabled "journalOpen == 1 and toggleJournal == 1 and zZachShowAchivements == 1 and zZjourBtnEnabled"
		area -66 435 46 48
		bam "ZZACHIVE"
		scaleToClip
		tooltip lua "zZachText.achievems"
		glow lua	"zZshowAch == 1"
		clickable lua "sidebarsGreyed ~= 1"
		action "
			Infinity_PushMenu('ACHIEVEMENTS')
		"
	}
	button
	{
		name "journalRestBtn"
		area -72 913 66 46
		enabled "journalOpen == 1 and toggleJournal == 1 and zZjourBtnEnabled"
		on 'z'
		bam GUILS10
		sequence 9
		tooltip lua "getTooltipWithHotkey(31,11942)"
		tooltip force lua "sidebarForceTooltips == 1"
		tooltip force top
		clickable lua "sidebarsGreyed ~= 1"
		action
		"
			e:GetActiveEngine():OnLeftPanelButtonClick(2)
			e:GetActiveEngine():OnRestButtonClick()
		"
	}
	button
	{
		area -74 0 67 16
		bam GUIPNL10
		action
		"
			if not zZjourBtnEnabled then zZjourBtnEnabled = true else zZjourBtnEnabled = false end
		"
	}
	button
	{
		name "JournalPortrait0"
		area 1140 14 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0 and toggleJournal ~= 0 and zZjourPortEnabled"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_PopMenu('JOURNAL'); showJournal = 0"
		actionEnter "mouseOverPortrait = 0"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "JournalPortrait1"
		area 1140 106 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1 and toggleJournal ~= 0 and zZjourPortEnabled"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_PopMenu('JOURNAL'); showJournal = 0"
		actionEnter "mouseOverPortrait = 1"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "JournalPortrait2"
		area 1140 198 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2 and toggleJournal ~= 0 and zZjourPortEnabled"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_PopMenu('JOURNAL'); showJournal = 0"
		actionEnter "mouseOverPortrait = 2"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "JournalPortrait3"
		area 1140 290 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3 and toggleJournal ~= 0 and zZjourPortEnabled"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_PopMenu('JOURNAL'); showJournal = 0"
		actionEnter "mouseOverPortrait = 3"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "JournalPortrait4"
		area 1140 382 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4 and toggleJournal ~= 0 and zZjourPortEnabled"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_PopMenu('JOURNAL'); showJournal = 0"
		actionEnter "mouseOverPortrait = 4"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		name "JournalPortrait5"
		area 1140 474 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5 and toggleJournal ~= 0 and zZjourPortEnabled"
		action "Infinity_OnPortraitLClick(0)"
		actionAlt "Infinity_PopMenu('JOURNAL'); showJournal = 0"
		actionEnter "mouseOverPortrait = 5"
		actionExit "mouseOverPortrait = -1"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
		clickable lua "sidebarsGreyed ~= 1"
	}
	button
	{
		area 1134 0 67 16
		bam GUIPNL10
		action
		"
			if not zZjourPortEnabled then zZjourPortEnabled = true else zZjourPortEnabled = false end
		"
	}
	label
	{
		name "JournalLarge_Bkg"
		enabled "toggleJournal == 1"
		area 88 96 944 768
		mosaic "FCGUIJRN"
	}
	label
	{
		name 'JournalLarge_BkgY'
		enabled "toggleJournal == 1 and journalMode ~= const.JOURNAL_MODE_EDIT"
		area 474 286 167 468
		mosaic 'FCGUIJR2'
		respectClipping
	}
	label
	{
		name 'JournalLarge_BkgYEdit'
		enabled "toggleJournal == 1 and journalMode == const.JOURNAL_MODE_EDIT"
		area 243 337 633 360
		mosaic 'FCGUIJR3'
	}
	label
	{
		name 'JournalLarge_Shnur'
		enabled "toggleJournal == 1 and journalMode ~= const.JOURNAL_MODE_EDIT"
		area 551 286 15 461
		bam 'GUISCRP'
		frame 5
		scaleToClip
	}
	label
	{
		name 'journalBig_Title'
		enabled "toggleJournal == 1"
		area		323 129 475 37
		text		"JOURNAL_LABEL"
		text style	"title"
		text align center center
	}
	button
	{
		name 'journalBig_Quest'
		enabled "toggleJournal == 1"
		area		156 212 237 70
		bam 'GUIBUTST'
		frame lua "zZJournalSequence[1][1]"
		text		"QUESTS_LABEL"
		text style	"button"
		text point	16
		action
		"
			if zZJournalSequence[1][1] ~= 2 then
				zzToogleQuestJournal()
				zzCloseAll()
				journalMode = const.JOURNAL_MODE_QUESTS
			end
		"
	}
	button
	{
		name 'journalBig_Journ'
		enabled "toggleJournal == 1"
		area		725 212 237 70
		bam 'GUIBUTST'
		frame lua "zZJournalSequence[1][2]"
		text		"JOURNAL_LABEL"
		text style	"button"
		text point	16
		action
		"
			if zZJournalSequence[1][2] ~= 2 then
				zzToogleQuestJournal()
				zzCloseAll()
				journalMode = const.JOURNAL_MODE_JOURNAL
			end
		"
	}
	button
	{
		enabled "toggleJournal == 1"
		name "LJChapter"
		area		448 213 223 60
		text lua	"chapterText()"
		text style	"title"
		text align center center
		text color '5'
		text point 24
		mosaic		"FCJRCHLG"
		action
		"
			zzCloseAll()
		"
	}
	button
	{
		name "LJChapterPrev"
		enabled "toggleJournal == 1"
		area		403 212 40 61
		bam 		"GUIPRC"
		sequence 	3
		action
		"
			incrChapter(-1)
		"	
	}
	button
	{
		name "LJChapterNext"
		enabled "toggleJournal == 1"
		area		677 212 40 61
		bam 		"GUIPRC"
		sequence 	2
		action
		"
			incrChapter(1)
		"	
	}
	label
	{
		name "journalBig_Active"
		area		178 288 146 60
		enabled		"toggleJournal == 1 and journalMode ~= const.JOURNAL_MODE_EDIT" 
		text lua	"zZjournalLblTitle(1)"
		text style	"label_parchment"
		text point	14
		mosaic		"PCHAPTER"
	}
	label
	{
		name "journalBig_Completed"
		area		792 288 146 60
		enabled		"toggleJournal == 1 and journalMode ~= const.JOURNAL_MODE_EDIT"
		text lua	"zZjournalLblTitle(2)"
		text style	"label_parchment"
		text point	14
		mosaic		"PCHAPTER"
	}
	list
	{
		column
		{
			width 10
			label
			{
				area				0 0 31 31
				enabled				"getArrowEnabled(rowNumber) and hideFinished(rowNumber)"
				bam					"PCHEV"
				frame lua			"getArrowFrame(rowNumber)"
				text style			"label_parchment"
				align				top center
			}
		}
		column { 
			width 90 
			label
			{
				enabled 			"questEnabled(rowNumber) and hideFinished(rowNumber)"
				area				0 0 -1 -1
				rectangle			1
				rectangle opacity	125
			}
			label
			{
				enabled 			"questEnabled(rowNumber) and hideFinished(rowNumber) and zZgetLastQuest(rowNumber)"
				area				285 0 31 31
				bam					"FCFLAGIT"
				align				center center
			}
			label
			{	
				enabled				"questEnabled(rowNumber) and hideFinished(rowNumber)"
				area				8 0 -1 -1
				text lua			"getQuestText(rowNumber)"
				text style			"label"
				align				left center
			}
			label
			{
				enabled				"objectiveEnabled(rowNumber) and hideFinished(rowNumber)"
				area				16 0 -1 -1
				pad					0 10 0 10
				text lua			"getObjectiveText(rowNumber)"
				text style			"normal_parchment"
			}
			label
			{
				enabled				"entryEnabled(rowNumber) and hideFinished(rowNumber)"
				area				16 0 -1 -1
				pad					0 10 0 10
				text lua			"getEntryText(rowNumber)"
				text style			"normal_parchment"
				text color			M
			}
		}
		enabled		"journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 1"
		name "zZquestActiveList"
		rowheight	dynamic
		hidehighlight
		seperator	"showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'GUISCRP'
		area		178 358 370 384
		action
		"
			if(questDisplay[selectedQuest].expanded) then 
				questDisplay[selectedQuest].expanded = nil
			else
				questDisplay[selectedQuest].expanded = 1
			end
		"
	}
	list
	{
		column
		{
			width 10
			label
			{
				area				0 0 31 31
				enabled				"getArrowEnabled(rowNumber) and hideUnfinished(rowNumber)"
				bam					"PCHEV"
				frame lua			"getArrowFrame(rowNumber)"
				text style			"label_parchment"
				align				top center
			}
		}
		column { 
			width 90 
			label
			{
				enabled 			"questEnabled(rowNumber) and hideUnfinished(rowNumber)"
				area				0 0 -1 -1
				rectangle			1
				rectangle opacity	150
			}
			label
			{
				enabled 			"questEnabled(rowNumber) and hideUnfinished(rowNumber) and zZgetLastQuest(rowNumber)"
				area				285 0 31 31
				bam					"FCFLAGIT"
				align				center center
			}
			label
			{	
				enabled				"questEnabled(rowNumber) and hideUnfinished(rowNumber)"
				area				8 0 -1 -1
				text lua			"getQuestText(rowNumber)"
				text style			"label"
				align				left center
			}
			label
			{
				enabled				"objectiveEnabled(rowNumber) and hideUnfinished(rowNumber)"
				area				16 0 -1 -1
				pad					0 10 0 10
				text lua			"getObjectiveText(rowNumber)"
				text style			"normal_parchment"
			}
			label
			{
				enabled				"entryEnabled(rowNumber) and hideUnfinished(rowNumber)"
				area				16 0 -1 -1
				pad					0 10 0 10
				text lua			"getEntryText(rowNumber)"
				text style			"normal_parchment"
				text color			M
			}
		}
		enabled		"journalMode == const.JOURNAL_MODE_QUESTS and toggleJournal == 1"
		name "zZquestCompleteList"
		rowheight	dynamic
		hidehighlight
		seperator	"showObjectiveSeperator(rowNumber)"
		table		"questDisplay"
		var			selectedQuest
		scrollbar	'GUISCRP'
		area		578 358 370 384
		action
		"
			if(questDisplay[selectedQuest].expanded) then 
				questDisplay[selectedQuest].expanded = nil
			else
				questDisplay[selectedQuest].expanded = 1
			end
		"
	}
	label
	{
		name "zzLGSearchLabel"
		enabled 	"journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 1"
		area		578 358 362 28
		fill		50 50 50 150
	}
	edit
	{
		name "zzLGSearchEdit"
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 1"
		area		596 363 337 24
		var 		journalSearchString
		placeholder	"ENTER_SEARCH_TERM_NORMAL"
		text style	"edit"
		maxlines 	1
	}
	list
	{
		column
		{
			width 100
			--light
			label
			{
				enabled 		"(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and not getJournalDarken(rowNumber) and NotMyNotes(rowNumber)"
				area 			0 0 -1 -1
				fill 			0 0 0 10
			}
			label
			{
				enabled 		"getJournalTitleEnabled(rowNumber) and not getJournalDarken(rowNumber) and NotMyNotes(rowNumber)"
				area			0 0 -1 -1
				pad				0 16 0 0
				text lua		"'^M' .. getJournalTitleText(rowNumber) .. '^-'"
				text style		"label_parchment"
				text color		0 120 0 255
			}
			label
			{
				enabled 		"getJournalEntryEnabled(rowNumber) and not getJournalDarken(rowNumber) and NotMyNotes(rowNumber)"
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"zZnteColorize(getJournalEntryText(rowNumber))"
				text style		"normal_parchment"
			}
			label
			{
				enabled			"(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and getJournalDarken(rowNumber) and NotMyNotes(rowNumber)"
				area			0 0 -1 -1
				fill			0 0 0 150
			}
			label
			{
				enabled			"getJournalTitleEnabled(rowNumber) and getJournalDarken(rowNumber) and NotMyNotes(rowNumber)"
				area			0 0 -1 -1
				pad				0 16 0 0
				text lua		"'^R' .. getJournalTitleText(rowNumber) .. '^-'"
				text style		"label_parchment"
				text color		255 100 100 255
			}
			label
			{
				enabled			"getJournalEntryEnabled(rowNumber) and getJournalDarken(rowNumber) and NotMyNotes(rowNumber)"
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"zZnteColorize(getJournalEntryText(rowNumber))"
				text style		"normal_parchment"
				text color		'B'
			}
		}
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 1"
		name "zzLGJournalString"
		seperator	"getJournalEntryEnabled(rowNumber)"
		rowheight	dynamic
		hidehighlight
		table		"journalDisplay"
		var			selectedJournal
		scrollbar	'GUISCRP'
		area		178 363 370 371
		actionDbl
		"
			zZeditJourEntry()
		"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled 		"(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and not getJournalDarken(rowNumber) and myNotes(rowNumber)"
				area 			0 0 -1 -1
				fill 			0 0 0 10
			}
			label
			{
				enabled 		"getJournalTitleEnabled(rowNumber) and not getJournalDarken(rowNumber) and myNotes(rowNumber)"
				area			0 0 -1 -1
				pad				0 16 0 0
				text lua		"'^M' .. getJournalTitleText(rowNumber) .. '^-'"
				text style		"label_parchment"
				text color		0 120 0 255
			}
			label
			{
				enabled 		"getJournalEntryEnabled(rowNumber) and not getJournalDarken(rowNumber) and myNotes(rowNumber)"
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"zzHideMyNotes(zZnteColorize(getJournalEntryText(rowNumber)))"
				text style		"normal_parchment"
			}
			label
			{
				enabled			"(getJournalTitleEnabled(rowNumber) or getJournalEntryEnabled(rowNumber)) and getJournalDarken(rowNumber) and myNotes(rowNumber)"
				area			0 0 -1 -1
				fill			0 0 0 150
			}
			label
			{
				enabled			"getJournalTitleEnabled(rowNumber) and getJournalDarken(rowNumber) and myNotes(rowNumber)"
				area			0 0 -1 -1
				pad				0 16 0 0
				text lua		"'^R' .. getJournalTitleText(rowNumber) .. '^-'"
				text style		"label_parchment"
				text color		255 100 100 255
			}
			label
			{
				enabled			"getJournalEntryEnabled(rowNumber) and getJournalDarken(rowNumber) and myNotes(rowNumber)"
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"zzHideMyNotes(zZnteColorize(getJournalEntryText(rowNumber)))"
				text style		"normal_parchment"
				text color		'B'
			}
		}
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 1"
		name "zzLGNotesString"
		seperator	"getJournalEntryEnabled(rowNumber)"
		rowheight	dynamic
		hidehighlight
		table		"journalDisplay"
		var			selectedJournal
		scrollbar	'GUISCRP'
		area		578 398 370 340
		actionDbl
		"
			zZeditJourEntry()
		"
	}
	button
	{
		name "journalBig_AddEntry"
		area		578 288 146 60
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 1"
		text		"ADD_ENTRY_LABEL"
		text style	"label_parchment"
		bam "FCJRNBTN"
		action 
		"
			journalMode = const.JOURNAL_MODE_EDIT
			journalNoteEdit = ''
			journalNoteEditRef = nil
			Infinity_FocusTextEdit('journalNoteEditArea')
		"
	}
	button
	{
		name "journalBig_EditEntry"
		area		402 288 146 60
		enabled		"journalMode == const.JOURNAL_MODE_JOURNAL and toggleJournal == 1"
		clickable lua	"journalEntryClickable(selectedJournal)"
		text 		"EDIT_ENTRY_LABEL"
		text style	"label_parchment"
		bam "FCJRNBTN"
		action
		"
			zZeditJourEntry()
		"
	}
	label
	{
		name "zzEditJournal1"
		enabled			"journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		area			366 311 382 34
		text style		"normal_parchment"
		text			"WRITE_ENTRY_TEXT"
		text align center center
		text color 'M'
		text point 14
	}
	label
	{
		name "zzEditJournal2"
		enabled			"journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		area			388 349 294 39
		text style		"label"
		text color		'L'
		text lua		"Infinity_GetTimeString()"
		text align center center
	}
	edit
	{
		name "zzEditJournal3"
		enabled			"journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		area			261 396 598 288
		text style		"edit_parchment"
		var				journalNoteEdit
		scrollbar		'GUISCRP'
	}
	button
	{
		name "zzEditJournal4"
		enabled			"journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		area			404 778 140 32
		bam				"GUIBUTNS"
		text			"CANCEL_BUTTON"
		text style		"button"
		action 
		"
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		name "zzEditJournal5"
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		area			576 778 140 32
		bam				"GUIBUTNS"
		text			"DONE_BUTTON"
		text style		"button"
		action
		"
			zZsaveJourEntry()
		"
	}
	button
	{
		name "zzJournalQuest"
		enabled "(journalMode == const.JOURNAL_MODE_QUESTS or journalMode == const.JOURNAL_MODE_JOURNAL) and toggleJournal == 1"
		area 340 775 200 44
		bam "GUIBUTNT"
		sequence 1
		text lua "stringsAll.zZquestList"
		text style "button"
		action 
		"
			Infinity_PushMenu('JOURNAL_QUEST_LIST')
		"
	}
	button
	{
		name "zzJournalRecent"
		enabled "(journalMode == const.JOURNAL_MODE_QUESTS or journalMode == const.JOURNAL_MODE_JOURNAL) and toggleJournal == 1"
		area 580 775 200 44
		bam "GUIBUTNT"
		sequence 1
		text "RECENT_EVENTS_LABEL"
		text style "button"
		action 
		"
			Infinity_PushMenu('JOURNAL_RECENT_EVENTS')
		"
	}
	button
	{
		name "zzEditJournal6"
		enabled 	"journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		clickable lua "string.find(journalNoteOld,stringsAll.zzNoteTw)"
		area 		688 349 178 39
		text lua	"t('FC_MY_NOTES_DELETE')"
		text style 	"button_parchment"
		text align 	right center
		text color	'M'
		action 
		"
			journalNoteEditRef = getJournalEntryRef(selectedJournal)
			journalNoteOld = Infinity_FetchString(journalNoteEditRef)
			if string.find(journalNoteOld,stringsAll.zzNoteTw) then
				journalNoteEditRef = getJournalEntryRef(selectedJournal)
				journalNoteEdit = ''
			end
			Infinity_OnEditUserEntry(journalNoteEditRef, journalNoteEdit)
			journalMode = const.JOURNAL_MODE_JOURNAL
		"
	}
	button
	{
		name "zzRevertJNote"
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		clickable lua "zZreserveNote ~= ''"
		area 404 698 140 32
		text "REVERT_BUTTON"
		text style "button_parchment"
		action 
		"
			journalNoteEdit = zZreserveNote
		"
	}
	button
	{
		name "zzClearJNote"
		enabled "journalMode == const.JOURNAL_MODE_EDIT and toggleJournal == 1"
		clickable lua "journalNoteEdit ~= ''"
		area 576 698 140 32
		text "CLEAR_BUTTON"
		text style "button_parchment"
		action 
		"
			zZreserveNote = journalNoteEdit
			journalNoteEdit  = ''
		"
	}
}
menu
{
	name 'JOURNAL_QUEST_LIST'
	align center center
	modal
	onOpen
	"
		zZquestListTable = {}
		zZquestListAllList = {}
		zZquestListCreate()
		zZsetcurrQuestList()
		currQuestAllList = nil
		if toggleJournal == 0 then
			CheckPauseJournalBegin()
			zzLockScrolJournal(1)
		end
	"
	onClose
	"
		zZquestListAllList = {}
		zZquestListTable = {}
		if toggleJournal == 0 then
			zzLockScrolJournal(2)
			CheckPauseJournalEnd()
		end
	"
	label
	{
		area 0 0 944 768
		mosaic "FCGUIJRN"
	}
	label
	{
		area 68 186 641 471
		mosaic 'FCGUIJR4'
	}
	label
	{
		area		246 34 450 37
		text lua "stringsAll.zZquestList"
		text style	"title"
		text color	'O'
		text align center center
	}
	label
	{
		area		360 117 223 60
		text lua	"zZchapterText()"
		text style	"title"
		text align center center
		text color '5'
		text point 24
		mosaic		"FCJRCHLG"
	}
	button
	{
		area			110 133 35 34
		bam				'4CHECK'
		sequence lua	"zZgetQuestListFrame(1)"
		action			"zZsetQuestListVar(1)"
	}
	text
	{
		area			150 140 190 24
		text			'FC_QUESTS_ACTIVE'
		text style		'label'
		text color		'$'
		text align		left center
		action			"zZsetQuestListVar(1)"
	}
	button
	{
		area			660 133 35 34
		bam				'4CHECK'
		sequence lua	"zZgetQuestListFrame(2)"
		action			"zZsetQuestListVar(2)"
	}
	text
	{
		area			700 140 190 24
		text			'FC_QUESTS_COMPLETED'
		text style		'label'
		text color		'$'
		text align		left center
		action			"zZsetQuestListVar(2)"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled		"rowNumber == currQuestList"
				area		0 0 -1 -1
				fill		222 222 222 40
			}
			label
			{
				enabled		"zZgetQuestEnabled(rowNumber)"
				area		0 00 1 32
			}
			label
			{
				enabled		"zZgetQuestEnabled(rowNumber)"
				area		8 0 -1 -1
				text lua	"zZgetQuestString(rowNumber, currQuestList)"
				text style	'label'
				text align	left center
			}
		}
		area		76 200 322 444
		rowheight 	dynamic
		hidehighlight
		table		'zZquestListTable'
		var			currQuestList
		scrollbar	'GUISCRC'
		action		"currQuestAllList = nil"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled		"rowNumber == currQuestAllList"
				area		0 0 -1 -1
				fill		222 222 222 40
			}
			label
			{
				enabled		"zZgetQuestListEnabled(rowNumber)"
				area		0 00 1 32
			}
			label
			{
				enabled		"zZgetQuestListEnabled(rowNumber)"
				area		8 0 -1 -1
				text lua	"zZgetQuestListString(rowNumber)"
				text style	'normal_parchment'
				text align	left center
			}
		}
		area		422 200 442 444
		rowheight 	dynamic
		hidehighlight
		table		'zZquestListAllList'
		var			currQuestAllList
		scrollbar	'GUISCRP'
		actionDbl
		"
			if zZquestListAllList[currQuestAllList].closed == 0 then
				zZquestListAllList[currQuestAllList].closed = 1
			else
				zZquestListAllList[currQuestAllList].closed = 0
			end
		"
	}
	button
	{
		area 360 679 200 44
		on 'x'
		bam "GUIBUTNT"
		sequence 1
		text "DONE_BUTTON"
		text style "button"
		action 
		"
			Infinity_PopMenu('JOURNAL_QUEST_LIST')
		"
	}
}
menu
{
	name 'JOURNAL_RECENT_EVENTS'
	align center center
	modal
	onOpen
	"
		zZquestAllExport = {}
		zZquestListRecent()
		selectedRecEv = -1
		if toggleJournal == 0 then
			CheckPauseJournalBegin()
			zzLockScrolJournal(1)
		end
	"
	onClose
	"
		zZquestAllExport = {}
		if toggleJournal == 0 then
			zzLockScrolJournal(2)
			CheckPauseJournalEnd()
		end
	"
	label
	{
		area 0 0 672 672
		mosaic FCRECNEV
		
	}
	label
	{
		area 154 52 358 58
		text "RECENT_EVENTS_TITLE"
		text style "title"
		text color	'O'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled			"selectedRecEv ~= rowNumber and rowNumber % 2 ~= 0"
				area			0 0 -1 -1
				fill			220 215 190 20
			}
			label
			{
				enabled			"selectedRecEv == rowNumber"
				area			0 0 -1 -1
				fill			222 222 222 40
			}
			label
			{
				area			0 0 -1 -1
				pad				8 16 0 16
				text lua		"zZquestAllExport[rowNumber][2]"
				text style		"normal"
			}
		}
		name "zzRecentEventT"
		rowheight	dynamic
		hidehighlight
		table		"zZquestAllExport"
		var			selectedRecEv
		scrollbar	'GUISCRC'
		area		94 130 480 430
	}
	button
	{ 
		area		236 574 200 44
		text		"DONE_BUTTON"
		text style	'button'
		bam			GUIBUTNT
		sequence	2
		action
		"
			Infinity_PopMenu('JOURNAL_RECENT_EVENTS')
		"
	}
}
menu
{
	name 'SHOW_ACHIVEMENTS'
	align left top
	ignoreEsc
	onOpen "
		zZshowAch = 0
		zZachInit()
	"
	onClose "
		zZachDone = {}
		zZachActive = {}
		zZachNotDone = {}
		zZachievemTable = {}
	"
	label
	{
		area 0 0 1 1
		text lua "zZshowAchTextFlash()"
	}
}
menu
{
	name 'ACHIEVEMENTS'
	align center center
	modal
	onOpen "
		zZachGenerateTables()
		zZachActiveTab = 1
		zZshowAch = 1
		CheckPauseJournalBegin()
		zzLockScrolJournal(1)
		zZachSortTbl(zZachActiveTab, zZachSort)
	"
	onClose "
		zZshowAch = 0
		zZachDone = {}
		zZachActive = {}
		zZachNotDone = {}
		zzLockScrolJournal(2)
		CheckPauseJournalEnd()
	"
	label
	{
		area	0 -2 944 768
		mosaic	'FCGUIPRB'
	}
	button
	{
		area 205 130 160 44
		bam 'GUIBUTNT'
		sequence 0
		frame lua	"zZgetActiveFrame(1, zZachActiveTab)"
		scaleToClip
		text lua "zZachText.achDone"
		text style	"button"
		action "
			zZachActiveTab = 1
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		area 387 130 160 44
		bam 'GUIBUTNT'
		sequence 0
		frame lua	"zZgetActiveFrame(2, zZachActiveTab)"
		scaleToClip
		text lua "zZachText.achActive"
		text style	"button"
		clickable lua "zZachShowAchivementsActive == 1"
		action "
			zZachActiveTab = 2
			if zZachSort == 3 then zZachSort = 2 end
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		area 569 130 160 44
		bam 'GUIBUTNT'
		sequence 0
		frame lua	"zZgetActiveFrame(3, zZachActiveTab)"
		scaleToClip
		text lua "zZachText.achNoDone"
		text style	"button"
		clickable lua "zZachShowAchivementsNodone == 1"
		action "
			zZachActiveTab = 3
			if zZachSort == 3 then zZachSort = 2 end
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	label
	{
		area 248 34 446 38
		text lua "zZachText.achievems"
		text style	"title"
		text color	'O'
	}
	label
	{
		area 248 80 446 30
		text lua "zZgetNumAchivemDone()"
		text style	"title"
		text color	'$'
	}
	label
	{
		area		90 115 760 3
		progressbar lua "getPercent(#zZachDone, (#zZachActive + #zZachDone))"
		greyscale	0
		progressbar color	'Z'
		progressbar full	'Z'
		enabled "zZachShowAchivementsActive == 1"
	}
	button
	{
		area 140 668 20 20
		bam ROUNDBUT
		frame lua "zZgetActiveFrame(1, zZachSort)"
		scaleToClip
		action
		"
			zZachSort = 1
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		area 170 668 150 20
		text lua "zZachText.achSortNumber"
		text style	'label'
		text align	left center
		sound ''
		action
		"
			zZachSort = 1
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		area 140 688 20 20
		bam ROUNDBUT
		frame lua "zZgetActiveFrame(2, zZachSort)"
		scaleToClip
		action
		"
			zZachSort = 2
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		area 170 688 150 20
		text lua "zZachText.achSortLabel"
		text style	'label'
		text align	left center
		sound ''
		action
		"
			zZachSort = 2
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		clickable lua "zZachActiveTab == 1"
		area 140 708 20 20
		bam ROUNDBUT
		frame lua "zZgetActiveFrame(3, zZachSort)"
		scaleToClip
		action
		"
			zZachSort = 3
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	button
	{
		clickable lua "zZachActiveTab == 1"
		area 170 708 150 20
		text lua "zZachText.achSortDate"
		text style	'label'
		text align	left center
		sound ''
		action
		"
			zZachSort = 3
			zZachSortTbl(zZachActiveTab, zZachSort)
		"
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == zZcurrentItem"
				area 0 0 -1 -1
				fill 130 55 10 50
			}
			button
			{
				area 3 3 54 54
				bam lua "zZachDone[rowNumber][4]"
				frame lua "zZachDone[rowNumber][5]"
				scaleToClip
			}
			label
			{
				area 70 3 540 17
				text lua "zZachDone[rowNumber][2] .. zZgetAchDateString(zZachDone[rowNumber][8])"
				text style 'title'
				text color	'M'
				text align left center
			}
			label
			{
				area 70 23 540 34
				text lua "zZachDone[rowNumber][3]"
				text style 'label'
				text color	'5'
				text align left center
			}
		}
		enabled "zZachActiveTab == 1"
		area 160 205 620 415
		rowheight 60
		hidehighlight
		table	"zZachDone"
		var "zZcurrentItem"
		scrollbar 'GUISCRC'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == zZcurrentItem"
				area 0 0 -1 -1
				fill 130 55 10 50
			}
			button
			{
				area 3 3 54 54
				bam lua "zZachActive[rowNumber][4]"
				frame lua "zZachActive[rowNumber][5]"
				scaleToClip
			}
			label
			{
				area 70 3 540 17
				text lua "zZachActive[rowNumber][2]"
				text style 'title'
				text color	'M'
				text align left center
			}
			label
			{
				area 70 23 540 34
				text lua "zZachActive[rowNumber][3]"
				text style 'label'
				text color	'5'
				text align left center
			}
		}
		enabled "zZachActiveTab == 2"
		area 160 205 620 415
		rowheight 60
		hidehighlight
		table	"zZachActive"
		var "zZcurrentItem"
		scrollbar 'GUISCRC'
	}
	list
	{
		column
		{
			width 100
			label
			{
				enabled "rowNumber == zZcurrentItem"
				area 0 0 -1 -1
				fill 130 55 10 50
			}
			button
			{
				area 3 3 54 54
				bam lua "zZachNotDone[rowNumber][4]"
				frame lua "zZachNotDone[rowNumber][5]"
				scaleToClip
			}
			label
			{
				area 70 3 540 17
				text lua "zZachNotDone[rowNumber][2]"
				text style 'title'
				text color	'M'
				text align left center
			}
			label
			{
				area 70 20 540 20
				text lua "zZachNotDone[rowNumber][3]"
				text style 'label'
				text color	'5'
				text align left center
			}
			label
			{
				area 70 40 540 17
				text lua "zZgetReason(zZachNotDone[rowNumber])"
				text style 'label'
				text color	'5'
				text align left center
			}
		}
		enabled "zZachActiveTab == 3"
		area 160 205 620 415
		rowheight 60
		hidehighlight
		table	"zZachNotDone"
		var "zZcurrentItem"
		scrollbar 'GUISCRC'
	}
	button
	{
		area 357 680 230 44
		bam 'GUIBUTMT'
		text "DONE_BUTTON"
		text style "button"
		on escape
		action
		"
			Infinity_PopMenu('ACHIEVEMENTS')
		"
	}
}
`
function processQuestsWithStyle()
	out = ""
	for k,v in pairs(quests_old) do
		local questStrref = v[3]
		out = out .. "createQuest    ( " .. questStrref .. " )\n"
		
		for k2,v2 in pairs(journals_quests_old) do
			if(v2[2] == k) then
				local subgroup = v2[const.ENTRIES_IDX_SUBGROUP]
				if(subgroup == 0) then subgroup = "nil" end
				out = out .. "createEntry    ( " .. questStrref .. ", -1, " .. v2[1] .. ", {}, " .. subgroup .." )\n"
			end
		end
	end
	Infinity_Log(out)
end
`
menu
{
	name 'MESSAGE_SCREEN'
	align center center
	label
	{
		area 0 0 657 234
		mosaic GUIERR6Z
	}
	label
	{
		area 29 21 580 126
		text lua "Infinity_FetchString(messageScreenText)"
		text style	"label"
	}
}
`
function getDLCDescription()
	return Infinity_FetchString(dlcScreen:GetDLCDescription())
end
function getDLCTitle()
	return Infinity_FetchString(dlcScreen:GetDLCTitle())
end
function getDLCIndex()
	return dlcScreen:GetDLCIndex() .. "/" .. dlcScreen:GetDLCCount()
end
function isDLCBuyButtonClickable()
	local isBought = dlcScreen:GetDLCBought()
	return isBought == false
end

function setDLCPurchased(index, purchaseLevel)
	purchasedDLC[index] = purchaseLevel;
end
`
menu
{
	name 'START_DLC'
	align center center
	onClose
	"
		Infinity_PopMenu('START_DLC_STATUS')
	"
	label
	{
		area 0 0 1024 768
		mosaic 'FCGUIDLC'
	}
	label
	{
		area		60 0 906 56
		text        %str103043%
		text style  'title'
		text color	'O'
		text align	center center
	}
	label
	{
		area		588 568 326 48
		text lua	"getDLCIndex()"
		text style  'title'
		text color	'$'
		text align	center center
	}
	label
	{
		area		576 132 348 54
		text lua	"getDLCTitle()"
		text style  'title'
		text color	'F'
		text align	center center
	}
	text
	{
		area		588 228 326 334
		text lua	"getDLCDescription()"
		text style  'normal'
		scrollbar	'GUISCRC'		
	}
	label
	{
		area 154 92 362 568
		bitmap lua "dlcScreen:GetDLCImage()"
	}
	button 
	{
		bam 'GUIPRC'
		sequence 0
		area 22 274 56 140
		align center center
		action 
		"
			dlcScreen:DecrementDLCIndex()
		"
	}
	button 
	{
		bam 'GUIPRC'
		sequence 1
		area 946 270 52 140
		align center center
		action 
		"
			dlcScreen:IncrementDLCIndex()
		"
	}
	button 
	{
		on escape
		bam 'GUIBUTNT'
		sequence 0
		area 316 713 200 40
		align center center
		text style "button"
		text "BACK_BUTTON"
		action 
		"
			dlcScreen:OnDoneButtonClick()
		"
	}
	button 
	{
		bam 'GUIBUTWT'
		sequence 2
		area 600 648 298 40
		align center center
		text style "button"
		text "STRREF_GUI_DLC_RESTORE_PURCHASES"
		clickable lua "not e:IsAndroid()"
		action 
		"
			dlcScreen:RestorePurchases()
		"
	}
	button 
	{
		bam 'GUIBUTNT'
		frame 3
		area 526 713 200 40
		align center center
		text style "button"
		text "STRREF_GUI_DLC_INSTALLED"
		text color 'E'
		enabled "not isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}
	button 
	{
		bam 'GUIBUTNT'
		sequence 2
		area 526 713 200 40
		align center center
		text style "button"
		text "BUY_BUTTON"
		enabled "isDLCBuyButtonClickable()"
		action 
		"
			dlcScreen:OnBuyButtonClick()
		"
	}
}
`
dlcStatusDescriptionText = ""
dlcStatusButtonText = ""
dlcStatusState = 0

DLC_STATE_WAITING = 0
DLC_STATE_IN_PROGRESS = 1
DLC_STATE_SUCCESS = 2
DLC_STATE_FAILED = 3
DLC_STATE_CANCELLED = 4
DLC_STATE_RESTORING_PURCHASES = 5
DLC_STATE_RESTORING_PURCHASES_COMPLETE = 6
DLC_STATE_DOWNLOADING = 7

function checkDLCState()
	dlcStatusState = dlcScreen:GetDLCState()
	if dlcStatusState == DLC_STATE_WAITING then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_WAITING")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_IN_PROGRESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_IN_PROGRESS")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_SUCCESS then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_SUCCESS")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_FAILED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_FAILED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_CANCELLED then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_CANCELLED")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES")
		dlcStatusButtonText = t("BACK_BUTTON")
	elseif dlcStatusState == DLC_STATE_RESTORING_PURCHASES_COMPLETE then
		dlcStatusDescriptionText = t("STRREF_GUI_DLC_RESTORING_PURCHASES_COMPLETE")
		dlcStatusButtonText = t("CONTINUE_BUTTON")
	elseif dlcStatusState == DLC_STATE_DOWNLOADING then
		dlcScreen:GetDownloadString()
		dlcStatusButtonText = ""
	else
		dlcStatusDescriptionText = "WAFFLES_Dont Know How We Got Here_WAFFLES"
		dlcStatusButtonText = "WAFFLES_WAFFLES_WAFFLES"
	end
end

function getDLCStatusText()
	checkDLCState()
	return dlcStatusDescriptionText
end
`
menu
{
	name 'START_DLC_STATUS'
	align center center
	label
	{
		area 0 0 465 500
		mosaic 'FCGUIERR'
	}

	label
	{
		area 124 136 218 110
		text style "label"
		text lua "getDLCStatusText()"
	}

	button 
	{
		bam 'GUIBUTNT'
		sequence 0
		area 136 314 200 40
		align center center
		text style "button"
		text lua "dlcStatusButtonText"
		enabled "dlcStatusState ~= DLC_STATE_DOWNLOADING"
		action 
		"
			dlcScreen:OnErrorButtonClick();
		"
	}
}
`	
	dialogTable = {}
	dialogOverflowTable = {}
	hasDialogResponse = nil
	
	chatboxScrollToBottom = nil
	chatboxScrollTimeLast = 0
	chatboxContentHeight = 0
	chatboxOverflowed = nil
	chatboxJumpToBottom = nil
	
	-- The following two values determine how many item entries can exist.  We trim 
	-- the number of entries to numDialogTrimEntries once it has overflowed that value
	-- by numDialogOverflowLimit.
	numDialogTrimEntries = 512
	numDialogOverflowEntries = numDialogTrimEntries + 128
	
	lastTrimmedContentHeight = 0
	
	function getNumDialogTableEntries()
		local count = 0
		for _ in pairs(dialogTable) do count = count + 1 end
		return count
	end
	
	function trimDialogTableSize()
		local  numTableEntries = getNumDialogTableEntries()
		if (numTableEntries > numDialogOverflowEntries) then
			local numEntriesToRemove = numTableEntries - numDialogTrimEntries
			while (numEntriesToRemove > 0) do
				-- Get our table entry and calculate its size
				local tableEntry = dialogTable[1]
				local delta = Infinity_GetContentHeight(styles.normal.font, w, tableEntry.text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
				chatboxContentHeight = chatboxContentHeight - delta
				lastTrimmedContentHeight = lastTrimmedContentHeight + delta
					
				table.remove(dialogTable, 1)
				numEntriesToRemove = numEntriesToRemove - 1
			end
		end
	end
	
	function buildResponsesList()

		hasDialogResponse = nil
		dialogResponses = {}
		for k,v in pairs(worldPlayerDialogChoices) do
			if v.marker then
				table.insert(dialogResponses, v)
				hasDialogResponse = 1
			end
		end
	end
	function canShowDialogButton(num)
		-- Show the buttons if we have a response, and the dialog button is not enabled
		return dialogResponses and dialogResponses[num] ~= nil and showDialogButtonChoices()
	end
	
	function addDialogMessage(text,marker,makeTop)
		local tab = {}
		tab.text = text
		tab.marker = marker
		if(marker) then 
			dialogViewMode = nil
			if(text == "") then
				--empty markers are a signal, we shouldn't actually display them.
				if(makeTop == true) then
					--we'll ensure the next line is included in the visible content.
					chatboxContentHeight = 0
				end
				return
			else
				hasDialogResponse = 1
			end
		end
		
		--Calculate running total of dialog content height
		local x,y,w,h = Infinity_GetArea("worldPlayerDialogChoicesList")
		w = w - 18 --account for scrollbar influence on width
		local delta = Infinity_GetContentHeight(styles.normal.font, w, text, styles.normal.point, 1, styles.normal.useFontZoom) --1 for indent.
		chatboxContentHeight = chatboxContentHeight + delta
		
		if(marker and chatboxContentHeight > h) then
			--More to display than we have room for, put the responses in overflow and hide them behind button
			table.insert(dialogOverflowTable,tab)
		else
			table.insert(dialogTable,tab)
		end
		
		if(makeTop == true) then
			--we'll ensure the next line is included in the visible content.
			chatboxContentHeight = 0
		end
		
		trimDialogTableSize()
		
		triggerChatboxScroll()
		
		buildResponsesList()
	end
	function clearDialogResponses()
		for k,v in pairs(dialogTable) do
			if(v.marker) then
				table.remove(dialogTable,k)
				clearDialogResponses()
			end
		end
		hasDialogResponse = nil
		chatboxOverflowed = nil
		chatboxContentHeight = 0
		dialogOverflowTable = {}
	end
	function dialogEntrySelectable(row)
		return (dialogTable[row].marker ~= nil)
	end
	function showDialogButtonChoices()
		return not (not hasDialogResponse or dialogViewMode or #dialogOverflowTable > 0)
	end
	function getResponsePickable()
		return not hasDialogResponse or dialogViewMode or (gameOptions.m_bConfirmDialog == true)
	end
	function getDialogButtonText()
		if(dialogViewMode) then
			return t("DONE_BUTTON")
		end
		
		if(#dialogOverflowTable > 0) then
			return t("SHOW_MORE_RESPONSES_BUTTON")
		end
		
		if(gameOptions.m_bConfirmDialog == true) then
			return t("CHOOSE_RESPONSE_BUTTON")
		end
		
		return dialogButtonText
	end
	function triggerChatboxScroll()
		chatboxScrollToBottom = 1
		chatboxScrollTimeLast = Infinity_GetClockTicks()
	end
	function chatboxScroll(top, height, contentHeight)
		if(chatboxJumpToBottom and contentHeight > height) then
			chatboxJumpToBottom = nil
			return height-contentHeight
		end
		if(chatboxScrollToBottom == 0) then
			--defer to default scrolling
			return nil
		end
		if(contentHeight < height) then
			--no scrolling required, content fits
			chatboxScrollToBottom = nil
			return nil
		end
		local dT = Infinity_GetClockTicks() - chatboxScrollTimeLast
		chatboxScrollTimeLast = Infinity_GetClockTicks()
		top = top + lastTrimmedContentHeight
		lastTrimmedContentHeight = 0
		local newTop = (dT * -0.25) + top
		if (newTop + contentHeight > height + 200) then
			return (height - contentHeight + 200)
		end
		if(newTop + contentHeight < height) then
			chatboxScrollToBottom = 0
			return height - contentHeight
		end
		return newTop
	end
	function displayOverflowResponses()
		for k,v in pairs(dialogOverflowTable) do
			table.insert(dialogTable,v)
		end
		dialogOverflowTable = {}
		triggerChatboxScroll()
		buildResponsesList()
	end
	function GetFirstMarkedResponse()
		for k,v in pairs(dialogTable) do
			if v.marker ~= nil then
				return k
			end
		end
		return -1	
	end
	function onDialogButtonClick()
		if(dialogViewMode) then
			--In dialog view mode this button closes the menu.
			worldScreen:StopDialogHistory()
			return
		end
		
		if(#dialogOverflowTable > 0) then
			displayOverflowResponses()
			return
		end

		if(gameOptions.m_bConfirmDialog == true and hasDialogResponse) then
			-- if confirm dialog and choices available.
			worldScreen:OnDialogReplyClick(dialogTable[worldPlayerDialogSelection].marker)
			worldPlayerDialogSelection = 0
			return
		else
			-- no choices, just step.
			worldScreen:StepDialog()
		end
	end
	function getDialogRowClickable(row)
		return dialogTable[row].marker ~= nil
	end
	function isTouchActionbar()
		--Make this read from an option to make it easy to switch out.
		local default = 0
		if(e:IsTouchUI()) then default = 1 end
		local val = Infinity_GetINIValue('Program Options', 'Use Touch Actionbar', default)
		if (val ~= 0) then
			return 1
		else
			return nil
		end
	end
`
menu
{
	name 'WORLD_DIALOG_LEFT'
	align left center
	ignoreEsc
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_LEFT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWLSP
	}
}
menu
{
	name 'WORLD_DIALOG_LEFT_BUTTONS'
	align left center
	ignoreEsc
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'...'"
		text style "button"
		pad -3 -6 0 0
		enabled "not showDialogButtonChoices()"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			onDialogButtonClick()
		"
	}

	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'1'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(1)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[1].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'2'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(2)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[2].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'3'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(3)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[3].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'4'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(4)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[4].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'5'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(5)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[5].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'6'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(6)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[6].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'7'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(7)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[7].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'8'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(8)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[8].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'9'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(9)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[9].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'10'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(10)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[10].marker)
		"
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT'
	align right center
	ignoreEsc
	enabled "canShowDialogButton(11)"
	onOpen
	"
		Infinity_PushMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	onClose
	"
		Infinity_PopMenu('WORLD_DIALOG_RIGHT_BUTTONS')
	"
	label
	{
		area 0 0 80 1536
		mosaic GUIWRSP
	}
}
menu
{
	name 'WORLD_DIALOG_RIGHT_BUTTONS'
	align right center
	ignoreEsc
	enabled "canShowDialogButton(11)"
	label
	{
		area 0 0 85 780
		rectangle 4
	}
	button
	{
		area 15 25 54 54
		bam CBUTT
		scaleToClip
		text lua "'11'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(11)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[11].marker)
		"
	}
	button
	{
		area 15 100 54 54
		bam CBUTT
		scaleToClip
		text lua "'12'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(12)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[12].marker)
		"
	}
	button
	{
		area 15 175 54 54
		bam CBUTT
		scaleToClip
		text lua "'13'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(13)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[13].marker)
		"
	}
	button
	{
		area 15 250 54 54
		bam CBUTT
		scaleToClip
		text lua "'14'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(14)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[14].marker)
		"
	}
	button
	{
		area 15 325 54 54
		bam CBUTT
		scaleToClip
		text lua "'15'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(15)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[15].marker)
		"
	}
	button
	{
		area 15 400 54 54
		bam CBUTT
		scaleToClip
		text lua "'16'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(16)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[16].marker)
		"
	}
	button
	{
		area 15 475 54 54
		bam CBUTT
		scaleToClip
		text lua "'17'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(17)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[17].marker)
		"
	}

	button
	{
		area 15 550 54 54
		bam CBUTT
		scaleToClip
		text lua "'18'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(18)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[18].marker)
		"
	}

	button
	{
		area 15 625 54 54
		bam CBUTT
		scaleToClip
		text lua "'19'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(19)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[19].marker)
		"
	}
	button
	{
		area 15 700 54 54
		bam CBUTT
		scaleToClip
		text lua "'20'"
		text style "button"
		pad -3 -6 0 0
		enabled "canShowDialogButton(20)"
		clickable lua "not dialogEntryGreyed()"
		action
		"
			worldScreen:OnDialogReplyClick(dialogResponses[20].marker)
		"
	}
}
`
	currentButtonHelp = 11
	buttonHelp = 
	{
		{'GUILS10', 	 0,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_RETURNTOGAME'}, 			--  1	return to game
		{'GUILS10', 	 1,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAP'}, 					--  2	map
		{'GUILS10', 	 2,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_JOURNAL'},				--  3	journal
		{'GUILS10', 	 3,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_INVENTORY'}, 				--  4	inventory
		{'GUILS10', 	 4,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERRECORD'}, 		--  5	record
		{'GUILS10', 	 5,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_MAGESPELLS'}, 			--  6	mage book
		{'GUILS10', 	 6,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_PRIESTSPELLS'}, 			--  7	priest scroll
		{'GUILS10', 	 7,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_OPTIONS'}, 				--  8	options
		{'GUILS10', 	 8,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERARBITRATION'}, 	--  9	arbitration
		{'GUILS10', 	15,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_QUICKSAVE'}, 				-- 10	quick save
		{'GUILS10', 	16,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HELP'}, 					-- 11	help
		{'GUILS10', 	 9,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_REST'}, 					-- 12	rest
		{'GUILS10', 	14,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECT'}, 				-- 13	drag
		{'GUILS10', 	11,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_HIGHLIGHT'}, 				-- 14	highlight
		{'GUILS10', 	10,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_TOGGLEAI'}, 				-- 15	ai
		{'GUILS10', 	13,	-1,	0,	0, -1,			'',	'HELPTUTORIAL_SELECTALL'}, 				-- 16	select all
		{'',            -1,	0,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 17	player 1
		{'',            -1,	1,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 18	player 2
		{'',            -1,	2,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 19	player 3
		{'',            -1,	3,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 20	player 4
		{'',            -1,	4,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 21	player 5
		{'',            -1,	5,	0,	0, -1,			'',	'HELPTUTORIAL_CHARACTERPORTRAITS'}, 	-- 22	player 6
		{'',            -1,	-1,	1,	0, -1,			'',	'HELPTUTORIAL_CLOCK'}, 					-- 23	clock
		{'ROUNDBUT',	 0,	-1,	0,	1, -1,			'',	'HELPTUTORIAL_QUICKLOOT'}, 				-- 24	quick loot
		{'GUIBTACT',	64,	-1,	0,	0,  0,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 25
		{'GUIBTACT',	66,	-1,	0,	0,  1,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 26
		{'GUIBTACT',	22,	-1,	0,	0,  2,			'',	'HELPTUTORIAL_BARDSONG'}, 				-- 27
		{'GUIBTACT',	12,	-1,	0,	0,  3,			'',	'HELPTUTORIAL_CASTSPELLS'}, 			-- 28
		{'GUIBTACT',	34,	-1,	0,	0,  4,			'',	'HELPTUTORIAL_FINDTRAPS'}, 				-- 29
		{'GUIBTACT',	 4,	-1,	0,	0,  5,			'',	'HELPTUTORIAL_DIALOG'}, 				-- 30
		{'GUIBTACT',	20,	-1,	0,	0,  6,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 31
		{'GUIBTACT',	 0,	-1,	0,	0,  7,			'',	'HELPTUTORIAL_DEFEND'}, 				-- 32
		{'GUIBTACT',	14,	-1,	0,	0,  8,			'',	'HELPTUTORIAL_ATTACK'}, 				-- 33
		{'GUIBTACT',	40,	-1,	0,	0,  9,			'',	'HELPTUTORIAL_SHAPECHANGE'}, 			-- 34
		{'GUIBTACT',	38,	-1,	0,	0, 10,			'',	'HELPTUTORIAL_SPECIALABILITIES'}, 		-- 35
		{'GUIBTACT',	30,	-1,	0,	0, 11,			'',	'HELPTUTORIAL_STEALTH'}, 				-- 36
		{'GUIBTACT',	26,	-1,	0,	0, 12,			'',	'HELPTUTORIAL_THIEVING'}, 				-- 37
		{'GUIBTACT',	 8,	-1,	0,	0, 13,			'',	'HELPTUTORIAL_TURNUNDEAD'}, 			-- 38
		{'GUIBTACT',	18,	-1,	0,	0, 14,			'',	'HELPTUTORIAL_USEITEM'}, 				-- 39
		{'GUIBTACT',	58,	-1,	0,	0, 15,			'',	'HELPTUTORIAL_STOP'}, 					-- 40
		{'GUIBTACT',	20,	-1,	0,	0, 16,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 41
		{'GUIBTACT',	20,	-1,	0,	0, 17,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 42
		{'GUIBTACT',	20,	-1,	0,	0, 18,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 43
		{'GUIBTACT',	20,	-1,	0,	0, 19,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 44
		{'GUIBTACT',	20,	-1,	0,	0, 20,			'',	'HELPTUTORIAL_QUICKFORMATION'}, 		-- 45
		{'STONSLOT',	-1,	-1,	0,	0, 21,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 46
		{'STONSLOT',	-1,	-1,	0,	0, 22,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 47
		{'STONSLOT',	-1,	-1,	0,	0, 23,	'STONITEM',	'HELPTUTORIAL_QUICKITEM'}, 				-- 48
		{'STONSLOT',	12,	-1,	0,	0, 24,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 49
		{'STONSLOT',	12,	-1,	0,	0, 25,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 50
		{'STONSLOT',	12,	-1,	0,	0, 26,	'STONSPEL',	'HELPTUTORIAL_QUICKSPELLS'}, 			-- 51
		{'STONSLOT',	-1,	-1,	0,	0, 27,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 52
		{'STONSLOT',	-1,	-1,	0,	0, 28,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 53
		{'STONSLOT',	-1,	-1,	0,	0, 29,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 54
		{'STONSLOT',	-1,	-1,	0,	0, 30,	'STONWEAP',	'HELPTUTORIAL_QUICKWEAPON'}, 			-- 55
		{'STONSLOT',	-1,	-1,	0,	0, 31,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 56
		{'STONSLOT',	-1,	-1,	0,	0, 32,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 57
		{'STONSLOT',	-1,	-1,	0,	0, 33,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 58
		{'STONSLOT',	-1,	-1,	0,	0, 34,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 59
		{'STONSLOT',	-1,	-1,	0,	0, 35,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 60
		{'STONSLOT',	-1,	-1,	0,	0, 36,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 61
		{'STONSLOT',	-1,	-1,	0,	0, 37,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 62
		{'STONSLOT',	-1,	-1,	0,	0, 38,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 63
		{'STONSLOT',	-1,	-1,	0,	0, 39,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 64
		{'STONSLOT',	-1,	-1,	0,	0, 40,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 65
		{'STONSLOT',	-1,	-1,	0,	0, 41,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 66
		{'STONSLOT',	-1,	-1,	0,	0, 42,			'',	'HELPTUTORIAL_CONFIGURATION'}, 			-- 67
		{'STONSLOT',	-1,	-1,	0,	0, 43,			'',	'HELPTUTORIAL_ARROWLEFT'}, 				-- 68
		{'STONSLOT',	-1,	-1,	0,	0, 44,			'',	'HELPTUTORIAL_ARROWRIGHT'}, 			-- 69
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 67,			'',	'HELPTUTORIAL_SWITCHTOMAGE'}, 			-- 91
		{},
		{'STONSLOT',	-1,	-1,	0,	0, 69,			'',	'HELPTUTORIAL_SWITCHTOCLERIC'}, 		-- 93
	}
`
menu
{
	name	'FC_NPC_LIST'
	align center center
	modal
	onOpen
	"
		TEXT_charBio = ''
		TEXT_charName = t('FC_STRING_CHARNAME_ALL')
		zZallNPCListCreate()
	"
	onClose
	"
		zZallNPCList = {}
	"
	label
	{
		area 0 0 944 768
		mosaic "FCNPCALL"
	}
	label
	{
		area 248 30 448 46
		text lua "TEXT_charName"
		text style "title"
		text align	center center
	}
	label
	{
		area 108 80 728 52
		text "FC_NPCALL_LABEL"
		text style "title"
		text color	'O'
	}
	label
	{
		area  355 161 166 256
		bitmap lua "zZallNPCList[zZallNPCListVar].portrait"
	}
	list
	{
		column
		{
			width 35
			label
			{
				area 4 0 -1 -1
				text lua "zZNPCddataTbl[rowNumber][1]"
				text style 'label'
				text color 'O'
				text align left center
			}
		}
		column
		{
			width 65
			label
			{
				area 2 0 -1 -1
				text lua "zZNPCddataTbl[rowNumber][2]"
				text style 'label'
				text color '$'
				text align left center
			}
		}
		area 530 152 352 275
		rowheight 25
		table "zZNPCddataTbl"
		var "zZNPCddataVar"
		hidehighlight
	}
	text
	{
		area 351 442 529 203
		text lua "zZscriptDescColorize(TEXT_charBio)"
		text style "normal"
		text align	left top
		scrollbar	'GUISCRC'
	}
	list
	{
		column
		{
			width 11
			label
			{
				area 0 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, zZallNPCListVar)"
				respectClipping
			}
			label
			{
				area		1 1 36 50
				bam 		'GUIRSP20'
				sequence 	0
				frame		1
				scaleToClip
			}
			label
			{
				area 3 3 29 45
				bitmap lua "zZallNPCList[rowNumber].portrait"
				text align	center center
			}
		}
		column
		{
			width 9
			label
			{
				area -36 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, zZallNPCListVar)"
				respectClipping
			}
			label
			{
				area 0 0 -1 51
			}
		}
		column
		{
			width 80
			label
			{
				area -66 0 -1 -1
				mosaic lua "zZgetPortMosaic(rowNumber, zZallNPCListVar)"
				respectClipping
			}
			label
			{
				area 0 0 -1 -1
				text lua	"string.upper(Infinity_FetchString(zZallNPCList[rowNumber].name))"
				text align	left center
				text color	'B'
				text point	12
			}
		}
		action
		"
			zZNPCddataTblCrreeate(zZallNPCListVar)
		"
		rowheight dynamic
		area 70 154 264 490
		table "zZallNPCList"
		var zZallNPCListVar
		scrollbar	'GUISCRC'
		hidehighlight
	}
	button
	{
		bam			GUIBUTNT
		area		374 676 201 44
		text  "DONE_BUTTON"
		text style "button"
		action
		"
			Infinity_PopMenu('FC_NPC_LIST');
		"
	}
}
menu
{
	name 'HELP'
	align center center
	ignoreEsc
	onOpen
	"
		zzInCharacterRecord = 0
		journalOpen = 1
		currentButtonHelp = 11
		Infinity_PushMenu('LEFT_SIDEBAR_HELP')
		Infinity_PushMenu('RIGHT_SIDEBAR_HELP')
		Infinity_PushMenu('WORLD_ACTIONBAR_HELP')
		greySidebars()
		CheckPauseJournalBegin()
		zzLockScrolJournal(1)
	"
	onClose
	"
		Infinity_PopMenu('LEFT_SIDEBAR_HELP')
		Infinity_PopMenu('RIGHT_SIDEBAR_HELP')
		Infinity_PopMenu('WORLD_ACTIONBAR_HELP')
		journalOpen = 0
		ungreySidebars()
		zzLockScrolJournal(2)
		CheckPauseJournalEnd()
	"
	label
	{
		area 0 0 912 244
		mosaic GUIERR7Z
	}
	label { area 0 0 0 0  on 'g' action "Infinity_PopMenu('HELP')" }
	label { area 0 0 0 0  on 'j' }
	label { area 0 0 0 0  on 'm' }
	label { area 0 0 0 0  on 'i' }
	label { area 0 0 0 0  on 'r' }
	label { area 0 0 0 0  on 'w' }
	label { area 0 0 0 0  on 'p' }
	label { area 0 0 0 0  on 'o' }
	label { area 0 0 0 0  on 'z' }
	label { area 0 0 0 0  on 'space' }
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 34 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] ~= 0 and buttonHelp[currentButtonHelp][6] == -1"
		area 34 24 44 44
		bam lua "buttonHelp[currentButtonHelp][1]"
		sequence lua "buttonHelp[currentButtonHelp][2]"
		scaleToClip
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][3] == -1 and buttonHelp[currentButtonHelp][4] == 0 and buttonHelp[currentButtonHelp][5] == 0 and buttonHelp[currentButtonHelp][6] ~= -1"
		area 34 24 75 54
		bam lua "buttonHelp[currentButtonHelp][1]"
		frame lua "buttonHelp[currentButtonHelp][2]"
	}
	button
	{
		area 34 24 64 90
		enabled "buttonHelp[currentButtonHelp][3] ~= -1"
		portrait lua "buttonHelp[currentButtonHelp][3]"
	}
	label
	{
		area 14 114 104 20
		enabled "buttonHelp[currentButtonHelp][3] ~= -1"
		text lua "zZgetNameForHelp(buttonHelp[currentButtonHelp][3])"
		text style	'label'
		text color	'$'
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][4] ~= 0"
		area 29 16 95 120
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
	}
	label
	{
		enabled "buttonHelp[currentButtonHelp][7] ~= ''"
		area 34 24 52 52
		align center center
		bam lua "buttonHelp[currentButtonHelp][7]"
		frame lua "buttonHelp[currentButtonHelp][7]"
	}
	label
	{
		area 124 24 752 112
		text lua "zZscriptDescColorize(t(buttonHelp[currentButtonHelp][8]))"
		text style	"label"
		text align left top
	}
	button
	{
		area 306 164 300 40
		bam GUIBUTWT
		text "DONE_BUTTON"
		text style	"button"
		action 
		"
			Infinity_PopMenu('HELP')
		"
	}
}

menu
{
	name 'LEFT_SIDEBAR_HELP'
	align left top
	ignoreEsc
	onOpen 
	"
		Infinity_PushMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	onClose 
	"
		Infinity_PopMenu('LEFT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'leftSidebarBackground'
		area 0 0 0 0
	}
	button
	{
		area 6 16 66 46
		bam GUILS10
		sequence 0
		tooltip lua "getTooltipWithHotkey(2,%str16313%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 1
		"
	}
	button
	{
		area 6 60 66 46
		bam GUILS10
		sequence 1
		tooltip lua "getTooltipWithHotkey(4,15418)"
		glow lua "true"
		action
		"
			currentButtonHelp = 2
		"
	}
	button
	{
		area 6 106 66 46
		bam GUILS10
		sequence 2
		tooltip lua "getTooltipWithHotkey(3,%str16308%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 3
		"
	}
	button
	{
		area 6 152 66 46
		bam GUILS10
		sequence 3
		tooltip lua "getTooltipWithHotkey(0,%str16307%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 4
		"
	}
	button
	{
		area 6 198 66 46
		bam GUILS10
		sequence 4
		tooltip lua "getTooltipWithHotkey(1,%str16306%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 5
		"
	}
	button
	{
		area 6 244 66 46
		bam GUILS10
		sequence 5
		tooltip lua "getTooltipWithHotkey(5,%str16309%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 6
		"
	}
	button
	{
		area 6 290 66 46
		bam GUILS10
		sequence 6
		tooltip lua "getTooltipWithHotkey(6,%str14930%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 7
		"
	}
	button
	{
		area 6 336 66 46
		bam GUILS10
		sequence 7
		tooltip lua "getTooltipWithHotkey(7,%str16311%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 8
		"
	}
	button
	{
		area 3 385 66 46
		enabled "e:IsMultiplayer()"
		bam GUILS10
		sequence 8
		tooltip lua "getTooltipWithHotkey(8,%str16312%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 9
		"
	}
}
menu
{
	name 'LEFT_SIDEBAR_BOTTOM_HELP'
	align left bottom
	offset 0 -22
	--combined height of these buttons makes a menu with height = 231, menu is placed into lower left. y pos is offset from top of this menu.
	ignoreEsc
	label
	{
		area 0 382 260 20
	}
	button
	{
		area 142 220 66 46
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 15
		tooltip lua "getTooltipWithHotkey(28,%str74261%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 10
		"
	}
	button
	{
		area 76 220 66 46
		enabled "worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 16
		tooltip lua "Infinity_FetchString(%str74270%)"
		glow lua "true"
		action
		"
			currentButtonHelp = 11
		"
	}
	button
	{
		area 8 220 66 46
		bam GUILS10
		sequence 9
		tooltip lua "getTooltipWithHotkey(31,11942)"
		glow lua "true"
		action
		"
			currentButtonHelp = 12
		"
	}
	--begin clock
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 8 156 73 55
		bam "CGEAR"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 8 156 73 55
		bam "CDIAL"
		frame lua "timer:GetCurrentHour() % timer.TIMESCALE_HOUR_PER_DAY"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	label
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 8 156 73 55
		bam "CPEN"
		frame lua "timer:GetCurrentTime() % 24"
		useOverlayTint "worldScreen:CheckIfPaused()"
		overlayTint 180 180 180
	}
	button
	{
		enabled "worldScreen == e:GetActiveEngine()"
		area 8 156 73 55
		tooltip lua "worldScreen:GetCurrentTimeString()"
		glow lua "true"
		action
		"
			currentButtonHelp = 23
		"
	}
	--end clock
	label
	{
		--area is preset
		enabled "gameOptions.m_bRenderFrameTimes"
		frameTimes
	}
}

menu
{
	name 'RIGHT_SIDEBAR_HELP'
	align right top
	ignoreEsc
	onOpen
	"
		Infinity_PushMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	onClose
	"
		Infinity_PopMenu('RIGHT_SIDEBAR_BOTTOM_HELP')
	"
	label
	{
		name 'rightSidebarBackground'
		area 0 0 80 0
	}
	button
	{
		area 7 14 64 90
		portrait 0
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 0"
		glow lua "true"
		action
		"
			currentButtonHelp = 17
		"
		tooltip lua "Infinity_GetPortraitTooltip(0)"
	}
	button
	{
		area 7 106 64 90
		portrait 1
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 1"
		glow lua "true"
		action
		"
			currentButtonHelp = 18
		"
		tooltip lua "Infinity_GetPortraitTooltip(1)"
	}
	button
	{
		area 7 198 64 90
		portrait 2
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 2"
		glow lua "true"
		action
		"
			currentButtonHelp = 19
		"
		tooltip lua "Infinity_GetPortraitTooltip(2)"
	}
	button
	{
		area 7 290 64 90
		portrait 3
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 3"
		glow lua "true"
		action
		"
			currentButtonHelp = 20
		"
		tooltip lua "Infinity_GetPortraitTooltip(3)"
	}
	button
	{
		area 7 382 64 90
		portrait 4
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 4"
		glow lua "true"
		action
		"
			currentButtonHelp = 21
		"
		tooltip lua "Infinity_GetPortraitTooltip(4)"
	}
	button
	{
		area 7 474 64 90
		portrait 5
		bam GUIRSP10
		enabled "Infinity_GetNumCharacters() > 5"
		glow lua "true"
		action
		"
			currentButtonHelp = 22
		"
		tooltip lua "Infinity_GetPortraitTooltip(5)"
	}
}
menu
{
	name 'RIGHT_SIDEBAR_BOTTOM_HELP'
	align right bottom
	ignoreEsc
	--Buttons form a menu aligned bottom right, with height = 197, y is offset from top of that menu.
	button
	{
		area 6 0 71 48
		enabled "e:IsTouchUI() and worldScreen == e:GetActiveEngine()"
		bam GUILS10
		sequence 14
		glow lua "true"
		tooltip lua "Infinity_FetchString(11942)"
		action
		"
			currentButtonHelp = 13
		"
	}
	button
	{
		area -136 149 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(%str103144%)"
		bam GUILS10
		sequence 11
		glow lua "true"
		action
		"
			currentButtonHelp = 14
		"
	}
	button
	{
		area -70 149 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "getPartyAITooltip()"
		bam GUILS10
		sequence 10
		glow lua "true"
		action
		"
			currentButtonHelp = 15
		"
	}
	button
	{
		area -6 149 71 48
		enabled "worldScreen == e:GetActiveEngine()"
		tooltip lua "Infinity_FetchString(10485)"
		bam GUILS10
		sequence 13
		glow lua "true"
		action
		"
			currentButtonHelp = 16
		"
	}
}
menu
{
	name "WORLD_ACTIONBAR_HELP"
	align center bottom
	onOpen 
	"
	"
	onClose 
	"
	"
	ignoreEsc
	label
	{
		area 0 0 746 57
		mosaic GZWBTP10
	}
	button
	{
		area 24 17 22 22
		bam ROUNDBUT
		glow lua "true"
		scaleToClip
		action
		"
			currentButtonHelp = 24
		"
	}
	button
	{
		area 68 1 52 52
		actionBar 0
		enabled "buttonArray:GetButtonEnabled(0)"
		tooltip lua "actionBarTooltip[0]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(0)
		"
	}
	button
	{
		area 122 1 52 52
		actionBar 1
		enabled "buttonArray:GetButtonEnabled(1)"
		tooltip lua "actionBarTooltip[1]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(1)
		"
	}
	button
	{
		area 177 1 52 52
		actionBar 2
		enabled "buttonArray:GetButtonEnabled(2)"
		tooltip lua "actionBarTooltip[2]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(2)
		"
	}
	button
	{
		area 231 1 52 52
		actionBar 3
		enabled "buttonArray:GetButtonEnabled(3)"
		tooltip lua "actionBarTooltip[3]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(3)
		"
	}
	button
	{
		area 299 1 52 52
		actionBar 4
		enabled "buttonArray:GetButtonEnabled(4)"
		tooltip lua "actionBarTooltip[4]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(4)
		"
	}
	button
	{
		area 353 1 52 52
		actionBar 5
		enabled "buttonArray:GetButtonEnabled(5)"
		tooltip lua "actionBarTooltip[5]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(5)
		"
	}
	button
	{
		area 407 1 52 52
		actionBar 6
		enabled "buttonArray:GetButtonEnabled(6)"
		tooltip lua "actionBarTooltip[6]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(6)
		"
	}
	button
	{
		area 461 1 52 52
		actionBar 7
		enabled "buttonArray:GetButtonEnabled(7)"
		tooltip lua "actionBarTooltip[7]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(7)
		"
	}
	
	button
	{
		area 528 1 52 52
		actionBar 8
		enabled "buttonArray:GetButtonEnabled(8)"
		tooltip lua "actionBarTooltip[8]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(8)
		"
	}
	button
	{
		area 582 1 52 52
		actionBar 9
		enabled "buttonArray:GetButtonEnabled(9)"
		tooltip lua "actionBarTooltip[9]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(9)
		"
	}
	button
	{
		area 636 1 52 52
		actionBar 10
		enabled "buttonArray:GetButtonEnabled(10)"
		tooltip lua "actionBarTooltip[10]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(10)
		"
	}
	button
	{
		area 689 1 52 52
		actionBar 11
		enabled "buttonArray:GetButtonEnabled(11)"
		tooltip lua "actionBarTooltip[11]"
		glow lua "true"
		action
		"
			currentButtonHelp = 25 + buttonArray:GetButtonType(11)
		"
	}
}

